<!DOCTYPE html>
<html lang="en-US" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<meta http-equiv="Content-Type" content="UTF-8" />
<title>rmic</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)" />
<meta name="description" content="You use the rmic compiler to generate stub and skeleton class files using the Java Remote Method Protocol (JRMP) and stub and tie class files (IIOP protocol) for remote objects. The rmic compiler generates Object Management Group (OMG) Interface Definition Language (IDL)." />
<meta name="dcterms.created" content="2018-03-13T12:23:13Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Java Platform, Standard Edition Tools Reference" />
<meta name="dcterms.identifier" content="E91146-01" />
<meta name="dcterms.isVersionOf" content="JSWOR" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1993, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="http://docs.oracle.com/javase/10/index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="remote-method-invocation-rmi-commands.htm" title="Previous" type="text/html" />
<link rel="Next" href="rmiregistry.htm" title="Next" type="text/html" />
<link rel="alternate" href="JSWOR.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>

                    <script>var w=window;if(w.performance||w.mozPerformance||w.msPerformance||w.webkitPerformance){var d=document;AKSB=w.AKSB||{},AKSB.q=AKSB.q||[],AKSB.mark=AKSB.mark||function(e,_){AKSB.q.push(["mark",e,_||(new Date).getTime()])},AKSB.measure=AKSB.measure||function(e,_,t){AKSB.q.push(["measure",e,_,t||(new Date).getTime()])},AKSB.done=AKSB.done||function(e){AKSB.q.push(["done",e])},AKSB.mark("firstbyte",(new Date).getTime()),AKSB.prof={custid:"322179",ustr:"",originlat:"0",clientrtt:"1",ghostip:"23.212.3.15",ipv6:false,pct:"10",clientip:"45.78.37.67",requestid:"2aa51f82",region:"32996",protocol:"",blver:14,akM:"dsca",akN:"ae",akTT:"O",akTX:"1",akTI:"2aa51f82",ai:"206465",ra:"false",pmgn:"",pmgi:"",pmp:"",qc:""},function(e){var _=d.createElement("script");_.async="async",_.src=e;var t=d.getElementsByTagName("script"),t=t[t.length-1];t.parentNode.insertBefore(_,t)}(("https:"===d.location.protocol?"https:":"http:")+"//ds-aksb-a.akamaihd.net/aksb.min.js")}</script>
                    <script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7"></a> <span id="PAGE" style="display:none;">25/63</span> <!-- End Header -->
<a id="JSWOR705"></a>
<h1 id="JSWOR-GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7" class="sect1">rmic</h1>
<div>
<p><span>You use the <code class="codeph">rmic</code> compiler to generate stub and skeleton class files using the Java Remote Method Protocol (JRMP) and stub and tie class files (IIOP protocol) for remote objects.</span> The <code class="codeph">rmic</code> compiler generates Object Management Group (OMG) Interface Definition Language (IDL).</p>
<div class="section">
<p class="subhead1">Synopsis</p>
<pre dir="ltr">
rmic [ <span class="variable">options</span> ] <span class="variable">package-qualified-class-names</span>
</pre>
<dl>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-DFBC4D44-23F2-4446-8D0E-EB5388EC01AB"><!-- --></a><code class="codeph"><span class="variable">options</span></code></dt>
<dd>
<p>This represent the command-line <code class="codeph"><span class="variable">options</span></code> for the<code class="codeph">rmic</code> compiler. See <a href="rmic.htm#GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__OPTIONSFORTHERMICCOMPILER-EC0C28F5">Options for the rmic Compiler</a>.</p>
</dd>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-A19D271B-3492-4019-A57D-352B7F08100E"><!-- --></a><code class="codeph"><span class="variable">package-qualified-class-names</span></code></dt>
<dd>
<p>Class names that include their packages, for example, <code class="codeph">java.awt.Color</code>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section" id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__CIHFAJJC">
<p class="subhead1">Description</p>
<p><span class="bold">Deprecation Note:</span> Support for static generation of Java Remote Method Protocol (JRMP) stubs and skeletons has been deprecated. Oracle recommends that you use dynamically generated JRMP stubs instead, eliminating the need to use this tool for JRMP-based applications.</p>
<p>The <code class="codeph">rmic</code> compiler generates stub and skeleton class files using the JRMP and stub and tie class files (IIOP protocol) for remote objects. These class files are generated from compiled Java programming language classes that are remote object implementation classes. A remote implementation class is a class that implements the interface <code class="codeph">java.rmi.Remote</code>. The class names in the <code class="codeph">rmic</code> command must be for classes that were compiled successfully with the <code class="codeph">javac</code> command and must be fully package qualified. For example, running the <code class="codeph">rmic</code> command on the class file name <code class="codeph">HelloImpl</code> as shown here creates the <code class="codeph">HelloImpl_Stub.class</code> file in the <code class="codeph">hello</code> subdirectory (named for the class's package):</p>
<pre dir="ltr">
rmic hello.HelloImpl
</pre>
<p>A skeleton for a remote object is a JRMP protocol server-side entity that has a method that dispatches calls to the remote object implementation.</p>
<p>A tie for a remote object is a server-side entity similar to a skeleton, but communicates with the client with the IIOP protocol.</p>
<p>A stub is a client-side proxy for a remote object that&rsquo;s responsible for communicating method invocations on remote objects to the server where the actual remote object implementation resides. A client's reference to a remote object, therefore, is actually a reference to a local stub.</p>
<p>By default, the <code class="codeph">rmic</code> command generates stub classes that use the 1.2 JRMP stub protocol version only, as though the <code class="codeph">-v1.2</code> option were specified. See <a href="rmic.htm#GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__OPTIONSFORTHERMICCOMPILER-EC0C28F5">Options for the rmic Compiler</a>.</p>
<p>A stub implements only the remote interfaces, and not local interfaces that the remote object also implements. Because a JRMP stub implements the same set of remote interfaces as the remote object, a client can use the Java programming language built-in operators for casting and type checking. For IIOP, the <code class="codeph">PortableRemoteObject.narrow</code> method must be used.</p>
</div>
<!-- class="section" -->
<div class="section" id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__OPTIONSFORTHERMICCOMPILER-EC0C28F5">
<p class="subhead1">Options for the rmic Compiler</p>
<dl>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-3EC5E1F6-77E0-49D9-A210-5E814CD652B7"><!-- --></a><code class="codeph">-bootclasspath <span class="variable">path</span></code></dt>
<dd>
<p>Overrides the location of bootstrap class files.</p>
</dd>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-B3C7975F-6526-484F-AE89-B92D8A8E9931"><!-- --></a><code class="codeph">-classpath <span class="variable">path</span></code></dt>
<dd>
<p>Specifies the path the <code class="codeph">rmic</code> command uses to look up classes. This option overrides the default or the <code class="codeph">CLASSPATH</code> environment variable when it is set. Directories are separated by colons or semicolons, depending on your operating system. The following is the general format for <code class="codeph"><span class="variable">path</span></code>:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold"><span>Oracle Solaris, Linux, and OS X</span>:</span> <code class="codeph">.:<span class="variable">your_path</span></code>, for example: <code class="codeph">.:/usr/local/java/classes</code></p>
</li>
<li>
<p><span class="bold">Windows:</span> <code class="codeph">.;<span class="variable">your_path</span></code>, for example: <code class="codeph">.;/usr/local/java/classes</code></p>
</li>
</ul>
</dd>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-870E0A85-18B0-4B78-968D-23F3B0C584B8"><!-- --></a><code class="codeph">-d <span class="variable">directory</span></code></dt>
<dd>
<p>Specifies the root destination directory for the generated class hierarchy. You can use this option to specify a destination directory for the stub, skeleton, and tie files.</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold"><span>Oracle Solaris, Linux, and OS X</span>:</span> For example, the following command places the stub and skeleton classes derived from <code class="codeph">MyClass</code> into the directory <code class="codeph">/java/classes/exampleclass</code>:</p>
<pre dir="ltr">
rmic -d /java/classes exampleclass.MyClass
</pre></li>
<li>
<p><span class="bold">Windows:</span> For example, the following command places the stub and skeleton classes derived from <code class="codeph">MyClass</code> into the directory <code class="codeph">C:\java\classes\exampleclass</code>:</p>
<pre dir="ltr">
rmic -d C:\java\classes exampleclass.MyClass
</pre></li>
</ul>
<p>If the <code class="codeph">-d</code> option isn&rsquo;t specified, then the default behavior is as though <code class="codeph">-d</code> was specified. The package hierarchy of the target class is created in the current directory, and stub/tie/skeleton files are placed within it.</p>
</dd>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-45AEAF78-2F56-4BB1-BF05-165778026919"><!-- --></a><code class="codeph">-g</code></dt>
<dd>
<p>Enables the generation of all debugging information, including local variables. By default, only line number information is generated.</p>
</dd>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-FB4BD78A-4CE4-4478-997E-42770D3B9D7B"><!-- --></a><code class="codeph">-idl</code></dt>
<dd>
<p>Causes the <code class="codeph">rmic</code> command to generate OMG IDL for the classes specified and any classes referenced. IDL provides a purely declarative, programming language-independent way to specify an API for an object. The IDL is used as a specification for methods and data that can be written in and called from any language that provides CORBA bindings. This includes Java and C++ among others.</p>
<p>When the <code class="codeph">-idl</code> option is used, other options also include:</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code class="codeph">-always</code> or <code class="codeph">-alwaysgenerate</code> options force regeneration even when existing stubs/ties/IDL are newer than the input class.</p>
</li>
<li>
<p>The <code class="codeph">-factory</code> option uses the <code class="codeph">factory</code> keyword in generated IDL.</p>
</li>
<li>
<p>The <code class="codeph">-idlModule</code> from <code class="codeph">JavaPackage[.class]</code> <code class="codeph">toIDLModule</code> specifies <code class="codeph">IDLEntity</code> package mapping, for example: <code class="codeph">-idlModule</code> <code class="codeph">my.module my::real::idlmod</code>.</p>
</li>
<li>
<p><code class="codeph">-idlFile</code> <code class="codeph">fromJavaPackage[.class] toIDLFile</code> specifies <code class="codeph">IDLEntity</code> file mapping, for example: <code class="codeph">-idlFile test.pkg.X TEST16.idl</code>.</p>
</li>
</ul>
</dd>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-EA7B6DDC-129A-4C1A-8C49-10D671733D6C"><!-- --></a><code class="codeph">-iiop</code></dt>
<dd>
<p>Causes the <code class="codeph">rmic</code> command to generate IIOP stub and tie classes, rather than JRMP stub and skeleton classes. A stub class is a local proxy for a remote object and is used by clients to send calls to a server. Each remote interface requires a stub class, which implements that remote interface. A client reference to a remote object is a reference to a stub. Tie classes are used on the server side to process incoming calls, and dispatch the calls to the proper implementation class. Each implementation class requires a tie class.</p>
<p>If you call the <code class="codeph">rmic</code> command with the <code class="codeph">-iiop</code>, then it generates stubs and ties that conform to this naming convention:</p>
<pre dir="ltr">
_implementationName_stub.class
_interfaceName_tie.class
</pre>
<p>When you use the <code class="codeph">-iiop</code> option, other options also include:</p>
<ul style="list-style-type: disc;">
<li>
<p>The <code class="codeph">-always</code> or <code class="codeph">-alwaysgenerate</code> options force regeneration even when existing stubs/ties/IDL are newer than the input class.</p>
</li>
<li>
<p>The <code class="codeph">-nolocalstubs</code> option means don&rsquo;t create stubs optimized for same-process clients and servers.</p>
</li>
<li>
<p>The <code class="codeph">-noValueMethods</code> option must be used with the <code class="codeph">-idl</code> option. The <code class="codeph">-noValueMethods</code> option prevents the addition of <code class="codeph">valuetype</code> methods and initializers to emitted IDL. These methods and initializers are optional for value types, and are generated unless the <code class="codeph">-noValueMethods</code> option is specified with the <code class="codeph">-idl</code> option.</p>
</li>
<li>
<p>The <code class="codeph">-poa</code> option changes the inheritance from <code class="codeph">org.omg.CORBA_2_3.portable.ObjectImpl</code> to <code class="codeph">org.omg.PortableServer.Servant</code>. The <code class="codeph">PortableServer</code> module for the Portable Object Adapter (POA) defines the native <code class="codeph">Servant</code> type. In the Java programming language, the <code class="codeph">Servant</code> type is mapped to the <code class="codeph">Java org.omg.PortableServer.Servant</code> class. It serves as the base class for all POA servant implementations and provides a number of methods that can be called by the application programmer, and methods that are called by the POA and that can be overridden by the user to control aspects of servant behavior. This behavior is based on the <a href="http://www.omg.org/cgi-bin/doc?ptc/00-01-08" target="_blank">OMG IDL to Java Language Mapping Specification, ptc, 00-01-08</a> .</p>
</li>
</ul>
</dd>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-9CA44FB9-0610-428E-A683-C01D4EDAD7BE"><!-- --></a><code class="codeph">-J<span class="variable">argument</span></code></dt>
<dd>
<p>Used with any Java command, the <code class="codeph">-J</code> option passes the <code class="codeph"><span class="variable">argument</span></code> that follows it (no spaces between the <code class="codeph">-J</code> and the argument) to the Java interpreter.</p>
</dd>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-021ED9C1-C75B-40E6-B5BB-57411CD9C019"><!-- --></a><code class="codeph">-keep</code> or <code class="codeph">-keepgenerated</code></dt>
<dd>
<p>Retains the generated <code class="codeph">.java</code> source files for the stub, skeleton, and tie classes and writes them to the same directory as the <code class="codeph">.class</code> files.</p>
</dd>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-87D87E25-DFE8-47E3-9E34-38AE3150F06F"><!-- --></a><code class="codeph">-nowarn</code></dt>
<dd>
<p>Turns off warnings. When the <code class="codeph">-nowarn</code> options is used, the compiler doesn&rsquo;t print warnings.</p>
</dd>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-3CE6E930-C195-4C72-A5A1-CF8F3BDFF322"><!-- --></a><code class="codeph">-nowrite</code></dt>
<dd>
<p>Doesn&rsquo;t write compiled classes to the file system.</p>
</dd>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-DAFA2210-5FE4-4009-A03A-C7F4D79F8FC3"><!-- --></a><code class="codeph">-vcompat</code> (deprecated)</dt>
<dd>
<p>Generates stub and skeleton classes that are compatible with both the 1.1 and 1.2 JRMP stub protocol versions. This option was the default in releases before 5.0. The generated stub classes use the 1.1 stub protocol version when loaded in a JDK 1.1 virtual machine and use the 1.2 stub protocol version when loaded into a 1.2 (or later) virtual machine. The generated skeleton classes support both 1.1 and 1.2 stub protocol versions. The generated classes are relatively large to support both modes of operation. Note: This option has been deprecated. See <a href="rmic.htm#GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__CIHFAJJC">Description</a>.</p>
</dd>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-473DDA3C-DB27-4CA3-9E62-CCF94ABA7306"><!-- --></a><code class="codeph">-verbose</code></dt>
<dd>
<p>Causes the compiler and linker to print messages about what classes are being compiled and what class files are being loaded.</p>
</dd>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-11453D12-4B3C-4754-8A49-FB03A23410A3"><!-- --></a><code class="codeph">-v1.1</code> (deprecated)</dt>
<dd>
<p>Generates stub and skeleton classes for the 1.1 JRMP stub protocol version only. The <code class="codeph">-v1.1</code> option is useful only for generating stub classes that are serialization-compatible with existing, statically deployed stub classes generated by the <code class="codeph">rmic</code> command from JDK 1.1 that can&rsquo;t be upgraded (and dynamic class loading isn&rsquo;t being used). Note: This option has been deprecated. See <a href="rmic.htm#GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__CIHFAJJC">Description</a>.</p>
</dd>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-B3366B0F-16AC-4BBA-A4F9-0B6AB1254D8B"><!-- --></a><code class="codeph">-v1.2</code> (deprecated)</dt>
<dd>
<p>(Default) Generates stub classes for the 1.2 JRMP stub protocol version only. No skeleton classes are generated because skeleton classes aren&rsquo;t used with the 1.2 stub protocol version. The generated stub classes don&rsquo;t work when they&rsquo;re loaded into a JDK 1.1 virtual machine. Note: This option has been deprecated. See <a href="rmic.htm#GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__CIHFAJJC">Description</a>.</p>
</dd>
</dl>
</div>
<!-- class="section" -->
<div class="section">
<p class="subhead1">Environment Variables</p>
<dl>
<dt class="dlterm"><a id="GUID-A6AF75AE-DC98-483D-9FF2-030D6EF2F5C7__GUID-8B924D59-31C1-4281-8750-95DFAD1C4B8F"><!-- --></a><code class="codeph">CLASSPATH</code></dt>
<dd>
<p>Used to provide the system a path to user-defined classes.</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold"><span>Oracle Solaris, Linux, and OS X</span>:</span> Directories are separated by colons, for example: <code class="codeph">.:/usr/local/java/classes</code>.</p>
</li>
<li>
<p><span class="bold">Windows:</span> Directories are separated by colons, for example: <code class="codeph">.;C:\usr\local\java\classes</code>.</p>
</li>
</ul>
</dd>
</dl>
</div>
<!-- class="section" --></div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment186">
<tr>
<td class="cellalignment198">
<table class="cellalignment191">
<tr>
<td class="cellalignment190"><a href="remote-method-invocation-rmi-commands.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment190"><a href="rmiregistry.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1993, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment200">
<table class="cellalignment189">
<tr>
<td class="cellalignment190"><a href="http://docs.oracle.com/javase/10/index.html"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment190"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment190"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
