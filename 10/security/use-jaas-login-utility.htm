<!DOCTYPE html>
<html lang="en-US" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<meta http-equiv="Content-Type" content="UTF-8" />
<title>Use of JAAS Login Utility</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)" />
<meta name="dcterms.created" content="2018-03-13T07:25:33Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Java Platform, Standard Edition Security Developer&rsquo;s Guide" />
<meta name="dcterms.identifier" content="E91076-01" />
<meta name="dcterms.isVersionOf" content="JSSEC" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1993, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="http://docs.oracle.com/javase/10/index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="jaas-authorization.htm" title="Previous" type="text/html" />
<link rel="Next" href="use-jaas-login-utility-and-java-gss-api-secure-message-exchanges.htm" title="Next" type="text/html" />
<link rel="alternate" href="JSSEC.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-F41E74DF-EE54-4EB1-8609-49C6D324ADF5"></a> <span id="PAGE" style="display:none;">27/59</span> <!-- End Header -->
<h1 id="JSSEC-GUID-F41E74DF-EE54-4EB1-8609-49C6D324ADF5" class="sect1">Use of JAAS Login Utility</h1>
<div>
<p>The previous two tutorials, <a href="jaas-authentication.htm#GUID-0C6EB04B-D203-4688-A3E2-A7D442334623">JAAS Authentication</a> and <a href="jaas-authorization.htm#GUID-69241059-CCD0-49F6-838F-DDC752F9F19F">JAAS Authorization</a>, show how you can use the <span class="apiname">LoginContext</span> and <span class="apiname">Subject</span> classes to write a program to</p>
<ul style="list-style-type: disc;">
<li>authenticate the user to verify his or her identity and</li>
<li>associate an instance of a particular class representing the user (a <span class="apiname">Subject</span> instance) with an access control context in such a way that subsequent security-sensitive operations will be allowed if the current policy grants the user the required permissions.</li>
</ul>
<p>This tutorial describes a Login utility that performs the above operations and then executes any specified application as the authenticated user.</p>
<p>Use of the Login utility with a sample application is demonstrated in this tutorial. The next tutorial, <a href="use-jaas-login-utility-and-java-gss-api-secure-message-exchanges.htm#GUID-C1DFED9D-D3A1-4C11-95D8-3543935E87C8">Use of JAAS Login Utility and Java GSS-API for Secure Message Exchanges</a>, a client/server application using the Java GSS-API, also uses the Login utility.</p>
<p>It is not necessary to read the previous two tutorials on JAAS authentication and authorization prior to reading this one. However, you may want to refer to some sections in those tutorials to obtain further details regarding certain topics, such as <a href="jaas-authorization.htm#GUID-69241059-CCD0-49F6-838F-DDC752F9F19F">JAAS Authorization</a>. You should also read <a href="appendix-b-jaas-login-configuration-file.htm#GUID-7EB80FA5-3C16-4016-AED6-0FC619F86F8E">Appendix B: JAAS Login Configuration File</a> for information as to what a login configuration file is, since one is needed for this and all other tutorials in this series.</p>
<p>As with all tutorials in this series of tutorials, the underlying technology used to support authentication is Kerberos. See <a href="kerberos-requirements1.htm#GUID-EAA2758B-3071-4CDA-AEF1-D76F5271E998">Kerberos Requirements</a>.</p>
<ul style="list-style-type: disc;">
<li><a href="use-jaas-login-utility.htm#GUID-F92EBF93-2E18-4006-86CC-3D4C0DC6174E">What You Need to Know About the Login Utility</a></li>
<li><a href="use-jaas-login-utility.htm#GUID-A988A760-1F2E-4665-AC8B-BACDEBAED5B5">Application and Other File Requirements</a></li>
<li><a href="use-jaas-login-utility.htm#GUID-78D65FB0-34DC-4DEE-95A4-0C0BD1AE6330">The Sample Application Program</a></li>
<li><a href="use-jaas-login-utility.htm#GUID-DFC52892-6206-4D1F-96B3-B8F11C2536E1">The Login Configuration File</a></li>
<li><a href="use-jaas-login-utility.htm#GUID-FF7EBCB2-F3B9-4483-86A1-7EDA7ECA1689">The Policy File</a></li>
<li><a href="use-jaas-login-utility.htm#GUID-B3F1D0B9-D58A-469B-AF56-9636FE86FF0F">Running the Sample Program with the Login Utility</a></li>
</ul>
<p>If you want to first see the tutorial code in action, you can skip directly to <a href="use-jaas-login-utility.htm#GUID-B3F1D0B9-D58A-469B-AF56-9636FE86FF0F">Running the Sample Program with the Login Utility</a> and then go back to the other sections to learn more.</p>
</div>
<div class="sect2"><a id="GUID-F92EBF93-2E18-4006-86CC-3D4C0DC6174E"></a>
<h2 id="JSSEC-GUID-F92EBF93-2E18-4006-86CC-3D4C0DC6174E" class="sect2">What You Need to Know About the Login Utility</h2>
<div>
<p>You do not need to understand the code contained in <a href="source-code-jaas-and-java-gss-api-tutorials.htm#GUID-09D4192C-D855-49D6-BC62-E08F49ADB4F8__LOGIN.JAVA-338935D0"><code>Login.java</code></a>; you can just use it as is. However, you need to understand some facts about what it does so that your program, policy file, and login configuration file will properly work with it. Below is a summary of these facts, followed by sections with further information and examples.</p>
<p>The <code class="codeph">Login</code> class does the following:</p>
<ul style="list-style-type: disc;">
<li>Assumes it is passed, as arguments, your application's top-level class name, followed by any arguments your application may require.</li>
<li>Assumes that the class name of your top-level application class is also used as the name of the entry to be looked up in your login configuration file.</li>
<li>Specifies the <span class="apiname">TextCallbackHandler</span> class (from the <code class="codeph">com.sun.security.auth.callback</code> package) as the class to be used when communicating with the user. This class can prompt the user for a user name and password.</li>
<li>Uses a <span class="apiname">LoginContext</span> to authenticate the user. The <span class="apiname">LoginContext</span> invokes the appropriate authentication technology, or <span class="apiname">LoginModule</span>, to perform the authentication. <span class="apiname">LoginModules</span> use a <span class="apiname">CallbackHandler</span> (in our case, <span class="apiname">TextCallbackHandler</span>) as needed to communicate with the user.</li>
<li>Allows the user three attempts to successfully log in.</li>
<li>Creates an instance of the <code class="codeph">MyAction</code> class (also in <code class="codeph">Login.java</code>), passing it the application arguments, if any.</li>
<li>Invokes <code class="codeph">Subject.doAsPrivileged</code>, passing it a <span class="apiname">Subject</span> representing the user, the <code class="codeph">MyAction</code> instance, and a null <span class="apiname">AccessControlContext</span>. The result is that the public static main method from your application is invoked and your application code is considered to be executed on behalf of the user.</li>
</ul>
</div>
</div>
<div class="sect2"><a id="GUID-A988A760-1F2E-4665-AC8B-BACDEBAED5B5"></a>
<h2 id="JSSEC-GUID-A988A760-1F2E-4665-AC8B-BACDEBAED5B5" class="sect2">Application and Other File Requirements</h2>
<div>
<p>To utilize the Login utility to authenticate the user and execute your application, you may need a small number of additions or modifications to your login configuration file and policy file, as described in the following.</p>
<ul style="list-style-type: disc;">
<li><a href="use-jaas-login-utility.htm#GUID-2DA66897-B872-4DB3-B580-2A884321B52E">Application Requirements</a></li>
<li><a href="use-jaas-login-utility.htm#GUID-1475ADA8-4B71-4022-8295-209AFCEB89D9">Login Configuration File Requirements</a></li>
<li><a href="use-jaas-login-utility.htm#GUID-6F2F1165-FF1F-46BB-B18B-1D13E1A51BAF">Policy File Requirements</a></li>
</ul>
</div>
<div class="sect3"><a id="GUID-2DA66897-B872-4DB3-B580-2A884321B52E"></a>
<h3 id="JSSEC-GUID-2DA66897-B872-4DB3-B580-2A884321B52E" class="sect3">Application Requirements</h3>
<div>
<p>In order to utilize the Login utility, your application code does not need anything special. All you need is for the entry point of your application to be the <code class="codeph">main</code> method of a class you write, as usual.</p>
<p>The way to invoke Login such that it will authenticate the user and then instantiate <code class="codeph">MyAction</code> to invoke your application is the following:</p>
<pre dir="ltr">
java <span class="variable">&lt;options&gt;</span> Login <span class="variable">&lt;AppName&gt;</span> <span class="variable">&lt;app arguments&gt;</span> 
</pre>
<p>where <code class="codeph"><span class="variable">&lt;AppName&gt;</span></code> is your application's top-level class name and <code class="codeph"><span class="variable">&lt;app arguments&gt;</span></code> are any arguments required by your application. See <a href="use-jaas-login-utility.htm#GUID-B3F1D0B9-D58A-469B-AF56-9636FE86FF0F">Running the Sample Program with the Login Utility</a> for the full command used for this tutorial.</p>
</div>
</div>
<div class="sect3"><a id="GUID-1475ADA8-4B71-4022-8295-209AFCEB89D9"></a>
<h3 id="JSSEC-GUID-1475ADA8-4B71-4022-8295-209AFCEB89D9" class="sect3">Login Configuration File Requirements</h3>
<div>
<p>Whenever a LoginContext is used to authenticate the user, you need a login configuration file to specify the desired login module. See the <a href="jaas-authentication.htm#GUID-C595253D-3817-4CA6-9336-D7D5159C9680">The Login Configuration</a> section in the JAAS authentication tutorial for more information as to what a login configuration file is and what it contains.</p>
<p>When you use the Login utility, the name for the login configuration file entry must be exactly the same as your top-level application class name. See <a href="use-jaas-login-utility.htm#GUID-DFC52892-6206-4D1F-96B3-B8F11C2536E1">The Login Configuration File</a> in this tutorial for an example.</p>
</div>
</div>
<div class="sect3"><a id="GUID-6F2F1165-FF1F-46BB-B18B-1D13E1A51BAF"></a>
<h3 id="JSSEC-GUID-6F2F1165-FF1F-46BB-B18B-1D13E1A51BAF" class="sect3">Policy File Requirements</h3>
<div>
<p>Whenever you run an application with a security manager, you need a policy indicating the permissions granted to specific code, or to specific code being executed by a specific user (or users). One way of specifying the policy is by <code class="codeph">grant</code> statements in a policy file. See <a href="use-jaas-login-utility.htm#GUID-FF7EBCB2-F3B9-4483-86A1-7EDA7ECA1689">The Policy File</a> for more information.</p>
<p>If you use the Login utility to invoke your application, then you will need to grant it various permissions, as described in <a href="use-jaas-login-utility.htm#GUID-9E9CAD3D-5F80-424E-AE19-B102064054E4">Permissions Required by the Login and MyAction Classes</a>.</p>
</div>
</div>
</div>
<div class="sect2"><a id="GUID-78D65FB0-34DC-4DEE-95A4-0C0BD1AE6330"></a>
<h2 id="JSSEC-GUID-78D65FB0-34DC-4DEE-95A4-0C0BD1AE6330" class="sect2">The Sample Application Program</h2>
<div>
<p>The <a href="source-code-jaas-and-java-gss-api-tutorials.htm#GUID-09D4192C-D855-49D6-BC62-E08F49ADB4F8__SAMPLE.JAVA-3389388B"><code>Sample.java</code></a> application used for this tutorial performs the same actions as the <code class="codeph">SampleAction.java</code> application did in the previous (<a href="jaas-authorization.htm#GUID-69241059-CCD0-49F6-838F-DDC752F9F19F">JAAS Authorization</a>) tutorial. It does the following:</p>
<ul style="list-style-type: disc;">
<li>Reads and prints the value of the <code class="codeph">java.home</code> system property,</li>
<li>Reads and prints the value of the <code class="codeph">user.home</code> system property, and</li>
<li>Determines whether or not a file named <code class="codeph">foo.txt</code> exists in the current directory.</li>
</ul>
</div>
</div>
<div class="sect2"><a id="GUID-DFC52892-6206-4D1F-96B3-B8F11C2536E1"></a>
<h2 id="JSSEC-GUID-DFC52892-6206-4D1F-96B3-B8F11C2536E1" class="sect2">The Login Configuration File</h2>
<div>
<p>The <a href="source-code-jaas-and-java-gss-api-tutorials.htm#GUID-09D4192C-D855-49D6-BC62-E08F49ADB4F8__SAMPLE.CONF-33893A5C"><code>sample.conf</code></a> login configuration file for this tutorial contains a single entry, just like the login configuration file for the previous (<a href="jaas-authorization.htm#GUID-69241059-CCD0-49F6-838F-DDC752F9F19F">JAAS Authorization</a>) tutorial. The entry contents are the same since the class implementing the desired authentication technology in both cases is the <span class="apiname">Krb5LoginModule</span> in the <code class="codeph">com.sun.security.auth.module</code> package.</p>
<p>The only difference is the name used for the entry. In the previous tutorial we used the name "JaasSample", since that is the name used by the <span class="apiname">JaasAzn</span> class to look up the entry. When you use the Login utility with your application, it expects the name for your login configuration file entry to be the same as the name of your top-level application class. That application class for this tutorial is named "Sample" so that must also be the name of the login configuration file entry. Thus the login configuration file looks like the following:</p>
<pre dir="ltr">
Sample {
   com.sun.security.auth.module.Krb5LoginModule required;
};
</pre>
<p>The "required" indicates that login using the <span class="apiname">Krb5LoginModule</span> is required to "succeed" in order for authentication to be considered successful. The <span class="apiname">Krb5LoginModule</span> succeeds only if the name and password supplied by the user are successfully used to log the user into the Kerberos KDC.</p>
<p>See the <a href="https://docs.oracle.com/javase/10/docs/api/com/sun/security/auth/module/Krb5LoginModule.html" target="_blank"><span class="apiname">Krb5LoginModule</span></a> Javadoc API documentation for information about all the possible options that can be passed to <span class="apiname">Krb5LoginModule</span>.</p>
</div>
</div>
<div class="sect2"><a id="GUID-FF7EBCB2-F3B9-4483-86A1-7EDA7ECA1689"></a>
<h2 id="JSSEC-GUID-FF7EBCB2-F3B9-4483-86A1-7EDA7ECA1689" class="sect2">The Policy File</h2>
<div>
<p>The <span class="apiname">Login</span>, <span class="apiname">MyAction</span>, and <span class="apiname">Sample</span> classes all perform some security-sensitive operations and thus relevant permissions are required in a policy file, <a href="source-code-jaas-and-java-gss-api-tutorials.htm#GUID-09D4192C-D855-49D6-BC62-E08F49ADB4F8__SAMPLE.POLICY-33893EE3"><code>sample.policy</code></a>, in order for the operations to be executed.</p>
</div>
<div class="sect3"><a id="GUID-9E9CAD3D-5F80-424E-AE19-B102064054E4"></a>
<h3 id="JSSEC-GUID-9E9CAD3D-5F80-424E-AE19-B102064054E4" class="sect3">Permissions Required by the Login and MyAction Classes</h3>
<div>
<p>For this tutorial, you will create a <code class="codeph">Login.jar</code> JAR file containing the <code class="codeph">Login.class</code> and <code class="codeph">MyAction.class</code> files. You need to grant <code class="codeph">Login.jar</code> various permissions, specifically the ones required for invoking the security-sensitive methods the <code class="codeph">Login.jar</code> classes call, as well as all the permissions required by your application. Otherwise, access control checks will fail.</p>
<p>The simplest thing to do, and what we recommend, is to grant <code class="codeph">Login.jar AllPermission</code>. For this tutorial, the <code class="codeph">Login.jar</code> file is assumed to be in the current directory and the policy file includes the following:</p>
<pre dir="ltr">
grant codebase "file:./Login.jar" {
   permission java.security.AllPermission;
};
</pre></div>
</div>
<div class="sect3"><a id="GUID-25C2E3C5-F329-40F3-A701-878526AFEEB2"></a>
<h3 id="JSSEC-GUID-25C2E3C5-F329-40F3-A701-878526AFEEB2" class="sect3">Permissions Required by Sample</h3>
<div>
<p>(Note: This section is essentially a modified copy of the <a href="jaas-authorization.htm#GUID-9ADEB874-E415-4ABC-BB20-70FBBFF87F84">Permissions Required by SampleAction</a> section from the previous (<a href="jaas-authorization.htm#GUID-69241059-CCD0-49F6-838F-DDC752F9F19F">JAAS Authorization</a>) tutorial, since <code class="codeph">Sample</code> and <code class="codeph">SampleAction</code> perform the same operations and thus require the same permissions.)</p>
<p>The <code class="codeph">Sample</code> code does three operations for which permissions are required. It</p>
<ul style="list-style-type: disc;">
<li>reads the value of the <code class="codeph">java.home</code> system property.</li>
<li>reads the value of the <code class="codeph">user.home</code> system property.</li>
<li>checks to see whether or not a file named <code class="codeph">foo.txt</code> exists in the current directory.</li>
</ul>
<p>The permissions required for these operations are the following:</p>
<pre dir="ltr">
permission java.util.PropertyPermission "java.home", "read";
permission java.util.PropertyPermission "user.home", "read";
permission java.io.FilePermission "foo.txt", "read";
</pre>
<p>We need to grant these permissions to the code in <code class="codeph">Sample.class</code>, which we will place in a JAR file named <code class="codeph">Sample.jar</code>. However, our <code class="codeph">grant</code> statement will grant the permissions not just to the <span class="variable">code</span> but to a specific authenticated user executing the code. This illustrates how you can use a Principal designation in a <code class="codeph">grant</code> statement to restrict execution of security-sensitive operations in code to a specific user rather than allowing the permissions to all users executing the code.</p>
<p>Thus, as explained in <a href="jaas-authorization.htm#GUID-69241059-CCD0-49F6-838F-DDC752F9F19F">JAAS Authorization</a>, our <code class="codeph">grant</code> statement looks like the following:</p>
<pre dir="ltr">
grant codebase "file:./Sample.jar",
    Principal javax.security.auth.kerberos.KerberosPrincipal 
        "your_user_name@your_realm"  {

   permission java.util.PropertyPermission "java.home", "read";
   permission java.util.PropertyPermission "user.home", "read";
   permission java.io.FilePermission "foo.txt", "read";
};
</pre>
<div class="infobox-note" id="GUID-25C2E3C5-F329-40F3-A701-878526AFEEB2__GUID-E1C8CE5D-F8A4-4328-A22E-F91FAF17858C">
<p class="notep1">Note:</p>
<p><span class="bold">Important: You must substitute your Kerberos user name (complete with "@" and realm) for <code class="codeph">your_user_name@your_realm</code>.</span></p>
<p>For example, if your user name is <code class="codeph">mjones</code> and your realm is <code class="codeph">KRBNT-OPERATIONS.ABC.COM</code>, you would use <code class="codeph">mjones@KRBNT-OPERATIONS.ABC.COM</code>.</p>
</div>
</div>
</div>
</div>
<div class="sect2"><a id="GUID-B3F1D0B9-D58A-469B-AF56-9636FE86FF0F"></a>
<h2 id="JSSEC-GUID-B3F1D0B9-D58A-469B-AF56-9636FE86FF0F" class="sect2">Running the Sample Program with the Login Utility</h2>
<div>
<p>To execute the <code class="codeph">Sample</code> application with the Login utility, do the following:</p>
<ol>
<li>Place the following files into a directory:
<ul style="list-style-type: disc;">
<li>The <a href="source-code-jaas-and-java-gss-api-tutorials.htm#GUID-09D4192C-D855-49D6-BC62-E08F49ADB4F8__LOGIN.JAVA-338935D0"><code>Login.java</code></a> source file.</li>
<li>The <a href="source-code-jaas-and-java-gss-api-tutorials.htm#GUID-09D4192C-D855-49D6-BC62-E08F49ADB4F8__SAMPLE.JAVA-3389388B"><code>Sample.java</code></a> source file.</li>
<li>The <a href="source-code-jaas-and-java-gss-api-tutorials.htm#GUID-09D4192C-D855-49D6-BC62-E08F49ADB4F8__SAMPLE.CONF-33893A5C"><code>sample.conf</code></a> login configuration file.</li>
<li>The <a href="source-code-jaas-and-java-gss-api-tutorials.htm#GUID-09D4192C-D855-49D6-BC62-E08F49ADB4F8__SAMPLE.POLICY-33893EE3"><code>sample.policy</code></a> policy file.</li>
</ul>
</li>
<li>Replace <code class="codeph">your_user_name@your_realm</code> in <code class="codeph">sample.policy</code> with your user name and realm.</li>
<li>Compile <code class="codeph">Login.java</code> and <code class="codeph">Sample.java</code>:
<pre dir="ltr">
javac Login.java Sample.java
</pre>
<p>Note that <code class="codeph">Login.java</code> contains two classes and thus compiling <code class="codeph">Login.java</code> creates <code class="codeph">Login.class</code> and <code class="codeph">MyAction.class</code>.</p>
</li>
<li>Create a JAR file named <code class="codeph">Login.jar</code> containing <code class="codeph">Login.class and MyAction.class</code>:
<pre dir="ltr">
jar -cvf Login.jar Login.class MyAction.class
</pre></li>
<li>Create a JAR file named <code class="codeph">Sample.jar</code> containing <code class="codeph">Sample.class</code>:
<pre dir="ltr">
jar -cvf Sample.jar Sample.class
</pre></li>
<li>Execute the <code class="codeph">Login</code> class, specifying
<ul style="list-style-type: disc;">
<li>by an appropriate <code class="codeph">-classpath</code> clause that classes should be searched for in the <code class="codeph">Login.jar</code> and <code class="codeph">Sample.jar</code> JAR files,</li>
<li>by <code class="codeph">-Djava.security.manager</code> that a security manager should be installed,</li>
<li>by <code class="codeph">-Djava.security.krb5.realm=<span class="variable">&lt;your_realm&gt;</span></code> that your Kerberos realm is the one specified.</li>
<li>by <code class="codeph">-Djava.security.krb5.kdc=<span class="variable">&lt;your_kdc&gt;</span></code> that your Kerberos KDC is the one specified.</li>
<li>by <code class="codeph">-Djava.security.policy=sample.policy</code> that the policy file to be used is <code class="codeph">sample.policy</code>, and</li>
<li>by <code class="codeph">-Djava.security.auth.login.config=sample.conf</code> that the login configuration file to be used is <code class="codeph">sample.conf</code>.</li>
</ul>
<p>You pass the name of your application (in this case, <code class="codeph">Sample</code>) as an argument to <code class="codeph">Login</code>. You would then add as arguments any arguments required by your application, but in our case <code class="codeph">Sample</code> does not require any.</p>
<p>Below are the full commands to use for Windows, Solaris, Linux, and macOS. The only difference is that on Windows you use semicolons to separate classpath items, while you use colons for that purpose on Solaris, Linux, and macOS. <span class="bold">Be sure to replace <code class="codeph"><span class="variable">&lt;your_realm&gt;</span></code> with your Kerberos realm, and <code class="codeph"><span class="variable">&lt;your_kdc&gt;</span></code> with your Kerberos KDC.</span></p>
<p>Here is the full command for Windows:</p>
<pre dir="ltr">
java -classpath Login.jar;Sample.jar 
 -Djava.security.manager 
 -Djava.security.krb5.realm=<span class="variable">&lt;your_realm&gt;</span> 
 -Djava.security.krb5.kdc=<span class="variable">&lt;your_kdc&gt;</span> 
 -Djava.security.policy=sample.policy 
 -Djava.security.auth.login.config=sample.conf Login Sample
</pre>
<p>Here is the full command for Solaris, Linux, and macOS:</p>
<pre dir="ltr">
java -classpath Login.jar:Sample.jar 
 -Djava.security.manager 
 -Djava.security.krb5.realm=<span class="variable">&lt;your_realm&gt;</span> 
 -Djava.security.krb5.kdc=<span class="variable">&lt;your_kdc&gt;</span> 
 -Djava.security.policy=sample.policy 
 -Djava.security.auth.login.config=sample.conf Login Sample
</pre>
<p>Type the full command on one line. Multiple lines are used here for legibility. If the command is too long for your system, you may need to place it in a .bat file (for Windows) or a .sh file (for Solaris, Linux, and macOS) and then run that file to execute the command.</p>
<p>You will be prompted for your Kerberos user name and password, and the underlying Kerberos login module specified in the login configuration file will log you into Kerberos. Once authentication is successfully completed, the <code class="codeph">Sample</code> code will be executed on behalf of you, the user. The <code class="codeph">sample.policy</code> policy file grants you the required permissions, so you will see a display of the values of your <code class="codeph">java.home</code> and <code class="codeph">user.home</code> system properties and a statement as to whether or not you have a file named <code class="codeph">foo.txt</code> in the current directory.</p>
<p>For login troubleshooting suggestions, see <a href="troubleshooting.htm#GUID-2087ADBA-6C36-43D5-8841-C79FCB4F5FBE">Troubleshooting</a>.</p>
</li>
</ol>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment455">
<tr>
<td class="cellalignment462">
<table class="cellalignment460">
<tr>
<td class="cellalignment459"><a href="jaas-authorization.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment459"><a href="use-jaas-login-utility-and-java-gss-api-secure-message-exchanges.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1993, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment464">
<table class="cellalignment458">
<tr>
<td class="cellalignment459"><a href="http://docs.oracle.com/javase/10/index.html"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment459"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment459"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
