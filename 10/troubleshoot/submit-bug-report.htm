<!DOCTYPE html>
<html lang="en-US" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<meta http-equiv="Content-Type" content="UTF-8" />
<title>Submit a Bug Report</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)" />
<meta name="description" content="Guidance about how to submit a bug report. It includes suggestions about what to try before submitting a report and which data to collect for the report." />
<meta name="dcterms.created" content="2018-03-12T22:27:13Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Java Platform, Standard Edition Troubleshooting Guide" />
<meta name="dcterms.identifier" content="E91156-01" />
<meta name="dcterms.isVersionOf" content="JSTGD" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;1995, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="http://docs.oracle.com/javase/10/index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="submit-bug-reports.htm" title="Previous" type="text/html" />
<link rel="Next" href="appendix.htm" title="Next" type="text/html" />
<link rel="alternate" href="JSTGD.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-DB465A9C-03FA-4324-BFF9-45BF9699F349"></a> <span id="PAGE" style="display:none;">25/31</span> <!-- End Header -->
<a id="JSTGD517"></a><a id="JSTGD516"></a>
<h1 id="JSTGD-GUID-DB465A9C-03FA-4324-BFF9-45BF9699F349" class="sect1"><span class="enumeration_chapter">17</span> Submit a Bug Report</h1>
<div>
<p>Guidance about how to submit a bug report. It includes suggestions about what to try before submitting a report and which data to collect for the report.</p>
<p>This chapter contains the following sections:</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="submit-bug-report.htm#GUID-D90C0950-54B8-4C2D-A112-D14509B29C0F" title="The current platform is Java SE 9. Regularly scheduled updates to this release contain fixes for a set of critical bugs identified since the initial release of the platform.">Check for Fixes in Update Releases</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-A2BFDCEC-9ABF-42C7-A337-B691E1E34C09" title="Recommended procedure to submit a bug report.">Prepare to Submit a Bug Report</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-E0B90A72-D502-4DD7-B7E1-CF043CF74B40" title="In general, it is recommended to test with the latest update release or even a latest available early access (EA) release to see if the issue persists , and then collect as much relevant data as possible when you create a bug report or submit a support call.">Collect Data for a Bug Report</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-597FDBF7-68A6-47CC-869D-F9B8849AB7DC" title="Procedure to generate and collect core dumps (also known as crash dumps). A core dump or a crash dump is a memory snapshot of a running process.">Collect Core Dumps</a></p>
</li>
</ul>
</div>
<a id="JSTGD518"></a>
<div class="props_rev_3"><a id="GUID-D90C0950-54B8-4C2D-A112-D14509B29C0F"></a>
<h2 id="JSTGD-GUID-D90C0950-54B8-4C2D-A112-D14509B29C0F" class="sect2">Check for Fixes in Update Releases</h2>
<div>
<p>The current platform is Java SE 9. Regularly scheduled updates to this release contain fixes for a set of critical bugs identified since the initial release of the platform.</p>
<div class="section">
<p>When an update release becomes available, it becomes the default download at the <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank">Java SE Downloads site</a>.</p>
<p>The download site includes release notes that list the bug fixes in the release. Each bug in the list is linked to the bug description in the bug database. The release notes also includes the list of fixes in previous update releases. If you encounter an issue, or suspect a bug, then, as an early step in the diagnosis, check the list of fixes that are available in the most-recent update release.</p>
<p>Sometimes, it is not obvious if an issue is a duplicate of a bug was already fixed. <span class="bold">It is always recommended to test with the available latest update release to see if the issue persists.</span></p>
</div>
<!-- class="section" --></div>
</div>
<a id="JSTGD519"></a>
<div class="props_rev_3"><a id="GUID-A2BFDCEC-9ABF-42C7-A337-B691E1E34C09"></a>
<h2 id="JSTGD-GUID-A2BFDCEC-9ABF-42C7-A337-B691E1E34C09" class="sect2">Prepare to Submit a Bug Report</h2>
<div>
<p>Recommended procedure to submit a bug report.</p>
<div class="section">
<p>Before submitting a bug report, consider the following recommendations:</p>
</div>
<!-- class="section" -->
<ul>
<li class="stepexpand"><span><span class="bold">First, test with the latest update release to see if the issue persists. Frequently, if a bug report is submitted for an older release, then test with the available latest available update release or even a latest available early access (EA) release. The EA release may contain new features and bug fixes.</span></span></li>
<li class="stepexpand"><span>Collect as much relevant data as possible. For example, generate a thread dump in the case of a deadlock, or locate the core file (where applicable) and <code class="codeph">hs_err</code> file in the case of a crash. In every case, it is important to document the environment and the actions performed just before the problem happened.</span></li>
<li class="stepexpand"><span>Where applicable, try to restore the original state and reproduce the problem using the documented steps. This helps to determine if the problem is reproducible or an intermittent issue.</span></li>
<li class="stepexpand"><span>If the issue is reproducible, try to narrow down the problem. In some cases, a bug can be demonstrated with a small standalone test case. Bugs that are demonstrated by small test cases will typically be easy to diagnose as compared to test cases that consist of a large complex application.</span></li>
<li class="stepexpand"><span><a href="http://bugs.java.com/bugdatabase/index.jsp" target="_blank">Search the bug database</a> to see if this bug or a similar bug was reported. If the bug has already been reported, then the bug report might have further information, such as the following:</span>
<div>
<ul style="list-style-type: disc;">
<li>
<p>If the bug was already fixed, then the release in which it was fixed is given.</p>
</li>
<li>
<p>A workaround for the problem.</p>
</li>
<li>
<p>Comments in the evaluation that explain, in further detail, the circumstances that cause the bug to happen.</p>
</li>
</ul>
</div>
</li>
<li class="stepexpand"><span>If you conclude that the bug was already reported, then submit a new bug.</span></li>
</ul>
<div class="section">
<p>Before submitting a bug, verify that the environment where the problem happens is a supported configuration. See the <a href="http://www.oracle.com/technetwork/java/javase/certconfig-2095354.html" target="_blank">Supported System Configurations</a>.</p>
<p>In addition to the system configurations, check the list of supported locales. See the <a href="http://www.oracle.com/technetwork/java/javase/java8locales-2095355.html" target="_blank">Supported Locales</a> web page.</p>
<p>In the case of Oracle Solaris, check the recommended patch cluster for the operating system release to ensure that the recommended patches are installed.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="JSTGD520"></a>
<div class="props_rev_3"><a id="GUID-E0B90A72-D502-4DD7-B7E1-CF043CF74B40"></a>
<h2 id="JSTGD-GUID-E0B90A72-D502-4DD7-B7E1-CF043CF74B40" class="sect2">Collect Data for a Bug Report</h2>
<div>
<p>In general, it is recommended to <span class="bold">test with the latest update release or even a latest available early access (EA) release to see if the issue persists</span> , and then collect as much relevant data as possible when you create a bug report or submit a support call.</p>
<p>The following sections suggest the data to collect and, where applicable, it provides recommendations for the commands or a general procedure for getting the data.</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="submit-bug-report.htm#GUID-E5701AFF-F5AE-4F43-B24E-1CF19518F25E" title="The hardware details are stored in the error logs when a fatal error occurs.">Hardware Details</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-AEB5DDA0-B78B-4802-A94B-3F593853975D" title="The commands that you can use to get the operating system details.">Operating System Details</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-F966A28F-0703-4C54-8E06-42C42CE1F048" title="The Java SE version string can be obtained using the java -version command.">Java SE Version</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-5D3E2120-4591-4240-9339-11F534DEE8B8" title="If the bug report does not include a fatal error log then, it is important to document the full command line and all its options. This includes any options that specify heap settings (for example, the -mxoption) or any -XX options that specify HotSpot specific options.">Command-Line Options</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-3933BFE1-0193-403E-8D72-2E0DC6639EE8" title="Sometimes problems arise due to environment variable settings. When creating the bug report, indicate the values of the following Java environment variables (if set).">Environment Variables</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-50CEFEE8-E2B3-4C79-8CC7-A1866C804964" title="The fatal error log is created when a fatal error occurs.">Fatal Error Log</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-DA54400D-6338-49B1-AD43-163317C0CDCF" title="Core and crash dumps can be very useful when trying to diagnose a system crash or hung process.">Core and Crash Dump</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-0074B0D4-7660-4542-9DD4-8E7C33637474" title="When creating a problem description, try to include as much relevant information as possible.">Detailed Description of the Problem</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-BC63B799-5220-42A8-B711-C2D6CC26F95A" title="Log or trace output can help to quickly determine the cause of a problem.">Logs and Traces</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-7A305D16-90AF-4709-A3D4-230E390D9163" title="Report all troubleshooting steps and results that have already occurred">Results from Troubleshooting Steps</a></p>
</li>
</ul>
</div>
<a id="JSTGD521"></a>
<div class="props_rev_3"><a id="GUID-E5701AFF-F5AE-4F43-B24E-1CF19518F25E"></a>
<h3 id="JSTGD-GUID-E5701AFF-F5AE-4F43-B24E-1CF19518F25E" class="sect3">Hardware Details</h3>
<div>
<p>The hardware details are stored in the error logs when a fatal error occurs.</p>
<div class="section">
<p>Sometimes, a bug happens or can be reproduced only on certain hardware configurations. If a fatal error occurs, then the error log might contain the hardware details. If an error log is not available, then document in the bug report the number and the type of processors in the machine, the clock speed, and, where applicable and if known, some details on the features of that processor. For example, in the case of Intel processors, it might be relevant that hyper-threading is available.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="JSTGD522"></a>
<div class="props_rev_3"><a id="GUID-AEB5DDA0-B78B-4802-A94B-3F593853975D"></a>
<h3 id="JSTGD-GUID-AEB5DDA0-B78B-4802-A94B-3F593853975D" class="sect3">Operating System Details</h3>
<div>
<p>The commands that you can use to get the operating system details.</p>
<div class="section">
<p>On the Oracle Solaris operating system, the <code class="codeph">showrev -a</code> command prints the operating system version and patch information.</p>
<p>On Linux, it is important to know which distribution and version is used. Sometimes the <code>/etc/*release</code> file indicates the release information, but because components and packages can be upgraded independently, it is not always a reliable indication of the configuration. Therefore, in addition to the information from the <code>*release</code> file, collect the following information:</p>
</div>
<!-- class="section" -->
<ul>
<li><span>The kernel version. This can be obtained using the <code class="codeph">uname -a</code> command.</span></li>
<li><span>The <code class="codeph">glibc</code> version. The <code class="codeph">rpm -q glibc</code> command indicates the patch level of <code class="codeph">glibc</code>.</span></li>
<li><span>The thread library. There are two thread libraries for Linux, namely <code class="codeph">LinuxThreads</code> and <code class="codeph">NPTL</code>. The <code class="codeph">LinuxThreads</code> library is used on 2.4, and earlier kernels and has fixed stack and floating stack variants. The Native POSIX Thread Library (<code class="codeph">NPTL</code>) is used on the 2.6 kernel. Some Linux releases (such as RHEL3) include backports of <code class="codeph">NPTL</code> to the 2.4 kernel. Use the command <code class="codeph">getconf GNU_LIBPTHREAD_VERSION</code> to determine which thread library is used. If the <code class="codeph">getconf</code> command returns an error to say that the variable does not exist, then it is likely that you are using an old kernel with the <code class="codeph">LinuxThreads</code> library.</span></li>
</ul>
</div>
</div>
<a id="JSTGD523"></a>
<div class="props_rev_3"><a id="GUID-F966A28F-0703-4C54-8E06-42C42CE1F048"></a>
<h3 id="JSTGD-GUID-F966A28F-0703-4C54-8E06-42C42CE1F048" class="sect3">Java SE Version</h3>
<div>
<p>The Java SE version string can be obtained using the <code class="codeph">java -version</code> command.</p>
<div class="section">
<p>Multiple versions of Java SE may be installed on the same machine. Therefore, ensure that you use the appropriate version of the <code class="codeph">java</code> command by verifying that the installation <code>bin</code> directory appears in your <code class="codeph">PATH</code> environment variable before other installations.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="JSTGD524"></a>
<div class="props_rev_3"><a id="GUID-5D3E2120-4591-4240-9339-11F534DEE8B8"></a>
<h3 id="JSTGD-GUID-5D3E2120-4591-4240-9339-11F534DEE8B8" class="sect3">Command-Line Options</h3>
<div>
<p>If the bug report does not include a fatal error log then, it is important to document the full command line and all its options. This includes any options that specify heap settings (for example, the <code>-mx</code>option) or any <code>-XX</code> options that specify HotSpot specific options.</p>
<div class="section">
<p>One of the features in Java SE is garbage collector ergonomics. On server-class machines, the <code class="codeph">java</code> command launches the HotSpot Server VM and a parallel garbage collector. A machine is considered to be a server machine if it has at least two processors and 2GB or more of memory.</p>
<p>The <code>-XX:+PrintCommandLineFlags</code> option can be used to verify the command-line options. This option prints all command-line flags to the VM. The command-line options can also be obtained for a running VM or core file using the <code class="codeph">jmap</code> utility.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="JSTGD525"></a>
<div class="props_rev_3"><a id="GUID-3933BFE1-0193-403E-8D72-2E0DC6639EE8"></a>
<h3 id="JSTGD-GUID-3933BFE1-0193-403E-8D72-2E0DC6639EE8" class="sect3">Environment Variables</h3>
<div>
<p>Sometimes problems arise due to environment variable settings. When creating the bug report, indicate the values of the following Java environment variables (if set).</p>
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">JAVA_HOME</code></p>
</li>
<li>
<p><code class="codeph">JRE_HOME</code></p>
</li>
<li>
<p><code class="codeph">JAVA_TOOL_OPTIONS</code></p>
</li>
<li>
<p><code class="codeph">_JAVA_OPTIONS</code></p>
</li>
<li>
<p><code class="codeph">CLASSPATH</code></p>
</li>
<li>
<p><code class="codeph">JAVA_COMPILER</code></p>
</li>
<li>
<p><code class="codeph">PATH</code></p>
</li>
<li>
<p><code class="codeph">USERNAME</code></p>
</li>
</ul>
<p>In addition, collect the following operating-system-specific environment variables.</p>
</div>
<!-- class="section" -->
<ul>
<li class="stepexpand"><span>On Oracle Solaris and Linux operating systems, collect the values of the following environment variables.</span>
<div>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">LD_LIBRARY_PATH</code></p>
</li>
<li>
<p><code class="codeph">LD_PRELOAD</code></p>
</li>
<li>
<p><code class="codeph">SHELL</code></p>
</li>
<li>
<p><code class="codeph">DISPLAY</code></p>
</li>
<li>
<p><code class="codeph">HOSTTYPE</code></p>
</li>
<li>
<p><code class="codeph">OSTYPE</code></p>
</li>
<li>
<p><code class="codeph">ARCH</code></p>
</li>
<li>
<p><code class="codeph">MACHTYPE</code></p>
</li>
</ul>
</div>
</li>
<li class="stepexpand"><span>On Linux, also collect the values of the following environment variables.</span>
<div>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">LD_ASSUME_KERNEL</code></p>
</li>
<li>
<p><code class="codeph">_JAVA_SR_SIGNUM</code></p>
</li>
</ul>
</div>
</li>
<li class="stepexpand"><span>On Windows, collect the values of the following environment variables.</span>
<div>
<ul style="list-style-type: disc;">
<li>
<p><code class="codeph">OS</code></p>
</li>
<li>
<p><code class="codeph">PROCESSOR_IDENTIFIER</code></p>
</li>
<li>
<p><code class="codeph">_ALT_JAVA_HOME_DIR</code></p>
</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
<a id="JSTGD526"></a>
<div class="props_rev_3"><a id="GUID-50CEFEE8-E2B3-4C79-8CC7-A1866C804964"></a>
<h3 id="JSTGD-GUID-50CEFEE8-E2B3-4C79-8CC7-A1866C804964" class="sect3">Fatal Error Log</h3>
<div>
<p>The fatal error log is created when a fatal error occurs.</p>
<div class="section">
<p><span class="bold">It is recommended to test with the latest update release to see if the problem persists.</span></p>
<p>When a fatal error occurs, an error log is created. See <a href="fatal-error-log.htm#GUID-2AE5EE08-A68F-4514-9618-A581C0EDFB1B" title="Describes the fatal error log, its location, and contents.">Fatal Error Log</a>.</p>
<p>The error log contains information obtained at the time of the fatal error, such as version and environment information, details about the threads that provoked the crash, and so forth.</p>
<p>If the fatal error log is generated, then be sure to include it in the bug report or report it during a support call.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="JSTGD527"></a>
<div class="props_rev_3"><a id="GUID-DA54400D-6338-49B1-AD43-163317C0CDCF"></a>
<h3 id="JSTGD-GUID-DA54400D-6338-49B1-AD43-163317C0CDCF" class="sect3">Core and Crash Dump</h3>
<div>
<p>Core and crash dumps can be very useful when trying to diagnose a system crash or hung process.</p>
<div class="section">
<p>The procedure for generating a dump is described in <a href="submit-bug-report.htm#GUID-597FDBF7-68A6-47CC-869D-F9B8849AB7DC" title="Procedure to generate and collect core dumps (also known as crash dumps). A core dump or a crash dump is a memory snapshot of a running process.">Collect Core Dumps</a>.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="JSTGD528"></a>
<div class="props_rev_3"><a id="GUID-0074B0D4-7660-4542-9DD4-8E7C33637474"></a>
<h3 id="JSTGD-GUID-0074B0D4-7660-4542-9DD4-8E7C33637474" class="sect3">Detailed Description of the Problem</h3>
<div>
<p>When creating a problem description, try to include as much relevant information as possible.</p>
<div class="section">
<p>Describe the application, the environment, and most important the events leading up to the time when the problem happened.</p>
</div>
<!-- class="section" -->
<div class="section">
<p>Sometimes, the problem can be reproduced only in a complex application environment. In this case, the description, coupled with logs, core file, and other relevant information, might be the only way to diagnose the issue. In these situations, the description should indicate if the submitter is willing to run further diagnosis or run test binaries on the system where the issue occurs.</p>
</div>
<!-- class="section" -->
<ul>
<li><span>If the problem is reproducible, then list the steps that are required to demonstrate the problem.</span></li>
<li><span>If the problem can be demonstrated with a small test case, then include the test case and the commands to compile and execute the test case.</span></li>
<li><span>If the test case or problem requires third-party code (for example, a commercial or open source library or package), then provide then details about where and how to obtain the library.</span></li>
</ul>
</div>
</div>
<a id="JSTGD529"></a>
<div class="props_rev_3"><a id="GUID-BC63B799-5220-42A8-B711-C2D6CC26F95A"></a>
<h3 id="JSTGD-GUID-BC63B799-5220-42A8-B711-C2D6CC26F95A" class="sect3">Logs and Traces</h3>
<div>
<p>Log or trace output can help to quickly determine the cause of a problem.</p>
<div class="section">
<p>For example, in the case of a performance issue, the output of the <code>-verbose:gc</code> option can help in diagnosing the problem. (This is the option to enable output from the garbage collector.)</p>
<p>In other cases, the output from the <code class="codeph">jstat</code> command can be used to capture statistical information over the time period leading up to the problem.</p>
<p>In the case of a deadlock or a hung VM (for example, due to a loop), the thread stacks can help diagnose the problem. The thread stacks are obtained by pressing <kbd class="userinput">Control+\</kbd> on Oracle Solaris and Linux, and Control+Break on Windows.</p>
<p>In general, provide all relevant logs, traces, and other output in the bug report or during the support call.</p>
</div>
<!-- class="section" --></div>
</div>
<a id="JSTGD530"></a>
<div class="props_rev_3"><a id="GUID-7A305D16-90AF-4709-A3D4-230E390D9163"></a>
<h3 id="JSTGD-GUID-7A305D16-90AF-4709-A3D4-230E390D9163" class="sect3">Results from Troubleshooting Steps</h3>
<div>
<p>Report all troubleshooting steps and results that have already occurred</p>
<div class="p"><span class="bold">Prerequisites:</span> Before submitting the bug report, be sure to document any troubleshooting steps that were performed.</div>
<!-- class="section" -->
<div class="section">
<p>For example, if the problem is a crash and the application has native libraries, then you might have already run the application with the <code>-Xcheck:jni</code> option to reduce the likelihood that the bug is in the native code. Another case could be a crash that occurs with the HotSpot Server VM (<code>-server</code> option). If you have also tested with the HotSpot Client VM (<code>-client</code> option) and the problem does not occur, then this is an indication that the bug might be specific to the HotSpot Server VM.</p>
<p>In general, include in the bug report all troubleshooting steps and results that have already occurred. This type of information can often reduce the time that is required to diagnose an issue.</p>
</div>
<!-- class="section" --></div>
</div>
</div>
<a id="JSTGD531"></a>
<div class="props_rev_3"><a id="GUID-597FDBF7-68A6-47CC-869D-F9B8849AB7DC"></a>
<h2 id="JSTGD-GUID-597FDBF7-68A6-47CC-869D-F9B8849AB7DC" class="sect2">Collect Core Dumps</h2>
<div>
<p>Procedure to generate and collect core dumps (also known as crash dumps). A core dump or a crash dump is a memory snapshot of a running process.</p>
<p>A core dump can be automatically created by the operating system when a fatal or unhandled error (for example, signal or system exception) occurs. Alternatively, a core dump can be forced by using system-provided command-line utilities. Sometimes, a core dump is useful when diagnosing a process that appears to be hung; the core dump may reveal information about the cause of the hang.</p>
<p>When collecting a core dump, be sure to gather other information about the environment so that the core file can be analyzed (for example, OS version, patch information, and the fatal error log).</p>
<p>Core dumps do not usually contain all the memory pages of the crashed or hung process. With each of the operating systems discussed here, the text (or code) pages of the process are not included in core dumps. But, to be useful, a core dump must consist of pages of heap and stack at as a minimum. Collecting non-truncated good core dump files is essential for postmortem analysis of the crash.</p>
<p>The following sections describe scenarios for collecting core dumps.</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="submit-bug-report.htm#GUID-0380F9BE-8C59-447D-A9D4-A7AF14869F12" title="In the Oracle Solaris operating system, unhandled signals such as a segmentation violation, illegal instruction, and so forth, result in a core dump.">Collect Core Dumps on Oracle Solaris</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-873840DE-3EC9-4DDA-9760-558158788EA8" title="On the Linux operating system, unhandled signals such as segmentation violation, illegal instruction, and so forth, result in a core dump.">Collect Core Dumps on Linux</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-5A2C0733-60A2-48FE-80BA-A062BE5562DC" title="List of reasons that a core file might not be generated.">Reasons for Not Getting a Core File</a></p>
</li>
<li>
<p><a href="submit-bug-report.htm#GUID-F7841268-D783-4E3D-9BB3-3EB50CD186BE" title="In the Windows operating system there are three types of crash dumps: Dr. Watson log file, user minidump, and Dr. Watson full dump.">Collect Crash Dumps on Windows</a></p>
</li>
</ul>
</div>
<a id="JSTGD532"></a>
<div class="props_rev_3"><a id="GUID-0380F9BE-8C59-447D-A9D4-A7AF14869F12"></a>
<h3 id="JSTGD-GUID-0380F9BE-8C59-447D-A9D4-A7AF14869F12" class="sect3">Collect Core Dumps on Oracle Solaris</h3>
<div>
<p>In the Oracle Solaris operating system, unhandled signals such as a segmentation violation, illegal instruction, and so forth, result in a core dump.</p>
<div class="section">
<p>By default, the core dump is created in the current working directory of the process and the name of the core dump file is <code class="codeph">core</code>. The user can configure the location and name of the core dump using the core file administration utility, <code class="codeph">coreadm</code>. This procedure is fully described in the man page for the <code class="codeph">coreadm</code> utility.</p>
<p>The <code class="codeph">ulimit</code> utility is used to get or set the limitations on the system resources available to the current shell and its descendants. Use the <code class="codeph">ulimit -c</code> command to check or set the core file size limit. Ensure that the limit is set to <code class="codeph">unlimited</code>; otherwise, the core file could be truncated.</p>
<div class="infobox-note" id="GUID-0380F9BE-8C59-447D-A9D4-A7AF14869F12__GUID-4CD99F89-2760-4657-A7C5-C00C3040ECBD">
<p class="notep1">Note:</p>
<p><code class="codeph">ulimit</code> is a Bash shell built-in command; on a C shell, use the <code class="codeph">limit</code> command.</p>
</div>
<p>Ensure that any scripts that are used to launch the VM or your application do not disable core dump creation.</p>
<p>The <code class="codeph">gcore</code> utility can be used to get a core image of running processes. This utility accepts a process ID (pid) of the process for which you want to force a core dump.</p>
<p>To get the list of Java processes running on the machine, you can use any of the following commands:</p>
</div>
<!-- class="section" -->
<ul>
<li class="stepexpand"><span><code class="codeph">ps -ef | grep java</code></span></li>
<li class="stepexpand"><span><code class="codeph">pgrep java</code></span></li>
<li class="stepexpand"><span><code class="codeph">jps</code></span>
<div>
<div class="infobox-note" id="GUID-0380F9BE-8C59-447D-A9D4-A7AF14869F12__GUID-CCE63C7F-2AB5-45D1-88D7-BB4A8AB8C44A">
<p class="notep1">Note:</p>
<p>The <code class="codeph">jps</code> command-line utility does not perform name matching (that is, looking for "java" in the process command name) and so it can list Java VM embedded processes as well as the Java processes.</p>
</div>
</div>
</li>
</ul>
<div class="section">
<p>The following are two methods to collect core dumps on Oracle Solaris.</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">ShowMessageBoxOnError option on Oracle Solaris:</span></p>
<p>A Java process can be started with the <code>-XX:+ShowMessageBoxOnError</code> command-line option. When a fatal error occurs, the process prints a message to standard error and waits for a <code class="codeph">yes</code> or <code class="codeph">no</code> response from standard input. The following example shows the output when an unexpected signal occurs.</p>
<pre dir="ltr">
=======================================================================
Unexpected Error
-----------------------------------------------------------------------
SIGSEGV (0xb) at pc=0xfeba31ac, pid=8677, tid=2
Do you want to debug the problem?
To debug, run 'dbx - 8677'; then switch to thread 2
Enter 'yes' to launch dbx automatically (PATH must include dbx)
Otherwise, press RETURN to abort...
=======================================================================
</pre>
<p>Before answering <code class="codeph">yes</code> or pressing Return (Enter), use the <code class="codeph">gcore</code> utility to force a core dump. Then, you can enter <code class="codeph">yes</code> to launch the <code class="codeph">dbx</code> debugger.</p>
</li>
<li>
<p><span class="bold">Suspend a process with the truss utility:</span></p>
<p>In situations where it is not possible to specify the <code>-XX:+ShowMessageBoxOnError</code> option, you might be able to use the <code class="codeph">truss</code> utility. This Oracle Solaris operating system utility is used to trace system calls and signals. You can use this utility to suspend the process when it reaches a specific function or system call.</p>
<p>The command in the following example shows how to use the <code class="codeph">truss</code> utility to suspend a process when the <code class="codeph">exit</code> system call is executed (in other words, the process is about to exit).</p>
<pre dir="ltr">
$ truss -t \!all -s \!all -T exit -p pid
</pre>
<p>When the process calls <code class="codeph">exit</code>, it will be suspended. At this point, you can attach the debugger to the process or call <code class="codeph">gcore</code> to force a core dump.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="JSTGD535"></a>
<div class="props_rev_3"><a id="GUID-873840DE-3EC9-4DDA-9760-558158788EA8"></a>
<h3 id="JSTGD-GUID-873840DE-3EC9-4DDA-9760-558158788EA8" class="sect3">Collect Core Dumps on Linux</h3>
<div>
<p>On the Linux operating system, unhandled signals such as segmentation violation, illegal instruction, and so forth, result in a core dump.</p>
<div class="section">
<p>By default, the core dump is created in the current working directory of the process and the name of the core dump file is <code class="codeph">core.<span class="variable">pid</span></code>, where <code class="codeph"><span class="variable">pid</span></code> is the process ID of the crashed Java process.</p>
<p>The <code class="codeph">ulimit</code> utility is used to get or set the limitations on the system resources available to the current shell and its descendants. Use the <code class="codeph">ulimit -c</code> command to check or set the core file size limit. Ensure that the limit is set to <code class="codeph">unlimited</code>; otherwise, the core file could be truncated.</p>
<div class="infobox-note" id="GUID-873840DE-3EC9-4DDA-9760-558158788EA8__GUID-EC8D7171-31A5-468D-BF5F-1A7028C9703F">
<p class="notep1">Note:</p>
<p><code class="codeph">ulimit</code> is a Bash shell built-in command; on a C shell, use the <code class="codeph">limit</code> command.</p>
</div>
<p>Ensure that any scripts that are used to launch the VM or your application do not disable core dump creation.</p>
<p>You can use the <code class="codeph">gcore</code> command in the <code class="codeph">gdb</code> (GNU debugger) interface to get a core image of a running process. This utility accepts the <code class="codeph">pid</code> of the process for which you want to force the core dump.</p>
<p>To get the list of Java processes running on the machine, you can use any of the following commands:</p>
</div>
<!-- class="section" -->
<ul>
<li class="stepexpand"><span><code class="codeph">ps -ef | grep java</code></span></li>
<li class="stepexpand"><span><code class="codeph">pgrep java</code></span></li>
<li class="stepexpand"><span><code class="codeph">jps</code></span>
<div>
<div class="infobox-note" id="GUID-873840DE-3EC9-4DDA-9760-558158788EA8__GUID-5F12862B-C65C-4011-AD6D-4D3504BEDEB8">
<p class="notep1">Note:</p>
<p>The <code class="codeph">jps</code> command-line utility does not perform name matching (that is, looking for "java" in the process command name) and so it can list Java VM embedded processes as well as the Java processes.</p>
</div>
</div>
</li>
</ul>
<div class="section">The following is one option to collect core dumps on Linux.
<ul style="list-style-type: disc;">
<li>
<p><span class="bold">ShowMessageBoxOnError option in Linux:</span></p>
<p>A Java process can be started with the <code>-XX:+ShowMessageBoxOnError</code> command-line option. When a fatal error occurs, the process prints a message to standard error and waits for a <code class="codeph">yes</code> or <code class="codeph">no</code> response from standard input. The following example shows the output when an unexpected signal occurs.</p>
<pre dir="ltr">
=======================================================================
Unexpected Error
-----------------------------------------------------------------------
SIGSEGV (0xb) at pc=0x06232e5f, pid=11185, tid=8194
Do you want to debug the problem?
To debug, run 'gdb /proc/11185/exe 11185'; then switch to thread 8194
Enter 'yes' to launch gdb automatically (PATH must include gdb)
Otherwise, press RETURN to abort...
=======================================================================
</pre>
<p>Enter <code class="codeph">yes</code> to launch the <code class="codeph">gdb</code> (GNU Debugger) interface, as suggested by the error report shown. In the <code class="codeph">gdb</code> prompt, you can give the <code class="codeph">gcore</code> command. This command creates a core dump of the debugged process with the name core.<code class="codeph"><span class="variable">pid</span></code>, where <code class="codeph"><span class="variable">pid</span></code> is the process ID of the crashed process. Ensure that the <code class="codeph">gdb gcore</code> command is supported in your versions of <code class="codeph">gdb</code>. Look for <code class="codeph">help gcore</code> in the <code class="codeph">gdb</code> command prompt.</p>
</li>
</ul>
</div>
<!-- class="section" --></div>
</div>
<a id="JSTGD537"></a>
<div class="props_rev_3"><a id="GUID-5A2C0733-60A2-48FE-80BA-A062BE5562DC"></a>
<h3 id="JSTGD-GUID-5A2C0733-60A2-48FE-80BA-A062BE5562DC" class="sect3">Reasons for Not Getting a Core File</h3>
<div>
<p>List of reasons that a core file might not be generated.</p>
<p>This list pertains to both Oracle Solaris and Linux operating systems, unless specified otherwise.</p>
<ul style="list-style-type: disc;">
<li>
<p>The user does not have permission to write in the current working directory of the process.</p>
</li>
<li>
<p>The user has write permission on the current working directory, but there is already a file named <code class="codeph">core</code> that has read-only permission.</p>
</li>
<li>
<p>The current directory does not have enough space or there is no space left.</p>
</li>
<li>
<p>The current directory has a subdirectory named <code class="codeph">core</code>.</p>
</li>
<li>
<p>The current working directory is remote. It might be mapped by a Network File System (NFS), and NFS failed at the time the core dump was about to be created.</p>
</li>
<li>
<p>Oracle Solaris operating system only: The <code class="codeph">coreadm</code> tool has been used to configure the directory and name of the core file, but one or more of the previous reasons apply to the configured directory.</p>
</li>
<li>
<p>The core file size limit is too low. Check your core file size limit using the <code class="codeph">ulimit -c</code> command (Bash shell) or the <code class="codeph">limit -c</code> command (C shell). If the output from this command is not unlimited, then the core dump file size might not be large enough. If this is the case, then you will get truncated core dumps or no core dump at all. In addition, ensure that any scripts that are used to launch the VM or your application do not disable core dump creation.</p>
</li>
<li>
<p>The process is running a <code class="codeph">setuid</code> program, and therefore the operating system will not dump the core unless it is configured explicitly.</p>
</li>
<li>
<p>Java specific: If the process received <code class="codeph">SIGSEGV</code> or <code class="codeph">SIGILL</code> but no core dump, it is possible that the process handled it. For example, HotSpot VM uses the <code class="codeph">SIGSEGV</code> signal for legitimate purposes, such as throwing <code class="codeph">NullPointerException</code>, deoptimization, and so forth. The signal is unhandled by the Java VM only if the current instruction (PC) falls outside the Java VM generated code. These are the only cases in which HotSpot dumps the core.</p>
</li>
<li>
<p>Java specific: The JNI Invocation API was used to create the VM. The standard Java launcher was not used. The custom Java launcher program handled the signal by consuming it and produced the log entry silently. This situation has occurred with certain application servers and web servers. These Java VM embedding programs transparently attempt to restart (fail over) the system after an abnormal termination. In this case, the fact that a core dump is not produced is a feature and not a bug.</p>
</li>
</ul>
</div>
</div>
<a id="JSTGD538"></a>
<div class="props_rev_3"><a id="GUID-F7841268-D783-4E3D-9BB3-3EB50CD186BE"></a>
<h3 id="JSTGD-GUID-F7841268-D783-4E3D-9BB3-3EB50CD186BE" class="sect3">Collect Crash Dumps on Windows</h3>
<div>
<p>In the Windows operating system there are three types of crash dumps: Dr. Watson log file, user minidump, and Dr. Watson full dump.</p>
<div class="section">
<ul style="list-style-type: disc;">
<li>
<p>Dr. Watson log file, which is a text error log file that includes faulting stack trace and a few other details.</p>
</li>
<li>
<p>User minidump, which is considered a partial core dump. It is not a complete core dump, because it does not contain all the useful memory pages of the process.</p>
</li>
<li>
<p>Dr. Watson full dump, which is equivalent to a UNIX core dump. This dump contains most memory pages of the process (except for code pages).</p>
</li>
</ul>
<p>When an unexpected exception occurs on Windows, the action taken depends on two values in the following registry key:</p>
<pre dir="ltr">
\\HKEY_LOCAL_MACHINE\Software\Microsoft\Windows NT\CurrentVersion\AeDebug
</pre>
<p>The two values are named <code class="codeph">Debugger</code> and <code class="codeph">Auto</code>. The <code class="codeph">Auto</code> value indicates if the debugger specified in the value of the <code class="codeph">Debugger</code> entry starts automatically when an application error occurs.</p>
<ul style="list-style-type: disc;">
<li>
<p>A value of <code class="codeph">0</code> for <code class="codeph">Auto</code> means that the system displays a message box notifying the user when an application error occurs.</p>
</li>
<li>
<p>A value of <code class="codeph">1</code> for <code class="codeph">Auto</code> means that the debugger starts automatically.</p>
</li>
</ul>
<p>The value of <code class="codeph">Debugger</code> is the debugger command that is to be used to debug program errors.</p>
<p>When a program error occurs, Windows examines the <code class="codeph">Auto</code> value, and if the value is <code class="codeph">0</code> then it executes the command in the <code class="codeph">Debugger</code> value. If the value for <code class="codeph">Debugger</code> is a valid command, then a message box is created with two buttons: <span class="bold">OK</span> and <span class="bold">Cancel</span>. If the user clicks <span class="bold">OK</span>, then the program is terminated. If the user clicks <span class="bold">Cancel</span>, then the specified debugger is started. If the value for the <code class="codeph">Auto</code> entry is set to <code class="codeph">1</code> and the value for the <code class="codeph">Debugger</code> entry specifies the command for a valid debugger, then the system automatically starts the debugger and does not generate a message box.</p>
<p>The following are two ways to collect crash dump on Windows.</p>
</div>
<!-- class="section" -->
<ul>
<li class="stepexpand"><span><span class="bold">Configure Dr.Watson:</span></span>
<div>
<p>The Dr. Watson debugger is used to create crash dump files. By default, the Dr. Watson debugger (<code class="codeph">drwtsn32.exe</code>) is installed in the Windows system folder (<code class="codeph"><span class="variable">%SystemRoot%</span>\System32</code>).</p>
<p>To install Dr. Watson as the postmortem debugger, run the following command:</p>
<pre dir="ltr">
drwtsn32 -i
</pre>
<p>To configure the name and location of crash dump files, run <code class="codeph">drwtsn32</code> without any options.</p>
<p>In the Dr. Watson GUI window, ensure that the <span class="bold">Create Crash Dump File</span> check box is selected and that the crash dump file path and log file path are configured in their respective text fields.</p>
<p>Dr. Watson can be configured to create a full dump using the registry. The registry key is shown in the following example.</p>
<pre dir="ltr">
System Key: [HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\DrWatson]
Entry Name: CreateCrashDump
Value: (0 = disabled, 1 = enabled)
</pre>
<div class="p">
<div class="infobox-note" id="GUID-F7841268-D783-4E3D-9BB3-3EB50CD186BE__GUID-D6700F2A-7F1A-4FA1-AA7E-C489FB89F75F">
<p class="notep1">Note:</p>
If the application handles the exception, then the registry-configured debugger is not invoked. In that case, it might be appropriate to use the <code>-XX:+ShowMessageBoxOnError</code> command-line option to force the process to wait for user intervention on fatal error conditions.</div>
</div>
</div>
</li>
<li class="stepexpand"><span><span class="bold">Force a crash dump:</span></span>
<div>
<p>On the Windows operating system, the <code class="codeph">userdump</code> command-line utility can be used to force a Dr. Watson dump of a running process. The <code class="codeph">userdump</code> utility does not ship with Windows. It is released as a component of the OEM Support Tools package.</p>
<p>An alternative way to force a crash dump is to use the <code class="codeph">windbg</code> debugger. The main advantage of using <code class="codeph">windbg</code> is that it can attach to a process in a non-invasive manner (that is, read-only). Usually, Windows terminates a process after a crash dump is obtained, but with the noninvasive attach, it is possible to obtain a crash dump and let the process continue. To attach the debugger check box requires selecting the <span class="bold">Attach to Process</span> option and the <span class="bold">Noninvasive</span> checkbox.</p>
<p>When the debugger is attached, a crash dump can be obtained using the command shown in the following example.</p>
<pre dir="ltr">
.dump /f crash.dmp
</pre>
<p>The <code class="codeph">windbg</code> debugger is included in the Debugging Tools for Windows download.</p>
<p>An additional utility in this download is the <code class="codeph">dumpchk.exe</code> utility, which can verify that a memory dump file was created correctly.</p>
<p>Both <code class="codeph">userdump.exe</code> and <code class="codeph">windbg</code> require the <code class="codeph">pid</code> of the process. The <code class="codeph">userdump -p</code> command lists the process and program for all processes. This is useful if you know that the application is started with the <code class="codeph">java.exe</code> launcher. However, if a custom launcher is used (embedded VM), then it might be difficult to recognize the process. In that case, you can use the <code class="codeph">jps</code> command-line utility because it lists the PIDS of the Java processes only.</p>
<p>As with Oracle Solaris and Linux operating systems, you can also use the <code>-XX:+ShowMessageBoxOnError</code> command-line option on Windows. When a fatal error occurs, the process shows a message box and waits for a <code class="codeph">yes</code> or <code class="codeph">no</code> response from the user.</p>
<p>Before clicking <span class="bold">Yes</span> or <span class="bold">No</span>, you can use the <code class="codeph">userdump.exe</code> utility to generate the Dr. Watson dump for the Java process. This utility can also be used in cases when the process appears to be hung.</p>
</div>
</li>
</ul>
</div>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment340">
<tr>
<td class="cellalignment347">
<table class="cellalignment345">
<tr>
<td class="cellalignment344"><a href="submit-bug-reports.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment344"><a href="appendix.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;1995, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment349">
<table class="cellalignment343">
<tr>
<td class="cellalignment344"><a href="http://docs.oracle.com/javase/10/index.html"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment344"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment344"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
