<!DOCTYPE html>
<html lang="en-US" >
<head>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1">
<meta charset="utf-8">
<meta http-equiv="Content-Type" content="UTF-8" />
<title>Process API</title>
<meta name="generator" content="DITA Open Toolkit version 1.8.5 (Mode = doc)" />
<meta name="description" content="The Process API lets you start, retrieve information about, and manage native operating system processes." />
<meta name="dcterms.created" content="2018-03-12T23:55:42Z" />
<meta name="robots" content="all" />
<meta name="dcterms.title" content="Java Platform, Standard Edition Core Libraries" />
<meta name="dcterms.identifier" content="E91241-01" />
<meta name="dcterms.isVersionOf" content="JSCOR" />
<meta name="dcterms.rights" content="Copyright&nbsp;&copy;&nbsp;2017, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved." />
<link rel="Start" href="http://docs.oracle.com/javase/10/index.html" title="Home" type="text/html" />
<link rel="Copyright" href="../dcommon/html/cpyr.htm" title="Copyright" type="text/html" />

<script type="application/javascript"  src="../dcommon/js/headfoot.js"></script>
<script type="application/javascript"  src="../nav/js/doccd.js" charset="UTF-8"></script>
<link rel="Contents" href="toc.htm" title="Contents" type="text/html" />
<link rel="Prev" href="creating-immutable-lists-sets-and-maps.htm" title="Previous" type="text/html" />
<link rel="Next" href="java-logging-overview.htm" title="Next" type="text/html" />
<link rel="alternate" href="JSCOR.pdf" title="PDF version" type="application/pdf" />
<link rel="schema.dcterms" href="http://purl.org/dc/terms/" />
<link rel="stylesheet" href="../dcommon/css/fusiondoc.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/header.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/footer.css">
<link rel="stylesheet" type="text/css"  href="../dcommon/css/fonts.css">
<link rel="stylesheet" href="../dcommon/css/foundation.css">
<link rel="stylesheet" href="../dcommon/css/codemirror.css">
<link rel="stylesheet" type="text/css" title="Default" href="../nav/css/html5.css">
<link rel="stylesheet" href="../dcommon/css/respond-480-tablet.css">
<link rel="stylesheet" href="../dcommon/css/respond-768-laptop.css">
<link rel="stylesheet" href="../dcommon/css/respond-1140-deskop.css">
<script type="application/javascript" src="../dcommon/js/modernizr.js"></script>
<script type="application/javascript" src="../dcommon/js/codemirror.js"></script>
<script type="application/javascript" src="../dcommon/js/jquery.js"></script>
<script type="application/javascript" src="../dcommon/js/foundation.min.js"></script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-552992c80ef99c8d" async="async"></script>
<script type="application/javascript" src="../dcommon/js/jqfns.js"></script>
<script type="application/javascript" src="../dcommon/js/ohc-inline-videos.js"></script>
<!-- Add fancyBox -->
<link rel="stylesheet" href="../dcommon/fancybox/jquery.fancybox.css?v=2.1.5" type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/jquery.fancybox.pack.js?v=2.1.5"></script>
<!-- Optionally add helpers - button, thumbnail and/or media -->
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-buttons.css?v=1.0.5"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-buttons.js?v=1.0.5"></script>
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-media.js?v=1.0.6"></script>
<link rel="stylesheet"  href="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.css?v=1.0.7"  type="text/css" media="screen" />
<script type="text/javascript" src="../dcommon/fancybox/helpers/jquery.fancybox-thumbs.js?v=1.0.7"></script>
<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>
<body>
<a href="#BEGIN" class="accessibility-top skipto" tabindex="0">Go to main content</a><header><!--
<div class="zz-skip-header"><a id="top" href="#BEGIN">Go to main content</a>--></header>
<div class="row" id="CONTENT">
<div class="IND large-9 medium-8 columns" dir="ltr">
<a id="BEGIN" name="BEGIN"></a>
<a id="GUID-6FAB2491-FD4E-42B4-A883-DCD181A1CE3E"></a> <span id="PAGE" style="display:none;">9/10</span> <!-- End Header -->
<h1 id="JSCOR-GUID-6FAB2491-FD4E-42B4-A883-DCD181A1CE3E" class="sect1"><span class="enumeration_chapter">6</span> Process API</h1>
<div>
<p>The Process API lets you start, retrieve information about, and manage native operating system processes.</p>
<p>With this API, you can work with operating system processes as follows:</p>
<ul style="list-style-type: disc;">
<li>
<p>Run arbitrary commands:</p>
<ul style="list-style-type: disc;">
<li>
<p>Filter running processes.</p>
</li>
<li>
<p>Redirect output.</p>
</li>
<li>
<p>Connect heterogeneous commands and shells by scheduling processes to start when another ends.</p>
</li>
</ul>
</li>
<li>
<p>Test the execution of commands:</p>
<ul style="list-style-type: disc;">
<li>
<p>Run a series of tests.</p>
</li>
<li>
<p>Log output.</p>
</li>
<li>
<p>Cleanup leftover processes.</p>
</li>
</ul>
</li>
<li>
<p>Monitor commands:</p>
<ul style="list-style-type: disc;">
<li>
<p>Monitor long-running processes and restart them if they terminate</p>
</li>
<li>
<p>Collect usage statistics</p>
</li>
</ul>
</li>
</ul>
<div class="section">
<p class="subhead1">Topics</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="process-api1.htm#GUID-ED9190A3-FE19-474F-8F85-36819B665130" title="The Process API consists of the classes and interfaces ProcessBuilder, Process, ProcessHandle, and ProcessHandle.Info.">Process API Classes and Interfaces</a></p>
</li>
<li>
<p><a href="process-api1.htm#GUID-81804DFA-D47A-4874-AF73-528365FEC711" title="To create a process, first specify the attributes of the process, such as the command name and its arguments, with the ProcessBuilder class. Then, start the process with the ProcessBuilder.start method, which returns a Process instance.">Creating a Process</a></p>
</li>
<li>
<p><a href="process-api1.htm#GUID-30EA2C53-C6BA-422F-9F04-2660525B7F3D" title="The method Process.pid returns the native process ID of the process. The method Process.info returns a ProcessHandle.Info instance, which contains additional information about the process, such as its executable path name, start time, and user.">Getting Information About a Process</a></p>
</li>
<li>
<p><a href="process-api1.htm#GUID-472F9FE1-DA6E-4A72-A19F-6EDF059B37B7" title="By default, a process writes standard output and standard error to pipes. In your application, you can access these pipes through the input streams returned by the methods Process.getOutputStream and Process.getErrorStream. However, before starting the process, you can redirect standard output and standard error to other destinations, such as a file, with the methods redirectOutput and redirectError.">Redirecting Output from a Process</a></p>
</li>
<li>
<p><a href="process-api1.htm#GUID-2A7BD6A9-7EE6-4050-A08A-BD7731BE2623" title="The method ProcessHandle.allProcesses returns a stream of all processes visible to the current process. You can filter the ProcessHandle instances of this stream the same way that you filter elements from a collection.">Filtering Processes with Streams</a></p>
</li>
<li>
<p><a href="process-api1.htm#GUID-A6A4B56A-7F3F-4ACD-930A-4E4AA3A930E7" title="The Process.onExit and ProcessHandle.onExit methods return a CompletableFuture instance, which you can use to schedule tasks when a process terminates. Alternatively, if you want your application to wait for a process to terminate, then you can call onExit().get().">Handling Processes When They Terminate with the onExit Method</a></p>
</li>
<li>
<p><a href="process-api1.htm#GUID-FB7E1852-6C0F-4681-8B35-E2F1ABF483D5" title="Process information may contain sensitive information such as user IDs, paths, and arguments to commands. Control access to process information with a security manager.">Controlling Access to Sensitive Process Information</a></p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<div class="sect2"><a id="GUID-ED9190A3-FE19-474F-8F85-36819B665130"></a>
<h2 id="JSCOR-GUID-ED9190A3-FE19-474F-8F85-36819B665130" class="sect2">Process API Classes and Interfaces</h2>
<div>
<p>The Process API consists of the classes and interfaces <code class="codeph">ProcessBuilder</code>, <code class="codeph">Process</code>, <code class="codeph">ProcessHandle</code>, and <code class="codeph">ProcessHandle.Info</code>.</p>
<div class="section">
<p class="subhead2">Topics</p>
<ul style="list-style-type: disc;">
<li>
<p><a href="process-api1.htm#GUID-0E93BAEE-8EA9-4D30-8204-AFD5AEA1EA04" title="The ProcessBuilder class lets you create and start operating system processes.">ProcessBuilder Class</a></p>
</li>
<li>
<p><a href="process-api1.htm#GUID-723DF356-3387-422C-A9B4-49A17ACE1AEB" title="The methods in the Process class let you to control processes started by the methods ProcessBuilder.start and Runtime.exec. The following table summarizes these methods:">Process Class</a></p>
</li>
<li>
<p><a href="process-api1.htm#GUID-2768CADC-6BAA-44CD-80D0-17B5E4DB9679" title="The ProcessHandle interface lets you identify and control native processes. The Process class is different from ProcessHandle because it lets you control processes started only by the methods ProcessBuilder.start and Runtime.exec; however, the Process class lets you access process input, output, and error streams.">ProcessHandle Interface</a></p>
</li>
<li>
<p><a href="process-api1.htm#GUID-294DB006-BD75-4B49-995E-D62693A29E69" title="The ProcessHandle.Info interface lets you retrieve information about a process, including processes created by the ProcessBuilder.start method and native processes.">ProcessHandle.Info Interface</a></p>
</li>
</ul>
</div>
<!-- class="section" --></div>
<div class="sect3"><a id="GUID-0E93BAEE-8EA9-4D30-8204-AFD5AEA1EA04"></a>
<h3 id="JSCOR-GUID-0E93BAEE-8EA9-4D30-8204-AFD5AEA1EA04" class="sect3">ProcessBuilder Class</h3>
<div>
<p>The <span class="apiname">ProcessBuilder</span> class lets you create and start operating system processes.</p>
<p>See <a href="process-api1.htm#GUID-81804DFA-D47A-4874-AF73-528365FEC711" title="To create a process, first specify the attributes of the process, such as the command name and its arguments, with the ProcessBuilder class. Then, start the process with the ProcessBuilder.start method, which returns a Process instance.">Creating a Process</a> for examples on how to create and start a process. The <a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessBuilder.html" target="_blank"><span class="apiname">ProcessBuilder</span></a> class manages various processes attributes, which the following table summarizes:</p>
<div class="tblformal" id="GUID-0E93BAEE-8EA9-4D30-8204-AFD5AEA1EA04__GUID-8F012C7B-F54C-4FD9-B152-C86887FF07D7">
<p class="titleintable">Table 6-1 ProcessBuilder Class Attributes and Related Methods</p>
<table class="cellalignment179" title="ProcessBuilder Class Attributes and Related Methods" summary="ProcessBuilder Class attributes and related methods">
<thead>
<tr class="cellalignment168">
<th class="cellalignment180" id="d5368e294">Process Attribute</th>
<th class="cellalignment180" id="d5368e296">Description</th>
<th class="cellalignment180" id="d5368e298">Related Methods</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e302" headers="d5368e294">Command</td>
<td class="cellalignment168" headers="d5368e302 d5368e296">Strings that specify the external program file to call and its arguments, if any.</td>
<td class="cellalignment168" headers="d5368e302 d5368e298">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessBuilder.html#ProcessBuilder-java.lang.String...-" target="_blank"><span class="apiname">ProcessBuilder</span></a> constructor</p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessBuilder.html#command-java.lang.String...-" target="_blank"><span class="apiname">command&#8203;(String... command)</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e322" headers="d5368e294">Environment</td>
<td class="cellalignment168" headers="d5368e322 d5368e296">The environment variables (and their values). This is initially a copy of the system environment of the current process.</td>
<td class="cellalignment168" headers="d5368e322 d5368e298">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessBuilder.html#environment--" target="_blank"><span class="apiname">environment&#8203;()</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e335" headers="d5368e294">Working directory</td>
<td class="cellalignment168" headers="d5368e335 d5368e296">By default, the current working directory of the current process.</td>
<td class="cellalignment168" headers="d5368e335 d5368e298">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessBuilder.html#directory--" target="_blank"><span class="apiname">directory()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessBuilder.html#directory-java.io.File-" target="_blank"><span class="apiname">directory&#8203;(File directory)</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e354" headers="d5368e294">Standard input source</td>
<td class="cellalignment168" headers="d5368e354 d5368e296">By default, a process reads standard input from a pipe; access this through the output stream returned by the <a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#getOutputStream--" target="_blank"><span class="apiname">Process.getOutputStream</span></a> method.</td>
<td class="cellalignment168" headers="d5368e354 d5368e298">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessBuilder.html#redirectInput-java.lang.ProcessBuilder.Redirect-" target="_blank"><span class="apiname">redirectInput&#8203;(ProcessBuilder.Redirect source)</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e372" headers="d5368e294">Standard output and standard error destinations</td>
<td class="cellalignment168" headers="d5368e372 d5368e296">By default, a process writes standard output and standard error to pipes; access these through the input streams returned by the <a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#getInputStream--" target="_blank"><span class="apiname">Process.getInputStream</span></a> and <a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#getErrorStream--" target="_blank"><span class="apiname">Process.getErrorStream</span></a> methods. See <a href="process-api1.htm#GUID-472F9FE1-DA6E-4A72-A19F-6EDF059B37B7" title="By default, a process writes standard output and standard error to pipes. In your application, you can access these pipes through the input streams returned by the methods Process.getOutputStream and Process.getErrorStream. However, before starting the process, you can redirect standard output and standard error to other destinations, such as a file, with the methods redirectOutput and redirectError.">Redirecting Output from a Process</a> for an example.</td>
<td class="cellalignment168" headers="d5368e372 d5368e298">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessBuilder.html#redirectOutput-java.lang.ProcessBuilder.Redirect-" target="_blank"><span class="apiname">redirectOutput(ProcessBuilder.Redirect destination)</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessBuilder.html#redirectError-java.lang.ProcessBuilder.Redirect-" target="_blank"><span class="apiname">redirectError(ProcessBuilder.Redirect destination)</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e419" headers="d5368e294"><span class="apiname">redirectErrorStream</span> property</td>
<td class="cellalignment168" headers="d5368e419 d5368e296">Specifies whether to send standard output and error output as two separate streams (with a value of false) or merge any error output with standard output (with a value of true).</td>
<td class="cellalignment168" headers="d5368e419 d5368e298">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessBuilder.html#redirectErrorStream--" target="_blank"><span class="apiname">redirectErrorStream&#8203;()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessBuilder.html#redirectErrorStream-boolean-" target="_blank"><span class="apiname">redirectErrorStream&#8203;(boolean redirectErrorStream)</span></a></p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<div class="sect3"><a id="GUID-723DF356-3387-422C-A9B4-49A17ACE1AEB"></a>
<h3 id="JSCOR-GUID-723DF356-3387-422C-A9B4-49A17ACE1AEB" class="sect3">Process Class</h3>
<div>
<p>The methods in the <span class="apiname">Process</span> class let you to control processes started by the methods <span class="apiname">ProcessBuilder.start</span> and <span class="apiname">Runtime.exec</span>. The following table summarizes these methods:</p>
<p>The following table summarizes the methods of the <a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html" target="_blank"><span class="apiname">Process</span></a> class.</p>
<div class="tblformal" id="GUID-723DF356-3387-422C-A9B4-49A17ACE1AEB__GUID-83473CE6-CB7E-43B5-9EF6-AA9AD495CA47">
<p class="titleintable">Table 6-2 Process Class Methods</p>
<table class="cellalignment179" title="Process Class Methods" summary="Process Class methods">
<thead>
<tr class="cellalignment168">
<th class="cellalignment180" id="d5368e474">Method Type</th>
<th class="cellalignment180" id="d5368e476">Related Methods</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e480" headers="d5368e474">Wait for the process to complete.</td>
<td class="cellalignment168" headers="d5368e480 d5368e476">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#waitFor--" target="_blank"><span class="apiname">waitfor()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#waitFor-long-java.util.concurrent.TimeUnit-" target="_blank"><span class="apiname">waitFor&#8203;(long timeout, TimeUnit unit)</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e497" headers="d5368e474">Retrieve information about the process.</td>
<td class="cellalignment168" headers="d5368e497 d5368e476">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#isAlive--" target="_blank"><span class="apiname">isAlive&#8203;()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#pid--" target="_blank"><span class="apiname">pid()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#info--" target="_blank"><span class="apiname">info()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#exitValue--" target="_blank"><span class="apiname">exitValue()</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e526" headers="d5368e474">Retrieve input, output, and error streams. See <a href="process-api1.htm#GUID-A6A4B56A-7F3F-4ACD-930A-4E4AA3A930E7" title="The Process.onExit and ProcessHandle.onExit methods return a CompletableFuture instance, which you can use to schedule tasks when a process terminates. Alternatively, if you want your application to wait for a process to terminate, then you can call onExit().get().">Handling Processes When They Terminate with the onExit Method</a> for an example.</td>
<td class="cellalignment168" headers="d5368e526 d5368e476">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#getInputStream--" target="_blank"><span class="apiname">getInputStream()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#getOutputStream--" target="_blank"><span class="apiname">getOutputStream()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#getErrorStream--" target="_blank"><span class="apiname">getErrorStream()</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e567" headers="d5368e474">Retrieve direct and indirect child processes.</td>
<td class="cellalignment168" headers="d5368e567 d5368e476">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#children--" target="_blank"><span class="apiname">children()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#descendants--" target="_blank"><span class="apiname">descendants()</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e584" headers="d5368e474">Destroy or terminate the process.</td>
<td class="cellalignment168" headers="d5368e584 d5368e476">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#destroy--" target="_blank"><span class="apiname">destroy()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#destroyForcibly--" target="_blank"><span class="apiname">destroyForcibly()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#supportsNormalTermination--" target="_blank"><span class="apiname">supportsNormalTermination()</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e607" headers="d5368e474">Return a <a href="https://docs.oracle.com/javase/10/docs/api/java/util/concurrent/CompletableFuture.html" target="_blank"><span class="apiname">CompletableFuture</span></a> instance that will be completed when the process exits. See <a href="process-api1.htm#GUID-A6A4B56A-7F3F-4ACD-930A-4E4AA3A930E7" title="The Process.onExit and ProcessHandle.onExit methods return a CompletableFuture instance, which you can use to schedule tasks when a process terminates. Alternatively, if you want your application to wait for a process to terminate, then you can call onExit().get().">Handling Processes When They Terminate with the onExit Method</a> for an example.</td>
<td class="cellalignment168" headers="d5368e607 d5368e476">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/Process.html#onExit--" target="_blank"><span class="apiname">onExit()</span></a></p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<div class="sect3"><a id="GUID-2768CADC-6BAA-44CD-80D0-17B5E4DB9679"></a>
<h3 id="JSCOR-GUID-2768CADC-6BAA-44CD-80D0-17B5E4DB9679" class="sect3">ProcessHandle Interface</h3>
<div>
<p>The <span class="apiname">ProcessHandle</span> interface lets you identify and control native processes. The <span class="apiname">Process</span> class is different from <span class="apiname">ProcessHandle</span> because it lets you control processes started only by the methods <span class="apiname">ProcessBuilder.start</span> and <span class="apiname">Runtime.exec</span>; however, the <span class="apiname">Process</span> class lets you access process input, output, and error streams.</p>
<p>See <a href="process-api1.htm#GUID-2A7BD6A9-7EE6-4050-A08A-BD7731BE2623" title="The method ProcessHandle.allProcesses returns a stream of all processes visible to the current process. You can filter the ProcessHandle instances of this stream the same way that you filter elements from a collection.">Filtering Processes with Streams</a> for an example of the <a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.html" target="_blank"><span class="apiname">ProcessHandle</span></a> interface. The following table summarizes the methods of this interface:</p>
<div class="tblformal" id="GUID-2768CADC-6BAA-44CD-80D0-17B5E4DB9679__GUID-512F0A47-3566-441A-AAD0-F424CE378C63">
<p class="titleintable">Table 6-3 ProcessHandle Interface Methods</p>
<table class="cellalignment179" title="ProcessHandle Interface Methods" summary="ProcessHandle interface methods">
<thead>
<tr class="cellalignment168">
<th class="cellalignment180" id="d5368e698">Method Type</th>
<th class="cellalignment180" id="d5368e700">Related Methods</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e704" headers="d5368e698">Retrieve all operating system processes.</td>
<td class="cellalignment168" headers="d5368e704 d5368e700">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.html#allProcesses--" target="_blank"><span class="apiname">allProcesses()</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e715" headers="d5368e698">Retrieve process handles.</td>
<td class="cellalignment168" headers="d5368e715 d5368e700">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.html#current--" target="_blank"><span class="apiname">current()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.html#of-long-" target="_blank"><span class="apiname">of(long pid)</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.html#parent--" target="_blank"><span class="apiname">parent()</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e738" headers="d5368e698">Retrieve information about the process.</td>
<td class="cellalignment168" headers="d5368e738 d5368e700">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.html#isAlive--" target="_blank"><span class="apiname">isAlive()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.html#pid--" target="_blank"><span class="apiname">pid()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.html#info--" target="_blank"><span class="apiname">info()</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e761" headers="d5368e698">Retrieve streams of direct and indirect child processes.</td>
<td class="cellalignment168" headers="d5368e761 d5368e700">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.html#children--" target="_blank"><span class="apiname">children()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.html#descendants--" target="_blank"><span class="apiname">descendants()</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e778" headers="d5368e698">Destroy processes.</td>
<td class="cellalignment168" headers="d5368e778 d5368e700">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.html#destroy--" target="_blank"><span class="apiname">destroy()</span></a></p>
</li>
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.html#destroyForcibly--" target="_blank"><span class="apiname">destroyForcibly()</span></a></p>
</li>
</ul>
</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e795" headers="d5368e698">Return a <a href="https://docs.oracle.com/javase/10/docs/api/java/util/concurrent/CompletableFuture.html" target="_blank"><span class="apiname">CompletableFuture</span></a> instance that will be completed when the process exits. See <a href="process-api1.htm#GUID-A6A4B56A-7F3F-4ACD-930A-4E4AA3A930E7" title="The Process.onExit and ProcessHandle.onExit methods return a CompletableFuture instance, which you can use to schedule tasks when a process terminates. Alternatively, if you want your application to wait for a process to terminate, then you can call onExit().get().">Handling Processes When They Terminate with the onExit Method</a> for an example.</td>
<td class="cellalignment168" headers="d5368e795 d5368e700">
<ul style="list-style-type: disc;">
<li>
<p><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.html#onExit--" target="_blank"><span class="apiname">onExit()</span></a></p>
</li>
</ul>
</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
<div class="sect3"><a id="GUID-294DB006-BD75-4B49-995E-D62693A29E69"></a>
<h3 id="JSCOR-GUID-294DB006-BD75-4B49-995E-D62693A29E69" class="sect3">ProcessHandle.Info Interface</h3>
<div>
<p>The <span class="apiname">ProcessHandle.Info</span> interface lets you retrieve information about a process, including processes created by the <span class="apiname">ProcessBuilder.start</span> method and native processes.</p>
<p>See <a href="process-api1.htm#GUID-30EA2C53-C6BA-422F-9F04-2660525B7F3D" title="The method Process.pid returns the native process ID of the process. The method Process.info returns a ProcessHandle.Info instance, which contains additional information about the process, such as its executable path name, start time, and user.">Getting Information About a Process</a> for an example of the <a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.Info.html" target="_blank"><span class="apiname">ProcessHandle.Info</span></a> interface. The following table summarizes the methods in this interface:</p>
<div class="tblformal" id="GUID-294DB006-BD75-4B49-995E-D62693A29E69__GUID-B89F7124-187D-43DC-B27B-64A4C8D09D9E">
<p class="titleintable">Table 6-4 ProcessHandle.Info Interface Methods</p>
<table class="cellalignment179" title="ProcessHandle.Info Interface Methods" summary="ProcessHandle.Info interface methods">
<thead>
<tr class="cellalignment168">
<th class="cellalignment180" id="d5368e875">Method</th>
<th class="cellalignment180" id="d5368e877">Description</th>
</tr>
</thead>
<tbody>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e881" headers="d5368e875"><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.Info.html#arguments--" target="_blank"><span class="apiname">arguments()</span></a></td>
<td class="cellalignment168" headers="d5368e881 d5368e877">Returns the arguments of the process as a <span class="apiname">String</span> array.</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e892" headers="d5368e875"><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.Info.html#command--" target="_blank"><span class="apiname">command()</span></a></td>
<td class="cellalignment168" headers="d5368e892 d5368e877">Returns the executable path name of the process.</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e900" headers="d5368e875"><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.Info.html#commandLine--" target="_blank"><span class="apiname">commandLine()</span></a></td>
<td class="cellalignment168" headers="d5368e900 d5368e877">Returns the command line of the process.</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e908" headers="d5368e875"><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.Info.html#startInstant--" target="_blank"><span class="apiname">startInstant()</span></a></td>
<td class="cellalignment168" headers="d5368e908 d5368e877">Returns the start time of the process.</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e916" headers="d5368e875"><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.Info.html#totalCpuDuration--" target="_blank"><span class="apiname">totalCpuDuration()</span></a></td>
<td class="cellalignment168" headers="d5368e916 d5368e877">Returns the total CPU time accumulated of the process.</td>
</tr>
<tr class="cellalignment168">
<td class="cellalignment168" id="d5368e924" headers="d5368e875"><a href="https://docs.oracle.com/javase/10/docs/api/java/lang/ProcessHandle.Info.html#user--" target="_blank"><span class="apiname">user()</span></a></td>
<td class="cellalignment168" headers="d5368e924 d5368e877">Returns the user of the process.</td>
</tr>
</tbody>
</table>
</div>
<!-- class="inftblhruleinformal" --></div>
</div>
</div>
<div class="sect2"><a id="GUID-81804DFA-D47A-4874-AF73-528365FEC711"></a>
<h2 id="JSCOR-GUID-81804DFA-D47A-4874-AF73-528365FEC711" class="sect2">Creating a Process</h2>
<div>
<p>To create a process, first specify the attributes of the process, such as the command name and its arguments, with the <span class="apiname">ProcessBuilder</span> class. Then, start the process with the <span class="apiname">ProcessBuilder.start</span> method, which returns a <span class="apiname">Process</span> instance.</p>
<p>The following lines create and start a process:</p>
<pre dir="ltr">
  ProcessBuilder pb = new ProcessBuilder("echo", "Hello World!");
  Process p = pb.start();
</pre>
<p>In the following excerpt, the <code class="codeph">setEnvTest</code> method sets two environment variables, <code class="codeph">horse</code> and <code class="codeph">oats</code>, then prints the value of these environment variables (as well as the system environment variable <code class="codeph">HOME</code>) with the <code class="codeph">echo</code> command:</p>
<pre dir="ltr">
  public static void setEnvTest() throws IOException, InterruptedException {
    ProcessBuilder pb =
      new ProcessBuilder("/bin/sh", "-c", "echo $horse $dog $HOME").inheritIO();
    pb.environment().put("horse", "oats");
    pb.environment().put("dog", "treats");
    pb.start().waitFor();
  }
</pre>
<p>This method prints the following (assuming that your home directory is <code class="codeph">/home/admin</code>):</p>
<pre dir="ltr">
oats treats /home/admin
</pre></div>
</div>
<div class="sect2"><a id="GUID-30EA2C53-C6BA-422F-9F04-2660525B7F3D"></a>
<h2 id="JSCOR-GUID-30EA2C53-C6BA-422F-9F04-2660525B7F3D" class="sect2">Getting Information About a Process</h2>
<div>
<p>The method <span class="apiname">Process.pid</span> returns the native process ID of the process. The method <span class="apiname">Process.info</span> returns a <span class="apiname">ProcessHandle.Info</span> instance, which contains additional information about the process, such as its executable path name, start time, and user.</p>
<p>In the following excerpt, the method <code class="codeph">getInfoTest</code> starts a process and then prints information about it:</p>
<pre dir="ltr">
  public static void getInfoTest() throws IOException {
    ProcessBuilder pb = new ProcessBuilder("echo", "Hello World!");
    String na = "&lt;not available&gt;";
    Process p = pb.start();
    ProcessHandle.Info info = p.info();
    System.out.printf("Process ID: %s%n", p.pid());
    System.out.printf("Command name: %s%n", info.command().orElse(na));
    System.out.printf("Command line: %s%n", info.commandLine().orElse(na));
    
    System.out.printf("Start time: %s%n",
      info.startInstant().map(i -&gt; i.atZone(ZoneId.systemDefault())
                                    .toLocalDateTime().toString())
                         .orElse(na));
    
    System.out.printf("Arguments: %s%n",
      info.arguments().map(a -&gt; Stream.of(a)
                                      .collect(Collectors.joining(" ")))
                      .orElse(na));
  
    System.out.printf("User: %s%n", info.user().orElse(na));
  }
</pre>
<p>This method prints output similar to the following:</p>
<pre dir="ltr">
Process ID: 18761
Command name: /usr/bin/echo
Command line: echo Hello World!
Start time: 2017-05-30T18:52:15.577
Arguments: &lt;not available&gt;
User: administrator
</pre>
<div class="infobox-note" id="GUID-30EA2C53-C6BA-422F-9F04-2660525B7F3D__GUID-C7A729B4-4A41-4D0B-A36F-1B9923B09C5C">
<p class="notep1">Note:</p>
<ul style="list-style-type: disc;">
<li>
<p>The attributes of a process vary by operating system and are not available in all implementations. In addition, information about processes is limited by the operating system privileges of the process making the request.</p>
</li>
<li>
<p>All the methods in the interface <span class="apiname">ProcessHandle.Info</span> return instances of <span class="apiname">Optional&lt;T&gt;</span>; always check if the returned value is empty.</p>
</li>
</ul>
</div>
</div>
</div>
<div class="sect2"><a id="GUID-472F9FE1-DA6E-4A72-A19F-6EDF059B37B7"></a>
<h2 id="JSCOR-GUID-472F9FE1-DA6E-4A72-A19F-6EDF059B37B7" class="sect2">Redirecting Output from a Process</h2>
<div>
<p>By default, a process writes standard output and standard error to pipes. In your application, you can access these pipes through the input streams returned by the methods <span class="apiname">Process.getOutputStream</span> and <span class="apiname">Process.getErrorStream</span>. However, before starting the process, you can redirect standard output and standard error to other destinations, such as a file, with the methods <code class="codeph">redirectOutput</code> and <code class="codeph">redirectError</code>.</p>
<p>In the following excerpt, the method <code class="codeph">redirectToFileTest</code> redirects standard input to a file, <code>out.tmp</code>, then prints this file:</p>
<pre dir="ltr">
  public static void redirectToFileTest() throws IOException, InterruptedException {
    File outFile = new File("out.tmp");
    Process p = new ProcessBuilder("ls", "-la")
      .redirectOutput(outFile)
      .redirectError(Redirect.INHERIT)
      .start();
    int status = p.waitFor();
    if (status == 0) {
      p = new ProcessBuilder("cat" , outFile.toString())
        .inheritIO()
        .start();
      p.waitFor();
    }
  }
</pre>
<p>The excerpt redirects standard output to the file <code>out.tmp</code>. It redirects standard error to the standard error of the invoking process; the value <span class="apiname">Redirect.INHERIT</span> specifies that the subprocess I/O source or destination is the same as that of the current process. The call to the <span class="apiname">inheritIO()</span> method is equivalent to <span class="apiname">redirectInput(Redirect.INHERIT).redirectOuput(Redirect.INHERIT).redirectError(Redirect.INHERIT)</span>.</p>
</div>
</div>
<div class="sect2"><a id="GUID-2A7BD6A9-7EE6-4050-A08A-BD7731BE2623"></a>
<h2 id="JSCOR-GUID-2A7BD6A9-7EE6-4050-A08A-BD7731BE2623" class="sect2">Filtering Processes with Streams</h2>
<div>
<p>The method <span class="apiname">ProcessHandle.allProcesses</span> returns a stream of all processes visible to the current process. You can filter the <span class="apiname">ProcessHandle</span> instances of this stream the same way that you filter elements from a collection.</p>
<p>In the following excerpt, the method <code class="codeph">filterProcessesTest</code> prints information about all the processes owned by the current user, sorted by the process ID of their parent's process:</p>
<pre dir="ltr">
public class ProcessTest {

  // ...

  static void filterProcessesTest() {
    Optional&lt;String&gt; currUser = ProcessHandle.current().info().user();
    ProcessHandle.allProcesses()
        .filter(p1 -&gt; p1.info().user().equals(currUser))
        .sorted(ProcessTest::parentComparator)
        .forEach(ProcessTest::showProcess);
  }

  static int parentComparator(ProcessHandle p1, ProcessHandle p2) {
    long pid1 = p1.parent().map(ph -&gt; ph.pid()).orElse(-1L);
    long pid2 = p2.parent().map(ph -&gt; ph.pid()).orElse(-1L);
    return Long.compare(pid1, pid2);
  }

  static void showProcess(ProcessHandle ph) {
    ProcessHandle.Info info = ph.info();
    System.out.printf("pid: %d, user: %s, cmd: %s%n",
      ph.pid(), info.user().orElse("none"), info.command().orElse("none"));
  } 

  // ...
}
</pre>
<p>Note that the <span class="apiname">allProcesses</span> method is limited by native operating system access controls. Also, because all processes are created and terminated asynchronously, there is no guarantee that a process in the stream is alive or that no other processes may have been created since the call to the <span class="apiname">allProcesses</span> method.</p>
</div>
</div>
<div class="sect2"><a id="GUID-A6A4B56A-7F3F-4ACD-930A-4E4AA3A930E7"></a>
<h2 id="JSCOR-GUID-A6A4B56A-7F3F-4ACD-930A-4E4AA3A930E7" class="sect2">Handling Processes When They Terminate with the onExit Method</h2>
<div>
<p>The <span class="apiname">Process.onExit</span> and <span class="apiname">ProcessHandle.onExit</span> methods return a <span class="apiname">CompletableFuture</span> instance, which you can use to schedule tasks when a process terminates. Alternatively, if you want your application to wait for a process to terminate, then you can call <span class="apiname">onExit().get()</span>.</p>
<p>In the following excerpt, the method <code class="codeph">startProcessesTest</code> creates three processes and then starts them. Afterward, it calls <code class="codeph">onExit().thenAccept(onExitMethod)</code> on each of the processes; <code class="codeph">onExitMethod</code> prints the process ID (PID), exit status, and output of the process.</p>
<pre dir="ltr">
public class ProcessTest {

  // ...

  static public void startProcessesTest() throws IOException, InterruptedException {
    List&lt;ProcessBuilder&gt; greps = new ArrayList&lt;&gt;();
    greps.add(new ProcessBuilder("/bin/sh", "-c", "grep -c \"java\" *"));
    greps.add(new ProcessBuilder("/bin/sh", "-c", "grep -c \"Process\" *"));
    greps.add(new ProcessBuilder("/bin/sh", "-c", "grep -c \"onExit\" *"));
    ProcessTest.startSeveralProcesses (greps, ProcessTest::printGrepResults);      
    System.out.println("\nPress enter to continue ...\n");
    System.in.read();  
  }

  static void startSeveralProcesses (
    List&lt;ProcessBuilder&gt; pBList,
    Consumer&lt;Process&gt; onExitMethod)
    throws InterruptedException {
    System.out.println("Number of processes: " + pBList.size());
    pBList.stream().forEach(
      pb -&gt; {
        try {
          Process p = pb.start();
          System.out.printf("Start %d, %s%n",
            p.pid(), p.info().commandLine().orElse("&lt;na&gt;"));
          p.onExit().thenAccept(onExitMethod);
        } catch (IOException e) {
          System.err.println("Exception caught");
          e.printStackTrace();
        }
      }
    );
  }
  
  static void printGrepResults(Process p) {
    System.out.printf("Exit %d, status %d%n%s%n%n",
      p.pid(), p.exitValue(), output(p.getInputStream()));
  }

  private static String output(InputStream inputStream) {
    String s = "";
    try (BufferedReader br = new BufferedReader(new InputStreamReader(inputStream))) {
      s = br.lines().collect(Collectors.joining(System.getProperty("line.separator")));
    } catch (IOException e) {
      System.err.println("Caught IOException");
      e.printStackTrace();
    }
    return s;
  }

  // ...
}
</pre>
<p>The output of the method <code class="codeph">startProcessesTest</code> is similar to the following. Note that the processes might exit in a different order than the order in which they were started.</p>
<pre dir="ltr">
Number of processes: 3
Start 12401, /bin/sh -c grep -c "java" *
Start 12403, /bin/sh -c grep -c "Process" *
Start 12404, /bin/sh -c grep -c "onExit" *

Press enter to continue ...

Exit 12401, status 0
ProcessTest.class:0
ProcessTest.java:16

Exit 12404, status 0
ProcessTest.class:0
ProcessTest.java:8

Exit 12403, status 0
ProcessTest.class:0
ProcessTest.java:38
</pre>
<p>This method calls the <span class="apiname">System.in.read()</span> method to prevent the program from terminating before all the processes have exited (and have run the method specified by the <span class="apiname">thenAccept</span> method).</p>
<p>If you want to wait for a process to terminate before proceeding with the rest of the program, then call <code class="codeph">onExit().get()</code>:</p>
<pre dir="ltr">
  static void startSeveralProcesses (
    List&lt;ProcessBuilder&gt; pBList, Consumer&lt;Process&gt; onExitMethod)
    throws InterruptedException {
    System.out.println("Number of processes: " + pBList.size());
    pBList.stream().forEach(
      pb -&gt; {
        try {
          Process p = pb.start();
          System.out.printf("Start %d, %s%n",
            p.pid(), p.info().commandLine().orElse("&lt;na&gt;"));
          <span class="bold">p.onExit().get();</span>
          <span class="bold">printGrepResults(p);</span>          
        } catch (IOException<span class="bold">|InterruptedException|ExecutionException</span> e ) {
          System.err.println("Exception caught");
          e.printStackTrace();
        }
      }
    );
  }
</pre>
<p>The <code class="codeph">ComputableFuture</code> class contains a variety of methods that you can call to schedule tasks when a process exits including the following:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="apiname">thenApply</span>: Similar to <span class="apiname">thenAccept</span>, except that it takes a lambda expression of type <span class="apiname">Function</span> (a lambda expression that returns a value).</p>
</li>
<li>
<p><span class="apiname">thenRun</span>: Takes a lambda expression of type <span class="apiname">Runnable</span> (no formal parameters or return value).</p>
</li>
<li>
<p><span class="apiname">thenApplyAsyc</span>: Runs the specified <span class="apiname">Function</span> with a thread from <code class="codeph">ForkJoinPool.commonPool()</code>.</p>
</li>
</ul>
<p>Because <code class="codeph">ComputableFuture</code> implements the <code class="codeph">Future</code> interface, this class also contains synchronous methods:</p>
<ul style="list-style-type: disc;">
<li>
<p><span class="apiname">get&#8203;(long&nbsp;timeout, TimeUnit&nbsp;unit)</span>: Waits, if necessary, at most the time specified by its arguments for the process to complete.</p>
</li>
<li>
<p><span class="apiname">isDone</span>: Returns true if the process is completed.</p>
</li>
</ul>
</div>
</div>
<div class="sect2"><a id="GUID-FB7E1852-6C0F-4681-8B35-E2F1ABF483D5"></a>
<h2 id="JSCOR-GUID-FB7E1852-6C0F-4681-8B35-E2F1ABF483D5" class="sect2">Controlling Access to Sensitive Process Information</h2>
<div>
<p>Process information may contain sensitive information such as user IDs, paths, and arguments to commands. Control access to process information with a security manager.</p>
<p>When running as a normal application, a <code class="codeph">ProcessHandle</code> has the same operating system privileges to information about other processes as a native application; however, information about system processes may not be available.</p>
<p>If your application uses the <span class="apiname">SecurityManager</span> class to implement a security policy, then to enable it to access process information, the security policy must grant <span class="apiname">RuntimePermission("manageProcess")</span>. This permission enables native process termination and access to the process <span class="apiname">ProcessHandle</span> information. Note that this permission enables code to identify and terminate processes that it did not create.</p>
</div>
</div>
</div>
<!-- class="ind" --><!-- Start Footer -->
</div>
<!-- add extra wrapper close div-->
<footer><!--
<hr />
<table class="cellalignment167">
<tr>
<td class="cellalignment174">
<table class="cellalignment172">
<tr>
<td class="cellalignment171"><a href="creating-immutable-lists-sets-and-maps.htm"><img width="24" height="24" src="../dcommon/gifs/leftnav.gif" alt="Go to previous page" /><br />
<span class="icon">Previous</span></a></td>
<td class="cellalignment171"><a href="java-logging-overview.htm"><img width="24" height="24" src="../dcommon/gifs/rightnav.gif" alt="Go to next page" /><br />
<span class="icon">Next</span></a></td>
</tr>
</table>
</td>
<td class="cellalignment-copyrightlogo"><img width="144" height="18" src="../dcommon/gifs/oracle.gif" alt="Oracle" /><br />
Copyright&nbsp;&copy;&nbsp;2017, 2018, Oracle&nbsp;and/or&nbsp;its&nbsp;affiliates.&nbsp;All&nbsp;rights&nbsp;reserved.<br />
<a href="../dcommon/html/cpyr.htm">Legal Notices</a></td>
<td class="cellalignment176">
<table class="cellalignment170">
<tr>
<td class="cellalignment171"><a href="http://docs.oracle.com/javase/10/index.html"><img width="24" height="24" src="../dcommon/gifs/doclib.gif" alt="Go to Documentation Home" /><br />
<span class="icon">Home</span></a></td>
<td class="cellalignment171"><a href="toc.htm"><img width="24" height="24" src="../dcommon/gifs/toc.gif" alt="Go to Table of Contents" /><br />
<span class="icon">Contents</span></a></td>
<td class="cellalignment171"><a href="../dcommon/html/feedback.htm"><img width="24" height="24" src="../dcommon/gifs/feedbck2.gif" alt="Go to Feedback page" /><br />
<span class="icon">Contact Us</span></a></td>
</tr>
</table>
</td>
</tr>
</table>
--></footer>
<noscript>
<p>Scripting on this page enhances content navigation, but does not change the content in any way.</p>
</noscript>
</body>
</html>
