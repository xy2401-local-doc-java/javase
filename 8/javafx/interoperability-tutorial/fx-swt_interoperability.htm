<!DOCTYPE html>
<!--[if lt IE 7]>      <html lang="en" class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html lang="en" class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html lang="en" class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html lang="en" class="no-js"> <!--<![endif]-->

<head>

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<title>8 JavaFX Interoperability with SWT (Release 8)</title>
<meta name="description" content="This article shows how to add a JavaFX scene graph to a Standard Widget Toolkit (SWT) application, and how to make SWT and JavaFX controls interoperate.">

<meta name="viewport" content="width=device-width">

<link rel="stylesheet" href="../../assets/css/main.css">
<link rel="stylesheet" href="../../assets/css/main-media-480-tablet.css">
<link rel="stylesheet" href="../../assets/css/main-media-768-laptop.css">
<link rel="stylesheet" href="../../assets/css/main-media-1140-deskp.css">

<link rel="stylesheet" href="../../assets/css/simpletree.css">
<link rel="stylesheet" href="../../assets/css/forms.css">
<link rel="stylesheet" href="../../assets/css/panel.css">
<link rel="stylesheet" href="../../assets/css/altanav.css">
<link rel="stylesheet" href="../../assets/css/docstyles.css">

<link rel="stylesheet" href="../../assets/css/print.css">
<link rel="stylesheet" href="../../assets/css/home.css">
<link rel="stylesheet" href="../../assets/css/normalize.min.css">    

        
<!--[if lt IE 9]>
<link rel="stylesheet" href="../../assets/css/ltIE9.css">
<![endif]-->         
        
<script src="../../assets/js/jquery-1.6.2.js"></script>
<script src="../../assets/js/modernizr-2.6.1-respond-1.1.0.min.js"></script>

<!--toggle search-->
<script src="../../assets/js/toggle.search.js"  type="text/javascript"></script>
<!--navigation main-->
<script src="../../assets/js/altanav.js"  type="text/javascript"></script> 
<!--custom tag element-->
<script src="../../assets/js/customhtmltags.js"  type="text/javascript"></script> 

<!--project specific head data-->
  
<!-- Function for printing -->  
<script>
function PrintPage()
  {window.print();}
</script>

<script>
  $(window).unload(function() {
  });
</script>


<!-- keep select menu's sticking when hit back button-->
<script>
$(window).load(function () {
    $("select").each(function () {
        $(this).val($(this).find('option[selected]').val());
    });
});
</script>

<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>

<body>
<!--[if lt IE 7]>
<div style="border-bottom: 1px solid #A3A481; background-color: #FFFFDC; padding: 10px; font: normal 13px/16px Arial, sans-serif;">
<strong>You are running an older version of Internet Explorer or running Internet Explorer in compatibility mode.</strong>  For a richer experience, please upgrade to the latest <a target="_blank" href="http://windows.microsoft.com/en-US/internet-explorer/downloads/ie" target="_blank">Internet Explorer</a> version, or use <a target="_blank" href="http://www.google.com/chrome/" target="_blank">Chrome</a>, <a target="_blank" href="http://www.mozilla.com/en-US/firefox/" target="_blank">Firefox</a>, or <a target="_blank" href="http://www.apple.com/safari/" target="_blank">Safari</a>.
</div>
<![endif]--> 

<div id="altlogo">Oracle | Hardware and Software, Engineered to Work Together</div>

<span id="top"></span>


<div class="header-container">
<header class="bookwrapper  clearfix">

<div id="brandProdName" >
<div id="logocover"></div>
<div id="productName" >Documentation</div>
</div> 

<div id="signInArea"></div>
<script type="text/javascript">
$(document).ready(function() {
$("#signInArea").load("../../version.html");
});
</script>

<div id="searchheader">
<a href="/javase/search.html" class="button">Search Java SE Documentation</a></div>

<!-- Main Navigation -->
 <br class="clearfloat" />
 <div id="navBar" class="io" >

<!--
<ul>
<li><a class="menu1" title="Home" href="pg-home.php"><span>Home</span></a></li>
<li><a class="menu2" title="What's New"><span>What's New</span><span class="dropdown-arrow"></span></a></li>
<li><a class="menu3" title="All Books" href="pg-allbooks-infotype.php"><span>All Books</span></a></li>
</ul>
-->
</div>
            <br class="clearfloat" />
<!--         
<div id="navcontainer" >
<div class="submenu2 shadow" ><h3>See What's New in <strong>SE</strong> Documentation</h3>
</div>

</div> -->
            <br class="clearfloat" />
<!-- End Main Navigation -->


  </header>
</div><!-- header -->

<div class="main-container" >
<div class="main bookwrapper bookindent clearfix" >

<div id="breadcrumb">
  <a href="../../index.html">Java Platform, Standard Edition (Java SE) 8</a>
</div>
<div class="bookoptions"><a href="mailto:javasedocs_us@oracle.com" title="Send Feedback">Send Feedback</a> | <a href="#" onclick="PrintPage();">Print</a>
 | <a href="../JFXIP.pdf">PDF</a> | <a href="../JFXIP.epub">ePub</a> | <a href="../JFXIP.mobi">Mobi</a>
</div>

<div class="booktitle">JavaFX: Interoperability</div>

<div class="contentarea clearboth">

<script type="text/javascript">

$(document).ready(function(){

//////////////////////
$(".trig1").click(function(){
        $("#panel1").toggle("fast"); <!--/*makes panel visible*/-->
        $(this).toggleClass("active"); <!--makes trigger expand out-->
        return false;
    });

///////////////////////

$("#X").click(function(){
      // trigger click is needed for css .active to work
	  $( ".trig1" ).trigger( "click" );
   return false;
    });

/*/////////////////////

$("#panel1").mouseleave(function(){
  $( ".trig1" ).trigger( "click" );
   return false;
});

/////////////////////*/
});

</script>


<!-- page navigation -->

<!--div id="tocbutton" ><span class="button"><a href="#mypanel"><img src="../../assets/img-common/3linemenu.png" alt="menu icon" />Menu</a></span></div-->

<div id="pagenav"><a class="button" title="Previous Page" href="fx_swt.htm">Previous Page</a><a class="button" title="Next Page" href="sample-source-code.htm">Next Page</a></div>

<article>

<!-- End Header --><a id="CDDJAFEI" name="CDDJAFEI" class="anchor"></a><a id="JFXIP101" name="JFXIP101" class="anchor"></a>
<h1 class="chapter"><span class="secnum">8</span> JavaFX Interoperability with SWT</h1>
<a id="JFXIP602" name="JFXIP602" class="anchor"></a>
<p>This article shows how to add a JavaFX scene graph to a Standard Widget Toolkit (SWT) application, and how to make SWT and JavaFX controls interoperate.</p>
<ul>
<li>
<p><a href="#A1208348">"Introduction"</a></p>
</li>
<li>
<p><a href="#BABBGIGI">"Adding JavaFX Content to an SWT Component"</a></p>
</li>
<li>
<p><a href="#BABHAGJC">"Creating SWT-JavaFX Applications in an IDE"</a></p>
</li>
<li>
<p><a href="#A1108386">"Packaging SWT-JavaFX Applications"</a></p>
</li>
<li>
<p><a href="#A1216477">"Application Files"</a></p>
</li>
</ul>
<a id="A1208348" name="A1208348" class="anchor"></a><a id="JFXIP543" name="JFXIP543" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Introduction</h2>
<p>If you develop SWT applications, you know that SWT uses the native operating system controls and cannot easily be configured to use advanced GUI features, such as animation. You can quickly add sparkle to an SWT application by integrating JavaFX with SWT. All you need is the <code>FXCanvas</code> class from the <a href="../api/index.html?javafx/embed/swt/package-summary.html"><code>javafx.embed.swt</code></a> package. The <code>javafx.embed.swt</code> package can be found in <code>jfxswt.jar</code>, which is located in the <code>JDK_Home/jre/lib/</code> directory. FXCanvas is a regular SWT canvas that can be used anywhere that an SWT canvas can appear. It's that simple.</p>
<p>In this article, you will see how to create an interactive SWT button and JavaFX button, shown in <a href="#BGBEGIHG">Figure 8-1</a>.</p>
<div class="figure"><a id="BGBEGIHG" name="BGBEGIHG" class="anchor"></a><a id="JFXIP603" name="JFXIP603" class="anchor"></a>
<p class="titleinfigure">Figure 8-1 SWT Button on Left, JavaFX Button on Right</p>
<img width="237" height="58" src="img/swt_jfx.png" alt="Screenshot of the SWT and JavaFX buttons" title="Screenshot of the SWT and JavaFX buttons" /><br /></div>
<!-- class="figure" -->
<p>When the user clicks either button, the text is changed in the other button, as shown in <a href="#BGBDJJEB">Figure 8-2</a> and <a href="#BGBIBEAJ">Figure 8-3</a>. This example shows how the SWT code and JavaFX code can interoperate.</p>
<div class="figure"><a id="BGBDJJEB" name="BGBDJJEB" class="anchor"></a><a id="JFXIP604" name="JFXIP604" class="anchor"></a>
<p class="titleinfigure">Figure 8-2 Clicking the SWT Button Changes the JavaFX Button Label</p>
<img width="388" height="58" src="img/swt_click.png" alt="Description of Figure 8-2 follows" title="Description of Figure 8-2 follows" longdesc="img_text/swt_click.htm" /><br />
<a id="sthref86" name="sthref86" href="img_text/swt_click.htm">Description of "Figure 8-2 Clicking the SWT Button Changes the JavaFX Button Label"</a><br />
<br /></div>
<!-- class="figure" -->
<div class="figure"><a id="BGBIBEAJ" name="BGBIBEAJ" class="anchor"></a><a id="JFXIP605" name="JFXIP605" class="anchor"></a>
<p class="titleinfigure">Figure 8-3 Clicking the JavaFX Button Changes the SWT Button Label</p>
<img width="470" height="71" src="img/jfx_click.png" alt="Description of Figure 8-3 follows" title="Description of Figure 8-3 follows" longdesc="img_text/jfx_click.htm" /><br />
<a id="sthref87" name="sthref87" href="img_text/jfx_click.htm">Description of "Figure 8-3 Clicking the JavaFX Button Changes the SWT Button Label"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect1" -->
<a id="BABBGIGI" name="BABBGIGI" class="anchor"></a><a id="JFXIP606" name="JFXIP606" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Adding JavaFX Content to an SWT Component</h2>
<p>In JavaFX, the Java code that creates and manipulates JavaFX classes runs in the JavaFX User thread. In SWT, code that creates and manipulates SWT widgets runs in the event loop thread. When JavaFX is embedded in SWT, these two threads are the same. This means that there are no restrictions when calling methods defined in one toolkit from the other.</p>
<p><a href="#BGBBGAGG">Example 8-1</a> shows the code to create the SWT button and JavaFX button shown in <a href="#BGBEGIHG">Figure 8-1</a>. As shown in the code, you set JavaFX content into an FXCanvas with the <code>setScene()</code> method in the <code>FXCanvas</code> class. To force SWT to lay out the canvas based on the new JavaFX content, resize the JavaFX content first. To do this, get the JavaFX Window that contains the JavaFX content and call <code>sizeToScene()</code>. When JavaFX is embedded in SWT, a new preferred size is set for <code>FXCanvas</code>, enabling SWT to resize the embedded JFX content in the same manner as other SWT controls.</p>
<p>JavaFX constructs content in terms of a hierarchical scene graph, placed inside a scene. The code in <a href="#BGBBGAGG">Example 8-1</a> places the JavaFX button into a scene with the scene graph shown in <a href="#BGBCDABE">Figure 8-4</a> and described in comments in the code example.</p>
<div class="figure"><a id="BGBCDABE" name="BGBCDABE" class="anchor"></a><a id="JFXIP607" name="JFXIP607" class="anchor"></a>
<p class="titleinfigure">Figure 8-4 JavaFX Scene Graph in SWT Application</p>
<img width="310" height="228" src="img/jfx_scenegraph.png" alt="Description of Figure 8-4 follows" title="Description of Figure 8-4 follows" longdesc="img_text/jfx_scenegraph.htm" /><br />
<a id="sthref88" name="sthref88" href="img_text/jfx_scenegraph.htm">Description of "Figure 8-4 JavaFX Scene Graph in SWT Application"</a><br />
<br /></div>
<!-- class="figure" -->
<div class="example"><a id="BGBBGAGG" name="BGBBGAGG" class="anchor"></a><a id="JFXIP608" name="JFXIP608" class="anchor"></a>
<p class="titleinexample">Example 8-1 Java Code for Plain SWT and JavaFX Buttons</p>
<pre xml:space="preserve" class="oac_no_warn">import javafx.embed.swt.FXCanvas;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.paint.Color;
 
import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.layout.RowLayout;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.Shell;
 
public class TwoButtons {
 
    public static void main(String[] args) {
        final Display display = new Display();
        final Shell shell = new Shell(display);
        final RowLayout layout = new RowLayout();
        shell.setLayout(layout);
 
        /* Create the SWT button */
        final org.eclipse.swt.widgets.Button swtButton =
                new org.eclipse.swt.widgets.Button(shell, SWT.PUSH);
        swtButton.setText("SWT Button");
 
        /* Create an FXCanvas */
        final FXCanvas fxCanvas = new FXCanvas(shell, SWT.NONE) {
            
                @Override
                public Point computeSize(int wHint, int hHint, boolean changed) {
                getScene().getWindow().sizeToScene();
                int width = (int) getScene().getWidth();
                int height = (int) getScene().getHeight();
                return new Point(width, height);
            }
        };
        /* Create a JavaFX Group node */
        Group group = new Group();
        /* Create a JavaFX button */
        final Button jfxButton = new Button("JFX Button");
        /* Assign the CSS ID ipad-dark-grey */
        jfxButton.setId("ipad-dark-grey");
        /* Add the button as a child of the Group node */
        group.getChildren().add(jfxButton);
        /* Create the Scene instance and set the group node as root */
        Scene scene = new Scene(group, Color.rgb(
                shell.getBackground().getRed(),
                shell.getBackground().getGreen(),
                shell.getBackground().getBlue()));
        /* Attach an external stylesheet */
        scene.getStylesheets().add("twobuttons/Buttons.css");
        fxCanvas.setScene(scene);
 
        /* Add Listeners */
        swtButton.addListener(SWT.Selection, new Listener() {
 
            @Override
            public void handleEvent(Event event) {
                jfxButton.setText("JFX Button: Hello from SWT");
                shell.layout();
            }
        });
        jfxButton.setOnAction(new EventHandler&lt;ActionEvent&gt;() {
 
            @Override
            public void handle(ActionEvent event) {
                swtButton.setText("SWT Button: Hello from JFX");
                shell.layout();
            }
        });
 
        shell.open();
        while (!shell.isDisposed()) {
            if (!display.readAndDispatch()) {
                display.sleep();
            }
        }
        display.dispose();
    }
}
</pre></div>
<!-- class="example" -->
<p>The button style is based on a blog by Jasper Potts at the following location:<br />
<code><a target="_blank" href="http://fxexperience.com/2011/12/styling-fx-buttons-with-css/">http://fxexperience.com/2011/12/styling-fx-buttons-with-css/</a></code></p>
</div>
<!-- class="sect1" -->
<a id="BABHAGJC" name="BABHAGJC" class="anchor"></a><a id="JFXIP541" name="JFXIP541" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Creating SWT-JavaFX Applications in an IDE</h2>
<p>Creating an SWT-JavaFX application in an IDE is simply a matter of adding the following libraries to your project:</p>
<ul>
<li>
<p><code>swt.jar</code>, from an SWT zip download, available at<br />
<code><a target="_blank" href="http://eclipse.org/swt">http://eclipse.org/swt</a></code></p>
</li>
<li>
<p><code>jfxswt.jar</code>, from the <code>JDK_HOME/jre/lib</code> directory:</p>
<ul>
<li>
<p>For example, for a default JDK installation on Windows, the full path is:<br />
C:\Program Files\Java\jdk1.8.0\jre\lib</p>
</li>
</ul>
</li>
</ul>
<div class="infoboxnote">
<p class="notep1">Note:</p>
<p>Ensure that all JAR files are either 32 bit or 64 bit, as required for your environment.</p>
</div>
</div>
<!-- class="sect1" -->
<a id="A1108386" name="A1108386" class="anchor"></a><a id="JFXIP609" name="JFXIP609" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Packaging SWT-JavaFX Applications</h2>
<p>How you package your SWT-JavaFX application depends on whether JavaFX is bundled with the JDK (7u6 and later) or installed in a different location (for releases prior to JDK 7u6).</p>
<a id="JFXIP542" name="JFXIP542" class="anchor"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref89" name="sthref89" class="anchor"></a>
<h3 class="sect2">Packaging the Application when JavaFX is Bundled with the JDK</h3>
<p>If you use NetBeans IDE 7.2 or later, no special handling is required to package your application, provided you have added the libraries as described in <a href="#BABHAGJC">Creating SWT-JavaFX Applications in an IDE</a>. You can simply do a Clean and Build, which produces a double-clickable JAR file in the /dist directory of the project.</p>
</div>
<!-- class="sect2" -->
<a id="JFXIP610" name="JFXIP610" class="anchor"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref90" name="sthref90" class="anchor"></a>
<h3 class="sect2">Packaging the Application with a Standalone JavaFX Installation</h3>
<p>When an SWT-JavaFX application is built, the JAR file must be packaged as a JavaFX application so the application on startup will look for the standalone JavaFX Runtime on the user's system. The SWT library (swt.jar) must be included as a resource (32-bit or 64-bit to match the target system).</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="A1216477" name="A1216477" class="anchor"></a><a id="JFXIP799" name="JFXIP799" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" -->
<h2 class="sect1">Application Files</h2>
<p class="itemizedlisttitle">NetBeans Projects&nbsp;</p>
<ul>
<li>
<p><a href="../sample-apps/TwoButtons.zip"><code>TwoButtons.zip</code></a></p>
</li>
</ul>
</div>
<!-- class="sect1" -->

</article>

<div id=rightslider>


<!--/*///////////////////////////////////////////////////////////////////////
PANEL 1 /* table of contents */
///////////////////////////////////////////////////////////////////////*/-->

<div id="panel1" class="panel shadow">
<div class="panellists">
<div style="float:right;"><a href="#" id="X"><img src="../../assets/img-common/X.png"   alt="Close Window" title="Close Table of Contents Window" /></a></div>
	<h3>Table of Contents</h3>
		<script type="text/javascript" src="../../assets/js/tree.menu.js" >

/***********************************************
* Simple Tree Menu - (c) Dynamic Drive DHTML code library (www.dynamicdrive.com)
* This notice MUST stay intact for legal use
* Visit Dynamic Drive at http://www.dynamicdrive.com/ for full source code
***********************************************/

/*http://www.dynamicdrive.com/dynamicindex1/navigate1.htm*/
</script>

<h2>JavaFX: Interoperability</h2>

<a href="javascript:ddtreemenu.flatten('treemenu1', 'expand')">Expand</a> | <a href="javascript:ddtreemenu.flatten('treemenu1', 'contact')">Collapse</a>

<ul id="treemenu1" class="treeview">
    <li><a href="title.htm#top">Title and Copyright Information</a></li>
    <li><a href="preface.htm#sthref2">Preface</a>
      <ul>
        <li><a href="preface.htm#sthref3">About This Document</a></li>
        <li><a href="preface.htm#sthref4">Audience</a></li>
        <li><a href="preface.htm#sthref5">Documentation Accessibility</a></li>
        <li><a href="preface.htm#sthref7">Related Documents</a></li>
        <li><a href="preface.htm#sthref8">Conventions</a></li>
      </ul>
    </li>
    <li><a href="fx_concurrency.htm#sthref9">Part I Concurrency in JavaFX</a>
    <ul>
    <li><a href="concurrency.htm#JFXIP546">1 Concurrency in JavaFX</a>
      <ul>
        <li><a href="concurrency.htm#sthref10">Why Use the javafx.concurrent Package?</a></li>
        <li><a href="concurrency.htm#sthref11">Overview of the javafx.concurrent Package</a>
          <ul>
          <li><a href="concurrency.htm#JFXIP549">The Worker Interface</a></li>
          <li><a href="concurrency.htm#JFXIP550">The Task Class</a></li>
          <li><a href="concurrency.htm#JFXIP556">The Service Class</a></li>
          <li><a href="concurrency.htm#JFXIP558">The WorkerStateEvent Class and State Transitions</a></li>
          <li><a href="concurrency.htm#JFXIP800">The ScheduledService Class</a></li>
          </ul>
        </li>
        <li><a href="concurrency.htm#sthref16">Conclusion</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="fx_swing.htm#JFXIP561">Part II JavaFX-Swing Interoperability</a>
    <ul>
    <li><a href="overview.htm#JFXIP102">2 The JavaFX Advantage for Swing Developers</a>
      <ul>
        <li><a href="overview.htm#sthref17">Using FXML</a></li>
        <li><a href="overview.htm#sthref18">JavaFX Scene Builder</a></li>
        <li><a href="overview.htm#sthref19">CSS Support</a></li>
        <li><a href="overview.htm#sthref20">JavaFX Media Support</a></li>
        <li><a href="overview.htm#sthref21">Animation</a></li>
        <li><a href="overview.htm#sthref22">HTML Content</a></li>
      </ul>
    </li>
    <li><a href="swing-fx-interoperability.htm#JFXIP109">3 Integrating JavaFX into Swing Applications</a>
      <ul>
        <li><a href="swing-fx-interoperability.htm#sthref23">Adding JavaFX Content to a Swing Component</a></li>
        <li><a href="swing-fx-interoperability.htm#sthref24">Swing&#x2013;JavaFX Interoperability and Threads</a>
          <ul>
          <li><a href="swing-fx-interoperability.htm#sthref25">Changing JavaFX Data in Response to a Change in Swing Data</a></li>
          <li><a href="swing-fx-interoperability.htm#sthref26">Changing Swing Data in Response to a Change in JavaFX Data</a></li>
          </ul>
        </li>
        <li><a href="swing-fx-interoperability.htm#sthref27">Introducing the SimpleSwingBrowser Application</a>
          <ul>
          <li><a href="swing-fx-interoperability.htm#sthref29">Initializing Swing Data</a></li>
          <li><a href="swing-fx-interoperability.htm#sthref30">Loading JavaFX Content</a></li>
          <li><a href="swing-fx-interoperability.htm#sthref31">Updating Swing Data</a></li>
          </ul>
        </li>
        <li><a href="swing-fx-interoperability.htm#sthref32">Application Files</a></li>
      </ul>
    </li>
    <li><a href="jtable-barchart.htm#JFXIP131">4 Enriching Swing Applications with JavaFX Functionality</a>
      <ul>
        <li><a href="jtable-barchart.htm#sthref35">Sample Swing Application</a></li>
        <li><a href="jtable-barchart.htm#sthref37">Integrating JavaFX Bar Chart</a></li>
        <li><a href="jtable-barchart.htm#sthref39">Application Files</a></li>
      </ul>
    </li>
    <li><a href="media-player.htm#JFXIP147">5 Leveraging Applications with Media Features</a>
      <ul>
        <li><a href="media-player.htm#sthref42">About Media Integration</a></li>
        <li><a href="media-player.htm#sthref43">Building the Media Player Application</a>
          <ul>
          <li><a href="media-player.htm#sthref45">Skinning the Application with CSS</a></li>
          <li><a href="media-player.htm#sthref46">Adding a New Control to the Control Bar</a></li>
          </ul>
        </li>
        <li><a href="media-player.htm#sthref47">Application Files</a></li>
      </ul>
    </li>
    <li><a href="port-to-javafx.htm#JFXIP164">6 Implementing a Swing Application in JavaFX</a>
      <ul>
        <li><a href="port-to-javafx.htm#sthref51">Analyzing the Converter Application Developed in Swing</a></li>
        <li><a href="port-to-javafx.htm#sthref52">Planning the Converter Application in JavaFX</a></li>
        <li><a href="port-to-javafx.htm#sthref53">Creating the Converter Application in JavaFX</a>
          <ul>
          <li><a href="port-to-javafx.htm#sthref54">Standard JavaFX Pattern to Create the GUI</a></li>
          <li><a href="port-to-javafx.htm#sthref55">Containers and Layouts</a></li>
          <li><a href="port-to-javafx.htm#sthref56">UI Controls</a></li>
          <li><a href="port-to-javafx.htm#sthref57">Mechanism of Getting Notifications on User Actions and Binding</a></li>
          <li><a href="port-to-javafx.htm#sthref58">Creating the ConversionPanel Class</a></li>
          <li><a href="port-to-javafx.htm#sthref64">Creating the Converter Class</a></li>
          </ul>
        </li>
        <li><a href="port-to-javafx.htm#sthref69">Application Files</a></li>
      </ul>
    </li>
    <li><a href="embed-swing.htm#JFXIP566">7 Embedding Swing Content in JavaFX Applications</a>
      <ul>
        <li><a href="embed-swing.htm#sthref72">SwingNode Class</a></li>
        <li><a href="embed-swing.htm#sthref74">Embedding Swing Content and Handling Events</a></li>
        <li><a href="embed-swing.htm#sthref76">Adding Interoperability Between Swing and JavaFX Components</a></li>
        <li><a href="embed-swing.htm#sthref81">Conclusion</a></li>
        <li><a href="embed-swing.htm#sthref82">Application Files</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="fx_swt.htm#sthref85">Part III Interoperability with SWT</a>
    <ul>
    <li><a class="selected" href="fx-swt_interoperability.htm#JFXIP101">8 JavaFX Interoperability with SWT</a>
      <ul>
        <li><a href="fx-swt_interoperability.htm#JFXIP543">Introduction</a></li>
        <li><a href="fx-swt_interoperability.htm#JFXIP606">Adding JavaFX Content to an SWT Component</a></li>
        <li><a href="fx-swt_interoperability.htm#JFXIP541">Creating SWT-JavaFX Applications in an IDE</a></li>
        <li><a href="fx-swt_interoperability.htm#JFXIP609">Packaging SWT-JavaFX Applications</a>
          <ul>
          <li><a href="fx-swt_interoperability.htm#sthref89">Packaging the Application when JavaFX is Bundled with the JDK</a></li>
          <li><a href="fx-swt_interoperability.htm#sthref90">Packaging the Application with a Standalone JavaFX Installation</a></li>
          </ul>
        </li>
        <li><a href="fx-swt_interoperability.htm#JFXIP799">Application Files</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="sample-source-code.htm#sthref92">Part IV Source Code for the Interoperability Tutorial</a>
    <ul>
    <li><a href="simpleswingbrowserjava.htm#JFXIP620">A SimpleSwingBrowser.java</a></li>
    <li><a href="swinginteropjava.htm#JFXIP637">B SwingInterop.java</a></li>
    <li><a href="sampletablemodeljava.htm#JFXIP654">C SampleTableModel.java</a></li>
    <li><a href="mediaplayerjava.htm#JFXIP671">D MediaPlayer.java</a></li>
    <li><a href="mediacontroljava.htm#JFXIP688">E MediaControl.java</a></li>
    <li><a href="mediaplayercss.htm#JFXIP795">F mediaplayer.css</a></li>
    <li><a href="converterjava.htm#JFXIP705">G Converter.java</a></li>
    <li><a href="conversionpaneljava.htm#JFXIP722">H ConversionPanel.java</a></li>
    <li><a href="swingnodesamplejava.htm#JFXIP739">I SwingNodeSample.java</a></li>
    <li><a href="buttonhtmldemojava.htm#JFXIP784">J ButtonHtmlDemo.java</a></li>
    <li><a href="enablefxbuttonjava.htm#JFXIP756">K EnableFXButton.java</a></li>
    <li><a href="enablebuttonsjava.htm#JFXIP791">L EnableButtons.java</a></li>
    <li><a href="imagesources.htm#sthref93">M Image Source Files</a>
      <ul>
        <li><a href="imagesources.htm#JFXIP809">left.gif</a></li>
        <li><a href="imagesources.htm#JFXIP810">right.gif</a></li>
        <li><a href="imagesources.htm#JFXIP811">down.gif</a></li>
        <li><a href="imagesources.htm#JFXIP812">middle.gif</a></li>
      </ul>
    </li>
</ul>

</li>
</ul>


<script type="text/javascript">

//ddtreemenu.createTree(treeid, enablepersist, opt_persist_in_days (default is 1))

ddtreemenu.createTree("treemenu1", true)
//ddtreemenu.createTree("treemenu2", false)

</script>
</div>
<div style="clear:both;"></div>
</div>


<!--/*///////////////////////////////////////////////////////////////////////
TABS 
///////////////////////////////////////////////////////////////////////*/-->

<a class="trig1 trigger shadow" alt="Table of Contents" title="Contents" href="#"></a>

</div>

<div id="pagenav2"><a class="button" title="Previous Page" href="fx_swt.htm">Previous Page</a><a href="#top"  class="button" title="Top of Page" target="_self">Top of Page</a><a class="button" title="Next Page" href="sample-source-code.htm">Next Page</a></div>

<br class="clearfloat" />
<span class="clearfloat"></span>
</div> <!-- .contentarea -->
</div> <!-- .main -->
</div> <!-- #main-container --><!-- content -->

<div class="main wrapper">

<div class="socialicons">

<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a>


<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a>


<a href="" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>


<!--
<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a> 

<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a> 

<a target="_blank" href="http://blogs.oracle.com/thejavatutorials/feed/entries/rss" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>
-->
</div>
<div class="SocialBar">


<div id="tw-like">
<!-- from:twitter:https://twitter.com/about/resources/buttons#tweet -->
<a target="_blank" href="https://twitter.com/share" class="twitter-share-button" data-count="none">Tweet</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</div>



<div id="go-like">
<!-- https://developers.google.com/+/web/+1button/ -->

<!-- Place this tag where you want the +1 button to render. -->
<div class="g-plusone" data-size="medium" data-annotation="none"></div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</div>




<!--<div id="fb-like">

<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like" data-href="https://www.facebook.com/OracleCloudComputing" data-width="450" data-layout="button_count" data-show-faces="false" data-send="true"></div>
</div>-->


</div>
</div>


<div class="footer-containerbook ">
 <footer>
	<span style="display:block;">Copyright &copy; 2012, 2014, Oracle and/or its affiliates. All rights reserved. <a href="../../assets/cpyr.htm">Legal Notices</a></span>
 </footer>
</div>
        
        <br />
        
        <!--<script src="../../assets/js/jquery.min.js"></script>
        <script>window.jQuery || document.write('<script src="../../assets/js/jquery-1.8.0.min.js"><\/script>')</script>-->

<!-- Start SiteCatalyst code -->
<script type="application/javascript" src="https://www.oracleimg.com/us/assets/metrics/ora_docs.js"></script>
<!-- End SiteCatalyst code -->


</body>
</html>
