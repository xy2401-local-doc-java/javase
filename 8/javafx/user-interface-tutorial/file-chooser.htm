<!DOCTYPE html>
<!--[if lt IE 7]>      <html lang="en" class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html lang="en" class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html lang="en" class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html lang="en" class="no-js"> <!--<![endif]-->

<head>

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<title>28 File Chooser (Release 8)</title>
<meta name="description" content="This chapter explains how to use the FileChooser class to enable users to navigate the file system. The samples provided in this chapter explain how to open one or several files, configure a file chooser dialog window, and save the application content.">

<meta name="viewport" content="width=device-width">

<link rel="stylesheet" href="../../assets/css/main.css">
<link rel="stylesheet" href="../../assets/css/main-media-480-tablet.css">
<link rel="stylesheet" href="../../assets/css/main-media-768-laptop.css">
<link rel="stylesheet" href="../../assets/css/main-media-1140-deskp.css">

<link rel="stylesheet" href="../../assets/css/simpletree.css">
<link rel="stylesheet" href="../../assets/css/forms.css">
<link rel="stylesheet" href="../../assets/css/panel.css">
<link rel="stylesheet" href="../../assets/css/altanav.css">
<link rel="stylesheet" href="../../assets/css/docstyles.css">

<link rel="stylesheet" href="../../assets/css/print.css">
<link rel="stylesheet" href="../../assets/css/home.css">
<link rel="stylesheet" href="../../assets/css/normalize.min.css">    

        
<!--[if lt IE 9]>
<link rel="stylesheet" href="../../assets/css/ltIE9.css">
<![endif]-->         
        
<script src="../../assets/js/jquery-1.6.2.js"></script>
<script src="../../assets/js/modernizr-2.6.1-respond-1.1.0.min.js"></script>

<!--toggle search-->
<script src="../../assets/js/toggle.search.js"  type="text/javascript"></script>
<!--navigation main-->
<script src="../../assets/js/altanav.js"  type="text/javascript"></script> 
<!--custom tag element-->
<script src="../../assets/js/customhtmltags.js"  type="text/javascript"></script> 

<!--project specific head data-->
  
<!-- Function for printing -->  
<script>
function PrintPage()
  {window.print();}
</script>

<script>
  $(window).unload(function() {
  });
</script>


<!-- keep select menu's sticking when hit back button-->
<script>
$(window).load(function () {
    $("select").each(function () {
        $(this).val($(this).find('option[selected]').val());
    });
});
</script>

<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>

<body>
<!--[if lt IE 7]>
<div style="border-bottom: 1px solid #A3A481; background-color: #FFFFDC; padding: 10px; font: normal 13px/16px Arial, sans-serif;">
<strong>You are running an older version of Internet Explorer or running Internet Explorer in compatibility mode.</strong>  For a richer experience, please upgrade to the latest <a target="_blank" href="http://windows.microsoft.com/en-US/internet-explorer/downloads/ie" target="_blank">Internet Explorer</a> version, or use <a target="_blank" href="http://www.google.com/chrome/" target="_blank">Chrome</a>, <a target="_blank" href="http://www.mozilla.com/en-US/firefox/" target="_blank">Firefox</a>, or <a target="_blank" href="http://www.apple.com/safari/" target="_blank">Safari</a>.
</div>
<![endif]--> 

<div id="altlogo">Oracle | Hardware and Software, Engineered to Work Together</div>

<span id="top"></span>


<div class="header-container">
<header class="bookwrapper  clearfix">

<div id="brandProdName" >
<div id="logocover"></div>
<div id="productName" >Documentation</div>
</div> 

<div id="signInArea"></div>
<script type="text/javascript">
$(document).ready(function() {
$("#signInArea").load("../../version.html");
});
</script>

<div id="searchheader">
<a href="/javase/search.html" class="button">Search Java SE Documentation</a></div>

<!-- Main Navigation -->
 <br class="clearfloat" />
 <div id="navBar" class="io" >

<!--
<ul>
<li><a class="menu1" title="Home" href="pg-home.php"><span>Home</span></a></li>
<li><a class="menu2" title="What's New"><span>What's New</span><span class="dropdown-arrow"></span></a></li>
<li><a class="menu3" title="All Books" href="pg-allbooks-infotype.php"><span>All Books</span></a></li>
</ul>
-->
</div>
            <br class="clearfloat" />
<!--         
<div id="navcontainer" >
<div class="submenu2 shadow" ><h3>See What's New in <strong>SE</strong> Documentation</h3>
</div>

</div> -->
            <br class="clearfloat" />
<!-- End Main Navigation -->


  </header>
</div><!-- header -->

<div class="main-container" >
<div class="main bookwrapper bookindent clearfix" >

<div id="breadcrumb">
  <a href="../../index.html">Java Platform, Standard Edition (Java SE) 8</a>
</div>
<div class="bookoptions"><a href="mailto:javasedocs_us@oracle.com" title="Send Feedback">Send Feedback</a> | <a href="#" onclick="PrintPage();">Print</a>
 | <a href="../JFXUI.pdf">PDF</a> | <a href="../JFXUI.epub">ePub</a> | <a href="../JFXUI.mobi">Mobi</a>
</div>

<div class="booktitle">JavaFX: Working with JavaFX UI Components</div>

<div class="contentarea clearboth">

<script type="text/javascript">

$(document).ready(function(){

//////////////////////
$(".trig1").click(function(){
        $("#panel1").toggle("fast"); <!--/*makes panel visible*/-->
        $(this).toggleClass("active"); <!--makes trigger expand out-->
        return false;
    });

///////////////////////

$("#X").click(function(){
      // trigger click is needed for css .active to work
	  $( ".trig1" ).trigger( "click" );
   return false;
    });

/*/////////////////////

$("#panel1").mouseleave(function(){
  $( ".trig1" ).trigger( "click" );
   return false;
});

/////////////////////*/
});

</script>


<!-- page navigation -->

<!--div id="tocbutton" ><span class="button"><a href="#mypanel"><img src="../../assets/img-common/3linemenu.png" alt="menu icon" />Menu</a></span></div-->

<div id="pagenav"><a class="button" title="Previous Page" href="pagination.htm">Previous Page</a><a class="button" title="Next Page" href="custom.htm">Next Page</a></div>

<article>

<!-- End Header --><a id="CCHCDBJC" name="CCHCDBJC" class="anchor"></a><a id="JFXUI539" name="JFXUI539" class="anchor"></a> <a id="CCHICECF" name="CCHICECF" class="anchor"></a>
<h1 class="chapter"><span class="secnum">28</span> File Chooser</h1>
<a id="JFXUI540" name="JFXUI540" class="anchor"></a>
<p>This chapter explains how to use the <code>FileChooser</code> class to enable users to navigate the file system. The samples provided in this chapter explain how to open one or several files, configure a file chooser dialog window, and save the application content.</p>
<p>Unlike other user interface component classes, the <code>FileChooser</code> class does not belong to the <code>javafx.scene.controls</code> package. However, this class deserves to be mentioned in the JavaFX UI Controls tutorial, because it supports one of the typical GUI application functions: file system navigation.</p>
<p>The <code>FileChooser</code> class is located in the <code>javafx.stage</code> package along with the other basic root graphical elements, such as <code>Stage</code>, <code>Window</code>, and <code>Popup</code>. The View Pictures window in <a href="#CCHICBIJ">Figure 28-1</a> is an example of the file chooser dialog in Windows.</p>
<div class="figure"><a id="CCHICBIJ" name="CCHICBIJ" class="anchor"></a><a id="JFXUI557" name="JFXUI557" class="anchor"></a>
<p class="titleinfigure">Figure 28-1 Example of a File Chooser Window</p>
<img width="598" height="439" src="img/file-chooser-sample.png" alt="Description of Figure 28-1 follows" title="Description of Figure 28-1 follows" longdesc="img_text/file-chooser-sample.htm" /><br />
<a id="sthref265" name="sthref265" href="img_text/file-chooser-sample.htm">Description of "Figure 28-1 Example of a File Chooser Window"</a><br />
<br /></div>
<!-- class="figure" -->
<a id="JFXUI558" name="JFXUI558" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref266" name="sthref266" class="anchor"></a>
<h2 class="sect1">Opening Files</h2>
<p>A file chooser can be used to invoke an open dialog window for selecting either a single file or multiple files, and to enable a file save dialog window. To display a file chooser, you typically use the <code>FileChooser</code> class. <a href="#CCHDEJEB">Example 28-1</a> provides the simplest way to enable a file chooser in your application.</p>
<div class="example"><a id="CCHDEJEB" name="CCHDEJEB" class="anchor"></a><a id="JFXUI559" name="JFXUI559" class="anchor"></a>
<p class="titleinexample">Example 28-1 Showing a File Chooser</p>
<pre xml:space="preserve" class="oac_no_warn">FileChooser fileChooser = new FileChooser();
fileChooser.setTitle("Open Resource File");
fileChooser.showOpenDialog(stage);
</pre></div>
<!-- class="example" -->
<p>After the code from <a href="#CCHDEJEB">Example 28-1</a> is added to a JavaFX application, the file chooser dialog window appears immediately when the application starts, as shown in <a href="#CCHDBADH">Figure 28-2</a>.</p>
<div class="figure"><a id="CCHDBADH" name="CCHDBADH" class="anchor"></a><a id="JFXUI560" name="JFXUI560" class="anchor"></a>
<p class="titleinfigure">Figure 28-2 Simple File Chooser</p>
<img width="598" height="420" src="img/file-chooser-simple.png" alt="Description of Figure 28-2 follows" title="Description of Figure 28-2 follows" longdesc="img_text/file-chooser-simple.htm" /><br />
<a id="sthref267" name="sthref267" href="img_text/file-chooser-simple.htm">Description of "Figure 28-2 Simple File Chooser"</a><br />
<br /></div>
<!-- class="figure" -->
<div class="infoboxnote">
<p class="notep1">Note:</p>
<p><a href="#CCHDBADH">Figure 28-2</a> shows the file chooser in Windows. When you open file choosers in other operating systems that support this functionality, you receive alternative windows. <a href="#CCHHCBJC">Figure 28-3</a> and <a href="#CCHGCJAG">Figure 28-4</a> show examples of file chooser windows in Linux and Mac OS.</p>
</div>
<div class="figure"><a id="CCHHCBJC" name="CCHHCBJC" class="anchor"></a><a id="JFXUI561" name="JFXUI561" class="anchor"></a>
<p class="titleinfigure">Figure 28-3 File Chooser Window in Linux</p>
<img width="598" height="469" src="img/file-chooser-linux.png" alt="Description of Figure 28-3 follows" title="Description of Figure 28-3 follows" longdesc="img_text/file-chooser-linux.htm" /><br />
<a id="sthref268" name="sthref268" href="img_text/file-chooser-linux.htm">Description of "Figure 28-3 File Chooser Window in Linux"</a><br />
<br /></div>
<!-- class="figure" -->
<div class="figure"><a id="CCHGCJAG" name="CCHGCJAG" class="anchor"></a><a id="JFXUI562" name="JFXUI562" class="anchor"></a>
<p class="titleinfigure">Figure 28-4 File Chooser Window in Mac OS</p>
<img width="598" height="335" src="img/file-chooser-mac.png" alt="Description of Figure 28-4 follows" title="Description of Figure 28-4 follows" longdesc="img_text/file-chooser-mac.htm" /><br />
<a id="sthref269" name="sthref269" href="img_text/file-chooser-mac.htm">Description of "Figure 28-4 File Chooser Window in Mac OS"</a><br />
<br /></div>
<!-- class="figure" -->
<p>Although in the previous example the file chooser appears automatically when the application starts, a more typical approach is to invoke a file chooser by selecting the corresponding menu item or clicking a dedicated button. In this tutorial, you create an application that enables a user to click a button and open a one or more pictures located in the file system. <a href="#CCHCBGID">Example 28-2</a> shows the code of the FileChooserSample application that implements this task.</p>
<div class="example"><a id="CCHCBGID" name="CCHCBGID" class="anchor"></a><a id="JFXUI563" name="JFXUI563" class="anchor"></a>
<p class="titleinexample">Example 28-2 Opening File Chooser for Single and Multiple Selection</p>
<pre xml:space="preserve" class="oac_no_warn">import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
 
public final class FileChooserSample extends Application {
 
    private final Desktop desktop = Desktop.getDesktop();
 
    @Override
    public void start(final Stage stage) {
        stage.setTitle("File Chooser Sample");
 
        final FileChooser fileChooser = new FileChooser();
 
        final Button openButton = new Button("Open a Picture...");
        final Button openMultipleButton = new Button("Open Pictures...");
 
        openButton.setOnAction(
            (final ActionEvent e) -&gt; {
                <span class="bold">File file = fileChooser.showOpenDialog(stage);</span>
                <span class="bold">if (file != null) {</span>
                    <span class="bold">openFile(file);</span>
        <span class="bold">        }</span>
        });
        openMultipleButton.setOnAction(
            (final ActionEvent e) -&gt; { 
                <span class="bold">List&lt;File&gt; list =</span>  
                    <span class="bold">fileChooser.showOpenMultipleDialog(stage);</span>
                <span class="bold">if (list != null) {</span>  
                    <span class="bold">list.stream().forEach((file) -&gt; {</span>
                        <span class="bold">openFile(file);</span>
                    <span class="bold">});</span>
                <span class="bold">}</span>
        <span class="bold">});</span>
 
        final GridPane inputGridPane = new GridPane();
 
        GridPane.setConstraints(openButton, 0, 0);
        GridPane.setConstraints(openMultipleButton, 1, 0);
        inputGridPane.setHgap(6);
        inputGridPane.setVgap(6);
        inputGridPane.getChildren().addAll(openButton, openMultipleButton);
 
        final Pane rootGroup = new VBox(12);
        rootGroup.getChildren().addAll(inputGridPane);
        rootGroup.setPadding(new Insets(12, 12, 12, 12));
 
        stage.setScene(new Scene(rootGroup));
        stage.show();
    }
 
    public static void main(String[] args) {
        Application.launch(args);
    }
 
    private void openFile(File file) {
        EventQueue.invokeLater(() -&gt; {
            try {
                desktop.open(file);
            } catch (IOException ex) {
                Logger.getLogger(FileChooserSample.
                        class.getName()).
                        log(Level.SEVERE, null, ex);
            }
        });
    }
}
</pre></div>
<!-- class="example" -->
<p>In <a href="#CCHCBGID">Example 28-2</a>, the Open a Picture button enables the user to open a file chooser for a single selection, and the Open Pictures button enables the user to open a file chooser for multiple selections. The <code>setOnAction</code> methods for these buttons are almost identical. The only difference is in the method that is used to invoke a <code>FileChooser</code>.</p>
<ul>
<li>
<p>The <code>showOpenDialog</code> method shows a new file open dialog in which one file can be selected. The method returns the value that specifies the file chosen by the user or <code>null</code> if no selection has been made.</p>
</li>
<li>
<p>The <code>showOpenMultipleDialog</code> method shows a new file open dialog in which multiple files can be selected. The method returns the value that specifies the list of files chosen by the user or <code>null</code> if no selection has been made. The returned list cannot be modified and throws <code>UnsupportedOperationException</code> on each modification attempt.</p>
</li>
</ul>
<p>Both methods do not return results until the displayed open dialog window is dismissed (in other words, until a user commits or cancels the selection).</p>
<p>When you compile and run the FileChooserSample application, it produces the window shown in <a href="#CCHCFIGC">Figure 28-5</a>.</p>
<div class="figure"><a id="CCHCFIGC" name="CCHCFIGC" class="anchor"></a><a id="JFXUI564" name="JFXUI564" class="anchor"></a>
<p class="titleinfigure">Figure 28-5 FileChooserSample with Two Buttons</p>
<img width="283" height="105" src="img/file-chooser-with-buttons.png" alt="Description of Figure 28-5 follows" title="Description of Figure 28-5 follows" longdesc="img_text/file-chooser-with-buttons.htm" /><br />
<a id="sthref270" name="sthref270" href="img_text/file-chooser-with-buttons.htm">Description of "Figure 28-5 FileChooserSample with Two Buttons"</a><br />
<br /></div>
<!-- class="figure" -->
<p>When you click either of the buttons, the dialog window shown in <a href="#CCHJGGBC">Figure 28-6</a> appears. The opened file chooser dialog window shows the location that is the default for your operating system.</p>
<div class="figure"><a id="CCHJGGBC" name="CCHJGGBC" class="anchor"></a><a id="JFXUI565" name="JFXUI565" class="anchor"></a>
<p class="titleinfigure">Figure 28-6 Default File Chooser Window</p>
<img width="598" height="417" src="img/file-chooser-default.png" alt="Description of Figure 28-6 follows" title="Description of Figure 28-6 follows" longdesc="img_text/file-chooser-default.htm" /><br />
<a id="sthref271" name="sthref271" href="img_text/file-chooser-default.htm">Description of "Figure 28-6 Default File Chooser Window"</a><br />
<br /></div>
<!-- class="figure" -->
<p>Users of the FileChooserSample application may navigate to a directory containing pictures and select a picture. After a file is selected, it is opened with the associated application. The example code implements this by using the <code>open</code> method of the <code>java.awt.Desktop</code> class: <code>desktop.open(file);</code>.</p>
<div class="infoboxnote">
<p class="notep1">Note:</p>
<p>Availability of the <code>Desktop</code> class is platform dependent. Refer to <a href="../../docs/api/">API documentation</a> for more information on the <code>Desktop</code> class. You can also use the <code>isDesktopSupported()</code> method to check if it is supported in your system.</p>
</div>
<p>You can improve the user experience for this application by setting the file chooser directory to the specific directory that contains the pictures.</p>
</div>
<!-- class="sect1" -->
<a id="JFXUI566" name="JFXUI566" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref272" name="sthref272" class="anchor"></a>
<h2 class="sect1">Configuring a File Chooser</h2>
<p>You can configure the file chooser dialog window by setting the <code>initialDirectory</code> and <code>title</code> properties of a <code>FileChooser</code> object. <a href="#CCHGCCEG">Example 28-3</a> shows how to specify the initial directory and a suitable title to preview and open pictures.</p>
<div class="example"><a id="CCHGCCEG" name="CCHGCCEG" class="anchor"></a><a id="JFXUI567" name="JFXUI567" class="anchor"></a>
<p class="titleinexample">Example 28-3 Setting the Initial Directory and Window Title</p>
<pre xml:space="preserve" class="oac_no_warn">import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
 
public final class FileChooserSample extends Application {
 
    private final Desktop desktop = Desktop.getDesktop();
 
    @Override
    public void start(final Stage stage) {
        stage.setTitle("File Chooser Sample");
 
        final FileChooser fileChooser = new FileChooser();
 
        final Button openButton = new Button("Open a Picture...");
        final Button openMultipleButton = new Button("Open Pictures...");

        openButton.setOnAction(
            (final ActionEvent e) -&gt; {
                <span class="bold">configureFileChooser(fileChooser);</span>
                File file = fileChooser.showOpenDialog(stage);
                if (file != null) {
                    openFile(file);
                }
        });        openMultipleButton.setOnAction(
            (final ActionEvent e) -&gt; {
                <span class="bold">configureFileChooser(fileChooser);</span>
                List&lt;File&gt; list = 
                        fileChooser.showOpenMultipleDialog(stage);
                if (list != null) {
                    list.stream().forEach((file) -&gt; {
                        openFile(file);
                    });
                }
        });

        final GridPane inputGridPane = new GridPane();
 
        GridPane.setConstraints(openButton, 0, 0);
        GridPane.setConstraints(openMultipleButton, 1, 0);
        inputGridPane.setHgap(6);
        inputGridPane.setVgap(6);
        inputGridPane.getChildren().addAll(openButton, openMultipleButton);
        
        final Pane rootGroup = new VBox(12);
        rootGroup.getChildren().addAll(inputGridPane);
        rootGroup.setPadding(new Insets(12, 12, 12, 12));
 
        stage.setScene(new Scene(rootGroup));
        stage.show();
    }
 
    public static void main(String[] args) {
        Application.launch(args);
    }
   
<span class="bold">    private static void configureFileChooser(final FileChooser fileChooser){</span>                           
    <span class="bold">    fileChooser.setTitle("View Pictures");</span>
        <span class="bold">fileChooser.setInitialDirectory(</span>
            <span class="bold">new File(System.getProperty("user.home"))</span>
      <span class="bold">  );</span> 
    <span class="bold">}</span>

    private void openFile(File file) {
        EventQueue.invokeLater(() -&gt; {
            try {
                desktop.open(file);
            } catch (IOException ex) {
                Logger.getLogger(FileChooserSample.
                        class.getName()).
                        log(Level.SEVERE, null, ex);
            }
        });
    }
}
</pre></div>
<!-- class="example" -->
<p>The <code>configureFileChooser</code> method sets the View Pictures title and the path to the user home directory with the My Pictures sub-directory. When you compile and run the FileChooserSample and click one of the buttons, the file chooser shown in <a href="#CCHBGBCI">Figure 28-7</a> appears.</p>
<div class="figure"><a id="CCHBGBCI" name="CCHBGBCI" class="anchor"></a><a id="JFXUI568" name="JFXUI568" class="anchor"></a>
<p class="titleinfigure">Figure 28-7 Opening a Pictures Library</p>
<img width="598" height="441" src="img/file-chooser-pictures.png" alt="Description of Figure 28-7 follows" title="Description of Figure 28-7 follows" longdesc="img_text/file-chooser-pictures.htm" /><br />
<a id="sthref273" name="sthref273" href="img_text/file-chooser-pictures.htm">Description of "Figure 28-7 Opening a Pictures Library"</a><br />
<br /></div>
<!-- class="figure" -->
<p>You can also let the users specify the target directory by using the <code>DirectoryChooser</code> class. In the code fragment shown in <a href="#CCHBAIIA">Example 28-4</a>, the click of the <code>browseButton</code> invokes the <code>directoryChooser.showDialog</code> method.</p>
<div class="example"><a id="CCHBAIIA" name="CCHBAIIA" class="anchor"></a><a id="JFXUI569" name="JFXUI569" class="anchor"></a>
<p class="titleinexample">Example 28-4 Use of the DirectoryChooser Class</p>
<pre xml:space="preserve" class="oac_no_warn">final Button browseButton = new Button("...");
browseButton.setOnAction(
    (final ActionEvent e) -&gt; {
        final DirectoryChooser directoryChooser
            new DirectoryChooser();
        final File selectedDirectory =
                directoryChooser.showDialog(stage);
        if (selectedDirectory != null) {
            selectedDirectory.getAbsolutePath();
        }
});
</pre></div>
<!-- class="example" -->
<p>After the selection is performed, you can assign the corresponding value to the file chooser as follows: <code>fileChooser.setInitialDirectory(selectedDirectory);</code> .</p>
</div>
<!-- class="sect1" -->
<a id="JFXUI570" name="JFXUI570" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref274" name="sthref274" class="anchor"></a>
<h2 class="sect1">Setting Extension Filters</h2>
<p>As the next configuration option, you can set the extension filter to determine which files to open in a file chooser, as shown in <a href="#CCHJAJBH">Example 28-5</a>.</p>
<div class="example"><a id="CCHJAJBH" name="CCHJAJBH" class="anchor"></a><a id="JFXUI571" name="JFXUI571" class="anchor"></a>
<p class="titleinexample">Example 28-5 Setting an Image Type Filter</p>
<pre xml:space="preserve" class="oac_no_warn">import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.stage.FileChooser;
import javafx.stage.Stage;
 
public final class FileChooserSample extends Application {
 
    private final Desktop desktop = Desktop.getDesktop();
 
    @Override
    public void start(final Stage stage) {
        stage.setTitle("File Chooser Sample");
 
        final FileChooser fileChooser = new FileChooser();
        final Button openButton = new Button("Open a Picture...");
        final Button openMultipleButton = new Button("Open Pictures...");     
      
        openButton.setOnAction(
            (final ActionEvent e) -&gt; {
                configureFileChooser(fileChooser);
                File file = fileChooser.showOpenDialog(stage);
                if (file != null) {
                    openFile(file);
                }
        });
 
        openMultipleButton.setOnAction(
            (final ActionEvent e) -&gt; {
                configureFileChooser(fileChooser);
                List&lt;File&gt; list = 
                        fileChooser.showOpenMultipleDialog(stage);
                if (list != null) {
                    list.stream().forEach((file) -&gt; {
                        openFile(file);
                    });
                }
        });
 
        final GridPane inputGridPane = new GridPane();
 
        GridPane.setConstraints(openButton, 0, 1);
        GridPane.setConstraints(openMultipleButton, 1, 1);
        inputGridPane.setHgap(6);
        inputGridPane.setVgap(6);
        inputGridPane.getChildren().addAll(openButton, openMultipleButton);
        
        final Pane rootGroup = new VBox(12);
        rootGroup.getChildren().addAll(inputGridPane);
        rootGroup.setPadding(new Insets(12, 12, 12, 12));
 
        stage.setScene(new Scene(rootGroup));
        stage.show();
    }
 
    public static void main(String[] args) {
        Application.launch(args);
    }
 
    private static void configureFileChooser(
        final FileChooser fileChooser) {      
            fileChooser.setTitle("View Pictures");
            fileChooser.setInitialDirectory(
                new File(System.getProperty("user.home"))
            );                 
            <span class="bold">fileChooser.getExtensionFilters().addAll(</span>
                <span class="bold">new FileChooser.ExtensionFilter("All Images", "*.*"),</span>
                <span class="bold">new FileChooser.ExtensionFilter("JPG", "*.jpg"),</span>
                <span class="bold">new FileChooser.ExtensionFilter("PNG", "*.png")</span>
            <span class="bold">);</span>
    }
 
    private void openFile(File file) {
        EventQueue.invokeLater(() -&gt; {
            try {
                desktop.open(file);
            } catch (IOException ex) {
                Logger.getLogger(FileChooserSample.
                        class.getName()).
                        log(Level.SEVERE, null, ex);
            }
        });
    }
}
</pre></div>
<!-- class="example" -->
<p>In <a href="#CCHJAJBH">Example 28-5</a>, you set an extension filter by using <code>FileChooser.ExtensionFilter</code> to define the following options for file selection: All images, JPG, and PNG.</p>
<p>When you compile, run the FileChooserSample code from <a href="#CCHJAJBH">Example 28-5</a>, and click one of the buttons, the extension filters appear in the file chooser window. If a user selects JPG, then the file chooser displays only pictures of the JPG type. <a href="#CCHICCEA">Figure 28-8</a> captures the moment of selection JPG images in the My Pictures directory.</p>
<div class="figure"><a id="CCHICCEA" name="CCHICCEA" class="anchor"></a><a id="JFXUI572" name="JFXUI572" class="anchor"></a>
<p class="titleinfigure">Figure 28-8 Filtering JPG Files in File Chooser</p>
<img width="598" height="439" src="img/file-chooser-jpg.png" alt="Description of Figure 28-8 follows" title="Description of Figure 28-8 follows" longdesc="img_text/file-chooser-jpg.htm" /><br />
<a id="sthref275" name="sthref275" href="img_text/file-chooser-jpg.htm">Description of "Figure 28-8 Filtering JPG Files in File Chooser"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect1" -->
<a id="JFXUI573" name="JFXUI573" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref276" name="sthref276" class="anchor"></a>
<h2 class="sect1">Saving Files</h2>
<p>In addition to opening and filtering files, the <code>FileChooser</code> API provides a capability to let a user specify a file name (and its location in the file system) for a file to be saved by the application. The <code>showSaveDialog</code> method of the <code>FileChooser</code> class opens a save dialog window. Like other show dialog methods, the <code>showSaveDialog</code> method returns the file chosen by the user or <code>null</code> if no selection has been performed.</p>
<p>The code fragment shown in <a href="#CCHFFHDA">Example 28-6</a> is an addition to the <a href="menu_controls.htm#BABGHADI">Menu</a> sample. It implements one more item of the context menu that saves the displayed image in the file system.</p>
<div class="example"><a id="CCHFFHDA" name="CCHFFHDA" class="anchor"></a><a id="JFXUI574" name="JFXUI574" class="anchor"></a>
<p class="titleinexample">Example 28-6 Saving an Image with the FileChooser Class</p>
<pre xml:space="preserve" class="oac_no_warn">MenuItem cmItem2 = new MenuItem("Save Image");
cmItem2.setOnAction((ActionEvent e) -&gt; {
    FileChooser fileChooser1 = new FileChooser();
    fileChooser1.setTitle("Save Image");
    System.out.println(pic.getId());
    File file = fileChooser1.showSaveDialog(stage);
    if (file != null) {
        try {
            ImageIO.write(SwingFXUtils.fromFXImage(pic.getImage(),
                    null), "png", file);
        } catch (IOException ex) {
             System.out.println(ex.getMessage());
        }
    }
});
</pre></div>
<!-- class="example" -->
<p>When you add <a href="#CCHFFHDA">Example 28-6</a> to the MenuSample application (find the source code in the Application Files), compile and run it, you enable the Save Image menu item, as shown in <a href="#CCHCEBGJ">Figure 28-9</a>.</p>
<div class="figure"><a id="CCHCEBGJ" name="CCHCEBGJ" class="anchor"></a><a id="JFXUI575" name="JFXUI575" class="anchor"></a>
<p class="titleinfigure">Figure 28-9 Saving Image</p>
<img width="440" height="410" src="img/file-chooser-save.png" alt="Description of Figure 28-9 follows" title="Description of Figure 28-9 follows" longdesc="img_text/file-chooser-save.htm" /><br />
<a id="sthref277" name="sthref277" href="img_text/file-chooser-save.htm">Description of "Figure 28-9 Saving Image"</a><br />
<br /></div>
<!-- class="figure" -->
<p>After a user selects the Save Image item, the Save Image window shown in <a href="#CCHIDCCJ">Figure 28-10</a> appears.</p>
<div class="figure"><a id="CCHIDCCJ" name="CCHIDCCJ" class="anchor"></a><a id="JFXUI576" name="JFXUI576" class="anchor"></a>
<p class="titleinfigure">Figure 28-10 The Save Image Window</p>
<img width="598" height="421" src="img/file-chooser-save-image.png" alt="Description of Figure 28-10 follows" title="Description of Figure 28-10 follows" longdesc="img_text/file-chooser-save-image.htm" /><br />
<a id="sthref278" name="sthref278" href="img_text/file-chooser-save-image.htm">Description of "Figure 28-10 The Save Image Window"</a><br />
<br /></div>
<!-- class="figure" -->
<p>The Save Image window corresponds to the typical user experience for the save dialog windows: the user needs to select the target directory, type in the name of the saving file, and click Save.</p>
<p class="itemizedlisttitle">Related API Documentation&nbsp;</p>
<ul>
<li>
<p><a href="../api/javafx/stage/FileChooser.html"><code>FileChooser</code></a></p>
</li>
<li>
<p><a href="../api/javafx/stage/DirectoryChooser.html"><code>DirectoryChooser</code></a></p>
</li>
</ul>
</div>
<!-- class="sect1" -->

</article>

<div id=rightslider>


<!--/*///////////////////////////////////////////////////////////////////////
PANEL 1 /* table of contents */
///////////////////////////////////////////////////////////////////////*/-->

<div id="panel1" class="panel shadow">
<div class="panellists">
<div style="float:right;"><a href="#" id="X"><img src="../../assets/img-common/X.png"   alt="Close Window" title="Close Table of Contents Window" /></a></div>
	<h3>Table of Contents</h3>
		<script type="text/javascript" src="../../assets/js/tree.menu.js" >

/***********************************************
* Simple Tree Menu - (c) Dynamic Drive DHTML code library (www.dynamicdrive.com)
* This notice MUST stay intact for legal use
* Visit Dynamic Drive at http://www.dynamicdrive.com/ for full source code
***********************************************/

/*http://www.dynamicdrive.com/dynamicindex1/navigate1.htm*/
</script>

<h2>JavaFX: Working with JavaFX UI Components</h2>

<a href="javascript:ddtreemenu.flatten('treemenu1', 'expand')">Expand</a> | <a href="javascript:ddtreemenu.flatten('treemenu1', 'contact')">Collapse</a>

<ul id="treemenu1" class="treeview">
    <li><a href="title.htm#top">Title and Copyright Information</a></li>
    <li><a href="preface.htm#sthref2">Preface</a>
      <ul>
        <li><a href="preface.htm#sthref3">Audience</a></li>
        <li><a href="preface.htm#sthref4">Documentation Accessibility</a></li>
        <li><a href="preface.htm#sthref6">Related Documents</a></li>
        <li><a href="preface.htm#sthref7">Conventions</a></li>
      </ul>
    </li>
    <li><a href="ui_components.htm#JFXUI101">Part I About This Tutorial</a>
    <ul>
    <li><a href="whatsnew.htm#JFXUI781">1 What Is New</a></li>
</ul>
</li>
    <li><a href="ui_controls.htm#JFXUI336">Part II Using JavaFX UI Controls</a>
    <ul>
    <li><a href="label.htm#CIHHFIBJ">2 Label</a>
      <ul>
        <li><a href="label.htm#sthref10">Creating a Label</a></li>
        <li><a href="label.htm#sthref12">Setting a Font</a></li>
        <li><a href="label.htm#sthref13">Wrapping Text</a></li>
        <li><a href="label.htm#sthref15">Applying Effects</a></li>
      </ul>
    </li>
    <li><a href="button.htm#CJHEEACB">3 Button</a>
      <ul>
        <li><a href="button.htm#sthref19">Creating a Button</a></li>
        <li><a href="button.htm#sthref22">Assigning an Action</a></li>
        <li><a href="button.htm#sthref23">Applying Effects</a></li>
        <li><a href="button.htm#sthref25">Styling a Button</a></li>
      </ul>
    </li>
    <li><a href="radio-button.htm#BABBJBDA">4 Radio Button</a>
      <ul>
        <li><a href="radio-button.htm#sthref29">Creating a Radio Button</a></li>
        <li><a href="radio-button.htm#sthref30">Adding Radio Buttons to Groups</a></li>
        <li><a href="radio-button.htm#sthref32">Processing Events for Radio Buttons</a></li>
        <li><a href="radio-button.htm#sthref33">Requesting Focus for a Radio Button</a></li>
      </ul>
    </li>
    <li><a href="toggle-button.htm#CACJDICF">5 Toggle Button</a>
      <ul>
        <li><a href="toggle-button.htm#sthref38">Creating a Toggle Button</a></li>
        <li><a href="toggle-button.htm#sthref39">Adding Toggle Buttons to a Group</a></li>
        <li><a href="toggle-button.htm#sthref41">Setting the Behavior</a></li>
        <li><a href="toggle-button.htm#sthref43">Styling Toggle Buttons</a></li>
      </ul>
    </li>
    <li><a href="checkbox.htm#CHDFEJCD">6 Checkbox</a>
      <ul>
        <li><a href="checkbox.htm#sthref47">Creating Checkboxes</a></li>
        <li><a href="checkbox.htm#sthref48">Defining a State</a></li>
        <li><a href="checkbox.htm#sthref50">Setting the Behavior</a></li>
      </ul>
    </li>
    <li><a href="choice-box.htm#BCEDJAEH">7 Choice Box</a>
      <ul>
        <li><a href="choice-box.htm#sthref54">Creating a Choice Box</a></li>
        <li><a href="choice-box.htm#sthref56">Setting the Behavior for a Choice Box</a></li>
        <li><a href="choice-box.htm#sthref59">Applying a Tooltip</a></li>
      </ul>
    </li>
    <li><a href="text-field.htm#BABBCEIG">8 Text Field</a>
      <ul>
        <li><a href="text-field.htm#sthref63">Creating a Text Field</a></li>
        <li><a href="text-field.htm#sthref64">Building the UI with Text Fields</a></li>
        <li><a href="text-field.htm#sthref67">Processing Text Field Data</a></li>
      </ul>
    </li>
    <li><a href="password-field.htm#BABIDAGF">9 Password Field</a>
      <ul>
        <li><a href="password-field.htm#sthref71">Creating a Password Field</a></li>
        <li><a href="password-field.htm#sthref73">Evaluating the Password</a></li>
      </ul>
    </li>
    <li><a href="scrollbar.htm#BGBEGJDE">10 Scroll Bar</a>
      <ul>
        <li><a href="scrollbar.htm#sthref78">Creating a Scroll Bar</a></li>
        <li><a href="scrollbar.htm#sthref79">Using a Scroll Bar in Your Application</a></li>
      </ul>
    </li>
    <li><a href="scrollpane.htm#CBBFFBCH">11 Scroll Pane</a>
      <ul>
        <li><a href="scrollpane.htm#sthref83">Creating a Scroll Pane</a></li>
        <li><a href="scrollpane.htm#sthref84">Setting the Scroll Bar Policy for a Scroll Pane</a></li>
        <li><a href="scrollpane.htm#sthref86">Resizing Components in the Scroll Pane</a></li>
        <li><a href="scrollpane.htm#sthref89">Sample Application with a Scroll Pane</a></li>
      </ul>
    </li>
    <li><a href="list-view.htm#CEGGEDBF">12 List View</a>
      <ul>
        <li><a href="list-view.htm#sthref93">Creating a List View</a></li>
        <li><a href="list-view.htm#sthref96">Populating a List View with Data</a></li>
        <li><a href="list-view.htm#sthref98">Customizing the Content of a List View</a></li>
        <li><a href="list-view.htm#sthref100">Processing the List Item Selection</a></li>
      </ul>
    </li>
    <li><a href="table-view.htm#CJABIEED">13 Table View</a>
      <ul>
        <li><a href="table-view.htm#sthref104">Creating a Table</a></li>
        <li><a href="table-view.htm#sthref107">Defining the Data Model</a></li>
        <li><a href="table-view.htm#sthref109">Adding New Rows</a></li>
        <li><a href="table-view.htm#sthref112">Sorting Data in Columns</a></li>
        <li><a href="table-view.htm#sthref114">Editing Data in the Table</a></li>
        <li><a href="table-view.htm#sthref117">Adding Maps of Data to the Table</a></li>
      </ul>
    </li>
    <li><a href="tree-view.htm#JFXUI377">14 Tree View</a>
      <ul>
        <li><a href="tree-view.htm#sthref121">Creating Tree Views</a></li>
        <li><a href="tree-view.htm#sthref123">Implementing Cell Factories</a></li>
        <li><a href="tree-view.htm#sthref126">Adding New Tree Items on Demand</a></li>
        <li><a href="tree-view.htm#sthref129">Using Tree Cell Editors</a></li>
      </ul>
    </li>
    <li><a href="tree-table-view.htm#JFXUI833">15 Tree Table View</a>
      <ul>
        <li><a href="tree-table-view.htm#sthref135">Creating a TreeTableView control</a></li>
        <li><a href="tree-table-view.htm#sthref137">Adding Several Columns</a></li>
        <li><a href="tree-table-view.htm#sthref139">Altering Visual Appearance</a></li>
        <li><a href="tree-table-view.htm#sthref142">Managing Selection Mode</a></li>
      </ul>
    </li>
    <li><a href="combo-box.htm#BABEFEJC">16 Combo Box</a>
      <ul>
        <li><a href="combo-box.htm#sthref147">Creating Combo Boxes</a></li>
        <li><a href="combo-box.htm#sthref151">Editable Combo Boxes</a></li>
        <li><a href="combo-box.htm#sthref154">Applying Cell Factories to Combo Boxes</a></li>
      </ul>
    </li>
    <li><a href="separator.htm#BGBCFDFI">17 Separator</a>
      <ul>
        <li><a href="separator.htm#sthref157">Creating a Separator</a></li>
        <li><a href="separator.htm#sthref159">Adding Separators to the UI of Your Application</a></li>
        <li><a href="separator.htm#sthref161">Styling Separators</a></li>
      </ul>
    </li>
    <li><a href="slider.htm#CCHFBJCH">18 Slider</a>
      <ul>
        <li><a href="slider.htm#sthref165">Creating a Slider</a></li>
        <li><a href="slider.htm#sthref166">Using Sliders in Graphical Applications</a></li>
      </ul>
    </li>
    <li><a href="progress.htm#CHDDJAJE">19 Progress Bar and Progress Indicator</a>
      <ul>
        <li><a href="progress.htm#sthref170">Creating Progress Controls</a></li>
        <li><a href="progress.htm#sthref172">Indicating Progress in Your User Interface</a></li>
      </ul>
    </li>
    <li><a href="hyperlink.htm#CIHGADBG">20 Hyperlink</a>
      <ul>
        <li><a href="hyperlink.htm#sthref176">Creating a Hyperlink</a></li>
        <li><a href="hyperlink.htm#sthref177">Linking the Local Content</a></li>
        <li><a href="hyperlink.htm#sthref180">Linking the Remote Content</a></li>
      </ul>
    </li>
    <li><a href="editor.htm#JFXUI346">21 HTML Editor</a>
      <ul>
        <li><a href="editor.htm#sthref184">Adding an HTML Editor</a></li>
        <li><a href="editor.htm#sthref187">Using an HTML Editor to Build the User Interface</a></li>
        <li><a href="editor.htm#sthref189">Obtaining HTML Content</a></li>
      </ul>
    </li>
    <li><a href="tooltip.htm#BABBIJBJ">22 Tooltip</a>
      <ul>
        <li><a href="tooltip.htm#sthref194">Creating a Tooltip</a></li>
        <li><a href="tooltip.htm#sthref196">Presenting Application Data in Tooltips</a></li>
      </ul>
    </li>
    <li><a href="accordion-titledpane.htm#JFXUI356">23 Titled Pane and Accordion</a>
      <ul>
        <li><a href="accordion-titledpane.htm#sthref200">Creating Titled Panes</a></li>
        <li><a href="accordion-titledpane.htm#sthref203">Adding Titled Panes to an Accordion</a></li>
        <li><a href="accordion-titledpane.htm#sthref205">Processing Events for an Accordion with Titled Panes</a></li>
      </ul>
    </li>
    <li><a href="menu_controls.htm#JFXUI409">24 Menu</a>
      <ul>
        <li><a href="menu_controls.htm#sthref210">Building Menus in JavaFX Applications</a></li>
        <li><a href="menu_controls.htm#sthref211">Creating a Menu Bar</a></li>
        <li><a href="menu_controls.htm#sthref213">Adding Menu Items</a></li>
        <li><a href="menu_controls.htm#sthref216">Creating Submenus</a></li>
        <li><a href="menu_controls.htm#sthref220">Adding Context Menus</a></li>
      </ul>
    </li>
    <li><a href="color-picker.htm#JFXUI433">25 Color Picker</a>
      <ul>
        <li><a href="color-picker.htm#sthref223">Design Overview</a>
          <ul>
          <li><a href="color-picker.htm#sthref225">Color Chooser</a></li>
          <li><a href="color-picker.htm#sthref227">Color Palette</a></li>
          <li><a href="color-picker.htm#sthref230">Custom Color Dialog Window</a></li>
          </ul>
        </li>
        <li><a href="color-picker.htm#JFXUI445">Using a Color Picker</a></li>
        <li><a href="color-picker.htm#JFXUI452">Changing the Appearance of a Color Picker</a></li>
      </ul>
    </li>
    <li><a href="date-picker.htm#JFXUI808">26 Date Picker</a>
      <ul>
        <li><a href="date-picker.htm#sthref238">Working with Time Data and Date Formats</a></li>
        <li><a href="date-picker.htm#sthref239">Date Picker Design Overview</a></li>
        <li><a href="date-picker.htm#sthref241">Adding a Date Picker to an Application UI</a></li>
        <li><a href="date-picker.htm#sthref244">Customizing the Date Picker</a></li>
        <li><a href="date-picker.htm#sthref250">Altering the Calendar System</a></li>
      </ul>
    </li>
    <li><a href="pagination.htm#JFXUI459">27 Pagination Control</a>
      <ul>
        <li><a href="pagination.htm#sthref254">Creating a Pagination Control</a></li>
        <li><a href="pagination.htm#sthref257">Implementing Page Factories</a></li>
        <li><a href="pagination.htm#sthref262">Styling a Pagination Control</a></li>
      </ul>
    </li>
    <li><a class="selected" href="file-chooser.htm#CCHICECF">28 File Chooser</a>
      <ul>
        <li><a href="file-chooser.htm#sthref266">Opening Files</a></li>
        <li><a href="file-chooser.htm#sthref272">Configuring a File Chooser</a></li>
        <li><a href="file-chooser.htm#sthref274">Setting Extension Filters</a></li>
        <li><a href="file-chooser.htm#sthref276">Saving Files</a></li>
      </ul>
    </li>
    <li><a href="custom.htm#JFXUI493">29 Customization of UI Controls</a>
      <ul>
        <li><a href="custom.htm#sthref280">Applying CSS</a></li>
        <li><a href="custom.htm#sthref285">Altering Default Behavior</a></li>
        <li><a href="custom.htm#sthref288">Implementing Cell Factories</a></li>
      </ul>
    </li>
    <li><a href="embed.htm#JFXUI785">30 UI Controls on the Embedded Platforms</a>
      <ul>
        <li><a href="embed.htm#sthref292">Embedded Runtime Features</a>
          <ul>
          <li><a href="embed.htm#sthref293">Support for Touch-Enabled Devices</a></li>
          <li><a href="embed.htm#sthref294">Virtual Keyboard</a></li>
          </ul>
        </li>
        <li><a href="embed.htm#sthref301">Appearance of UI Controls on Embedded Platforms</a>
          <ul>
          <li><a href="embed.htm#sthref302">Scrolling Controls</a></li>
          <li><a href="embed.htm#sthref304">Text Input Controls</a></li>
          <li><a href="embed.htm#sthref306">Context Menus</a></li>
          </ul>
        </li>
        <li><a href="embed.htm#sthref309">UI Controls Features Available on the Embedded Platforms</a></li>
        <li><a href="embed.htm#sthref311">UI Controls Features That Are Not Available on Embedded Touch Platforms</a></li>
        <li><a href="embed.htm#sthref312">Other Features That Are Not Available on Embedded Touch Platforms</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="charts.htm#JFXUI577">Part III Working with JavaFX Charts</a>
    <ul>
    <li><a href="pie-chart.htm#CIHFDADD">31 Pie Chart</a>
      <ul>
        <li><a href="pie-chart.htm#sthref314">Creating a Pie Chart</a></li>
        <li><a href="pie-chart.htm#sthref316">Setting a Pie Chart and a Legend</a></li>
        <li><a href="pie-chart.htm#sthref319">Processing Events for a Pie Chart</a></li>
      </ul>
    </li>
    <li><a href="line-chart.htm#CIHGBCFI">32 Line Chart</a>
      <ul>
        <li><a href="line-chart.htm#sthref323">Chart Settings</a></li>
        <li><a href="line-chart.htm#sthref324">Chart Data</a></li>
        <li><a href="line-chart.htm#sthref325">Creating a Line Chart</a></li>
        <li><a href="line-chart.htm#sthref327">Creating Categories for a Line Chart</a></li>
        <li><a href="line-chart.htm#sthref329">Adding Series to the Line Chart</a></li>
      </ul>
    </li>
    <li><a href="area-chart.htm#CIHCFGBA">33 Area Chart</a>
      <ul>
        <li><a href="area-chart.htm#sthref334">Creating an Area Chart</a></li>
        <li><a href="area-chart.htm#sthref336">Creating a Stacked Area Chart</a></li>
        <li><a href="area-chart.htm#sthref338">Setting Axis and Tick Properties</a></li>
        <li><a href="area-chart.htm#sthref342">Adding Negative Values</a></li>
        <li><a href="area-chart.htm#sthref344">Styling Area Charts</a></li>
      </ul>
    </li>
    <li><a href="bubble-chart.htm#CHDHAFHB">34 Bubble Chart</a>
      <ul>
        <li><a href="bubble-chart.htm#sthref348">Creating a Bubble Chart</a></li>
        <li><a href="bubble-chart.htm#sthref351">Using the Extra Value Property</a></li>
        <li><a href="bubble-chart.htm#sthref353">Changing the Appearance Visual Setting of the Plot and Tick Marks</a></li>
      </ul>
    </li>
    <li><a href="scatter-chart.htm#CIHDEACI">35 Scatter Chart</a>
      <ul>
        <li><a href="scatter-chart.htm#sthref357">Creating a Scatter Chart</a></li>
        <li><a href="scatter-chart.htm#sthref359">Managing Chart Data</a></li>
        <li><a href="scatter-chart.htm#sthref361">Adding Effects to Charts</a></li>
        <li><a href="scatter-chart.htm#sthref363">Changing the Chart Symbol</a></li>
      </ul>
    </li>
    <li><a href="bar-chart.htm#CIHJFHDE">36 Bar Chart</a>
      <ul>
        <li><a href="bar-chart.htm#sthref367">Creating a Bar Chart</a></li>
        <li><a href="bar-chart.htm#sthref369">Horizontal Bar Chart</a></li>
        <li><a href="bar-chart.htm#sthref371">Creating a Stacked Bar Chart</a></li>
        <li><a href="bar-chart.htm#sthref374">Animating Data in Charts</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="css_tutorial.htm#JFXUI733">Part IV Skinning JavaFX Applications with CSS</a>
    <ul>
    <li><a href="apply-css.htm#JFXUI714">37 Styling UI Controls with CSS</a>
      <ul>
        <li><a href="apply-css.htm#sthref378">Default Style Sheet</a></li>
        <li><a href="apply-css.htm#sthref380">Creating Style Sheets</a></li>
        <li><a href="apply-css.htm#sthref381">Defining Styles</a>
          <ul>
          <li><a href="apply-css.htm#sthref382">Selectors</a></li>
          <li><a href="apply-css.htm#sthref383">Rules and Properties</a></li>
          </ul>
        </li>
        <li><a href="apply-css.htm#sthref384">Skinning the Scene</a></li>
        <li><a href="apply-css.htm#sthref385">Skinning Controls</a>
          <ul>
          <li><a href="apply-css.htm#sthref386">Overriding Default Styles</a></li>
          <li><a href="apply-css.htm#sthref388">Creating Class Styles</a></li>
          <li><a href="apply-css.htm#sthref390">Creating ID Styles</a></li>
          <li><a href="apply-css.htm#sthref392">Setting Styles in the Code</a></li>
          </ul>
        </li>
        <li><a href="apply-css.htm#sthref394">Additional Resources</a></li>
      </ul>
    </li>
    <li><a href="css-styles.htm#JFXUI672">38 Styling Charts with CSS</a>
      <ul>
        <li><a href="css-styles.htm#sthref395">Modifying Basic Chart Elements</a></li>
        <li><a href="css-styles.htm#sthref401">Altering Colors of the Chart Plot</a></li>
        <li><a href="css-styles.htm#sthref404">Setting the Axes</a></li>
        <li><a href="css-styles.htm#sthref407">Setting Chart Colors</a></li>
        <li><a href="css-styles.htm#sthref413">Changing Chart Symbols</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="text.htm#JFXUI734">Part V Working with Text in JavaFX Applications</a>
    <ul>
    <li><a href="text-settings.htm#JFXUI735">39 Using Text in JavaFX</a>
      <ul>
        <li><a href="text-settings.htm#sthref417">Introduction</a></li>
        <li><a href="text-settings.htm#sthref418">Adding Text</a>
          <ul>
          <li><a href="text-settings.htm#sthref420">Setting Text Font and Color</a></li>
          <li><a href="text-settings.htm#sthref422">Making Text Bold or Italic</a></li>
          <li><a href="text-settings.htm#sthref423">Using Custom Fonts</a></li>
          <li><a href="text-settings.htm#sthref425">Setting LCD Text Support</a></li>
          <li><a href="text-settings.htm#sthref426">Rich Text and Bidirectional Support</a></li>
          </ul>
        </li>
      </ul>
    </li>
    <li><a href="text-effects.htm#JFXUI773">40 Applying Effects to Text</a>
      <ul>
        <li><a href="text-effects.htm#sthref429">Perspective Effect</a></li>
        <li><a href="text-effects.htm#sthref431">Blur Effect</a></li>
        <li><a href="text-effects.htm#sthref433">Drop Shadow Effect</a></li>
        <li><a href="text-effects.htm#sthref435">Inner Shadow Effect</a></li>
        <li><a href="text-effects.htm#sthref437">Reflection</a></li>
        <li><a href="text-effects.htm#sthref439">Combining Several Effects</a></li>
        <li><a href="text-effects.htm#sthref441">Application Files</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="samples.htm#sthref444">Part VI Source Code for the UI Components Tutorials</a>
    <ul>
    <li><a href="ui_controls_samples.htm#sthref445">A UI Control Samples</a>
      <ul>
        <li><a href="ui_controls_samples.htm#JFXUI870">LabelSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI871">ButtonSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI872">RadioButtonSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI873">ToggleButtonSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI874">CheckboxSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI875">ChoiceBoxSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI876">TextFieldSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI877">PasswordField.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI878">ScrollBarSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI879">ScrollPaneSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI880">ListViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI881">TableViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI882">TreeViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI883">TreeTableViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI884">ComboBoxSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI885">SeparatorSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI886">SliderSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI887">ProgressSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI888">HyperlinkSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI889">HyperlinkWebViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI890">HTMLEditorSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI891">TooltipSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI892">TitledPaneSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI893">MenuSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI894">ColorPickerSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI895">DatePickerSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI896">PaginationSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI897">FileChooserSample.java</a></li>
      </ul>
    </li>
    <li><a href="chart_samples.htm#JFXUI898">B Chart Samples</a>
      <ul>
        <li><a href="chart_samples.htm#JFXUI900">PieChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI901">LineChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI902">AreaChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI903">BubbleChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI904">ScatterChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI905">BarChartSample.java</a></li>
      </ul>
    </li>
    <li><a href="css_samples.htm#sthref446">C CSS Samples</a>
      <ul>
        <li><a href="css_samples.htm#JFXUI908">DownloadButton.java</a></li>
        <li><a href="css_samples.htm#JFXUI909">DownloadButtonStyle1.css</a></li>
        <li><a href="css_samples.htm#JFXUI910">DownloadButtonStyle2.css</a></li>
        <li><a href="css_samples.htm#JFXUI911">StyleStage.java</a></li>
        <li><a href="css_samples.htm#JFXUI912">UIControlCSS.java</a></li>
        <li><a href="css_samples.htm#JFXUI913">controlStyle1.css</a></li>
        <li><a href="css_samples.htm#JFXUI914">controlStyle2.css</a></li>
      </ul>
    </li>
    <li><a href="text_samples.htm#sthref447">D Text Samples</a>
      <ul>
        <li><a href="text_samples.htm#JFXUI917">TextEffects.java</a></li>
        <li><a href="text_samples.htm#JFXUI920">NeonSign.java</a></li>
      </ul>
    </li>
</ul>

</li>
</ul>


<script type="text/javascript">

//ddtreemenu.createTree(treeid, enablepersist, opt_persist_in_days (default is 1))

ddtreemenu.createTree("treemenu1", true)
//ddtreemenu.createTree("treemenu2", false)

</script>
</div>
<div style="clear:both;"></div>
</div>


<!--/*///////////////////////////////////////////////////////////////////////
TABS 
///////////////////////////////////////////////////////////////////////*/-->

<a class="trig1 trigger shadow" alt="Table of Contents" title="Contents" href="#"></a>

</div>

<div id="pagenav2"><a class="button" title="Previous Page" href="pagination.htm">Previous Page</a><a href="#top"  class="button" title="Top of Page" target="_self">Top of Page</a><a class="button" title="Next Page" href="custom.htm">Next Page</a></div>

<br class="clearfloat" />
<span class="clearfloat"></span>
</div> <!-- .contentarea -->
</div> <!-- .main -->
</div> <!-- #main-container --><!-- content -->

<div class="main wrapper">

<div class="socialicons">

<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a>


<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a>


<a href="" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>


<!--
<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a> 

<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a> 

<a target="_blank" href="http://blogs.oracle.com/thejavatutorials/feed/entries/rss" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>
-->
</div>
<div class="SocialBar">


<div id="tw-like">
<!-- from:twitter:https://twitter.com/about/resources/buttons#tweet -->
<a target="_blank" href="https://twitter.com/share" class="twitter-share-button" data-count="none">Tweet</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</div>



<div id="go-like">
<!-- https://developers.google.com/+/web/+1button/ -->

<!-- Place this tag where you want the +1 button to render. -->
<div class="g-plusone" data-size="medium" data-annotation="none"></div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</div>




<!--<div id="fb-like">

<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like" data-href="https://www.facebook.com/OracleCloudComputing" data-width="450" data-layout="button_count" data-show-faces="false" data-send="true"></div>
</div>-->


</div>
</div>


<div class="footer-containerbook ">
 <footer>
	<span style="display:block;">Copyright &copy; 2011, 2014, Oracle and/or its affiliates. All rights reserved. <a href="../../assets/cpyr.htm">Legal Notices</a></span>
 </footer>
</div>
        
        <br />
        
        <!--<script src="../../assets/js/jquery.min.js"></script>
        <script>window.jQuery || document.write('<script src="../../assets/js/jquery-1.8.0.min.js"><\/script>')</script>-->

<!-- Start SiteCatalyst code -->
<script type="application/javascript" src="https://www.oracleimg.com/us/assets/metrics/ora_docs.js"></script>
<!-- End SiteCatalyst code -->


</body>
</html>
