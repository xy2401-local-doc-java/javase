<!DOCTYPE html>
<!--[if lt IE 7]>      <html lang="en" class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html lang="en" class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html lang="en" class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html lang="en" class="no-js"> <!--<![endif]-->

<head>

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<title>16 Combo Box (Release 8)</title>
<meta name="description" content="This chapter explains how to use combo boxes in your JavaFX application. It discusses editable and uneditable combo boxes, teaches you how to track changes in the editable combo boxes and handle events on them, and explains how to use cell factories to alter the default implementation of a combo box.">

<meta name="viewport" content="width=device-width">

<link rel="stylesheet" href="../../assets/css/main.css">
<link rel="stylesheet" href="../../assets/css/main-media-480-tablet.css">
<link rel="stylesheet" href="../../assets/css/main-media-768-laptop.css">
<link rel="stylesheet" href="../../assets/css/main-media-1140-deskp.css">

<link rel="stylesheet" href="../../assets/css/simpletree.css">
<link rel="stylesheet" href="../../assets/css/forms.css">
<link rel="stylesheet" href="../../assets/css/panel.css">
<link rel="stylesheet" href="../../assets/css/altanav.css">
<link rel="stylesheet" href="../../assets/css/docstyles.css">

<link rel="stylesheet" href="../../assets/css/print.css">
<link rel="stylesheet" href="../../assets/css/home.css">
<link rel="stylesheet" href="../../assets/css/normalize.min.css">    

        
<!--[if lt IE 9]>
<link rel="stylesheet" href="../../assets/css/ltIE9.css">
<![endif]-->         
        
<script src="../../assets/js/jquery-1.6.2.js"></script>
<script src="../../assets/js/modernizr-2.6.1-respond-1.1.0.min.js"></script>

<!--toggle search-->
<script src="../../assets/js/toggle.search.js"  type="text/javascript"></script>
<!--navigation main-->
<script src="../../assets/js/altanav.js"  type="text/javascript"></script> 
<!--custom tag element-->
<script src="../../assets/js/customhtmltags.js"  type="text/javascript"></script> 

<!--project specific head data-->
  
<!-- Function for printing -->  
<script>
function PrintPage()
  {window.print();}
</script>

<script>
  $(window).unload(function() {
  });
</script>


<!-- keep select menu's sticking when hit back button-->
<script>
$(window).load(function () {
    $("select").each(function () {
        $(this).val($(this).find('option[selected]').val());
    });
});
</script>

<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>

<body>
<!--[if lt IE 7]>
<div style="border-bottom: 1px solid #A3A481; background-color: #FFFFDC; padding: 10px; font: normal 13px/16px Arial, sans-serif;">
<strong>You are running an older version of Internet Explorer or running Internet Explorer in compatibility mode.</strong>  For a richer experience, please upgrade to the latest <a target="_blank" href="http://windows.microsoft.com/en-US/internet-explorer/downloads/ie" target="_blank">Internet Explorer</a> version, or use <a target="_blank" href="http://www.google.com/chrome/" target="_blank">Chrome</a>, <a target="_blank" href="http://www.mozilla.com/en-US/firefox/" target="_blank">Firefox</a>, or <a target="_blank" href="http://www.apple.com/safari/" target="_blank">Safari</a>.
</div>
<![endif]--> 

<div id="altlogo">Oracle | Hardware and Software, Engineered to Work Together</div>

<span id="top"></span>


<div class="header-container">
<header class="bookwrapper  clearfix">

<div id="brandProdName" >
<div id="logocover"></div>
<div id="productName" >Documentation</div>
</div> 

<div id="signInArea"></div>
<script type="text/javascript">
$(document).ready(function() {
$("#signInArea").load("../../version.html");
});
</script>

<div id="searchheader">
<a href="/javase/search.html" class="button">Search Java SE Documentation</a></div>

<!-- Main Navigation -->
 <br class="clearfloat" />
 <div id="navBar" class="io" >

<!--
<ul>
<li><a class="menu1" title="Home" href="pg-home.php"><span>Home</span></a></li>
<li><a class="menu2" title="What's New"><span>What's New</span><span class="dropdown-arrow"></span></a></li>
<li><a class="menu3" title="All Books" href="pg-allbooks-infotype.php"><span>All Books</span></a></li>
</ul>
-->
</div>
            <br class="clearfloat" />
<!--         
<div id="navcontainer" >
<div class="submenu2 shadow" ><h3>See What's New in <strong>SE</strong> Documentation</h3>
</div>

</div> -->
            <br class="clearfloat" />
<!-- End Main Navigation -->


  </header>
</div><!-- header -->

<div class="main-container" >
<div class="main bookwrapper bookindent clearfix" >

<div id="breadcrumb">
  <a href="../../index.html">Java Platform, Standard Edition (Java SE) 8</a>
</div>
<div class="bookoptions"><a href="mailto:javasedocs_us@oracle.com" title="Send Feedback">Send Feedback</a> | <a href="#" onclick="PrintPage();">Print</a>
 | <a href="../JFXUI.pdf">PDF</a> | <a href="../JFXUI.epub">ePub</a> | <a href="../JFXUI.mobi">Mobi</a>
</div>

<div class="booktitle">JavaFX: Working with JavaFX UI Components</div>

<div class="contentarea clearboth">

<script type="text/javascript">

$(document).ready(function(){

//////////////////////
$(".trig1").click(function(){
        $("#panel1").toggle("fast"); <!--/*makes panel visible*/-->
        $(this).toggleClass("active"); <!--makes trigger expand out-->
        return false;
    });

///////////////////////

$("#X").click(function(){
      // trigger click is needed for css .active to work
	  $( ".trig1" ).trigger( "click" );
   return false;
    });

/*/////////////////////

$("#panel1").mouseleave(function(){
  $( ".trig1" ).trigger( "click" );
   return false;
});

/////////////////////*/
});

</script>


<!-- page navigation -->

<!--div id="tocbutton" ><span class="button"><a href="#mypanel"><img src="../../assets/img-common/3linemenu.png" alt="menu icon" />Menu</a></span></div-->

<div id="pagenav"><a class="button" title="Previous Page" href="tree-table-view.htm">Previous Page</a><a class="button" title="Next Page" href="separator.htm">Next Page</a></div>

<article>

<!-- End Header --><a id="BABJCCIB" name="BABJCCIB" class="anchor"></a><a id="JFXUI392" name="JFXUI392" class="anchor"></a> <a id="BABEFEJC" name="BABEFEJC" class="anchor"></a>
<h1 class="chapter"><span class="secnum">16</span> Combo Box</h1>
<a id="JFXUI393" name="JFXUI393" class="anchor"></a>
<p>This chapter explains how to use combo boxes in your JavaFX application. It discusses editable and uneditable combo boxes, teaches you how to track changes in the editable combo boxes and handle events on them, and explains how to use cell factories to alter the default implementation of a combo box.</p>
<p>A combo box is a typical element of a user interface that enables users to choose one of several options. A combo box is helpful when the number of items to show exceeds some limit, because it can add scrolling to the drop down list, unlike a choice box. If the number of items does not exceed a certain limit, developers can decide whether a combo box or a choice box better suits their needs.</p>
<p>You can create a combo box in the JavaFX application by using the <code>ComboBox</code> class of the JavaFX API. <a href="#BABDDHII">Figure 16-1</a> shows an application with two combo boxes.</p>
<div class="figure"><a id="BABDDHII" name="BABDDHII" class="anchor"></a><a id="JFXUI394" name="JFXUI394" class="anchor"></a>
<p class="titleinfigure">Figure 16-1 Application with Two Combo Boxes</p>
<img width="521" height="319" src="img/combobox-sample.png" alt="Description of Figure 16-1 follows" title="Description of Figure 16-1 follows" longdesc="img_text/combobox-sample.htm" /><br />
<a id="sthref146" name="sthref146" href="img_text/combobox-sample.htm">Description of "Figure 16-1 Application with Two Combo Boxes"</a><br />
<br /></div>
<!-- class="figure" -->
<a id="JFXUI395" name="JFXUI395" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref147" name="sthref147" class="anchor"></a>
<h2 class="sect1">Creating Combo Boxes</h2>
<p>When creating a combo box, you must instantiate the <code>ComboBox</code> class and define the items as an observable list, just like other UI controls such as <code>ChoiceBox</code>, <code>ListView</code>, and <code>TableView</code>. <a href="#BABDBJBD">Example 16-1</a> sets the items within a constructor.</p>
<div class="example"><a id="BABDBJBD" name="BABDBJBD" class="anchor"></a><a id="JFXUI396" name="JFXUI396" class="anchor"></a>
<p class="titleinexample">Example 16-1 Creating a Combo Box with an Observable List</p>
<pre xml:space="preserve" class="oac_no_warn">ObservableList&lt;String&gt; options = 
    FXCollections.observableArrayList(
        "Option 1",
        "Option 2",
        "Option 3"
    );
final ComboBox comboBox = new ComboBox(options);
</pre></div>
<!-- class="example" -->
<p>Another possibility is to create a combo box by using an empty constructor and call the <code>setItems</code> method on it, as follows: <code>comboBox.setItems(options);</code></p>
<p>When the combo box is added to the application scene, it appears in the user interface as shown in <a href="#BABDJFJJ">Figure 16-2</a>.</p>
<div class="figure"><a id="BABDJFJJ" name="BABDJFJJ" class="anchor"></a><a id="JFXUI397" name="JFXUI397" class="anchor"></a>
<p class="titleinfigure">Figure 16-2 Combo Box with Three Items</p>
<img width="96" height="106" src="img/combobox-string.png" alt="Description of Figure 16-2 follows" title="Description of Figure 16-2 follows" longdesc="img_text/combobox-string.htm" /><br />
<a id="sthref148" name="sthref148" href="img_text/combobox-string.htm">Description of "Figure 16-2 Combo Box with Three Items"</a><br />
<br /></div>
<!-- class="figure" -->
<p>At any time, you can supplement the list of items with new values. <a href="#BABEFGCF">Example 16-2</a> implements this task by adding three more items to the comboBox control.</p>
<div class="example"><a id="BABEFGCF" name="BABEFGCF" class="anchor"></a><a id="JFXUI398" name="JFXUI398" class="anchor"></a>
<p class="titleinexample">Example 16-2 Adding Items to a Combo Box</p>
<pre xml:space="preserve" class="oac_no_warn">comboBox.getItems().addAll(
    "Option 4",
    "Option 5",
    "Option 6"
);
</pre></div>
<!-- class="example" -->
<p>The <code>ComboBox</code> class provides handy properties and methods to use with combo boxes.</p>
<p>You can use the <code>setValue</code> method to specify the item selected in the combo box. When you call the <code>setValue</code> method on the <code>ComboBox</code> object, the selected item of the <code>selectionModel</code> property changes to this value even if the value is not in the combo box items list. If the items list then changes to include this value, the corresponding item becomes selected.</p>
<p>Similarly, you can obtain the value of the selected item by calling the <code>getValue</code> method. When a user selects an item, the selected item of the <code>selectionModel</code> property and the combo box <code>value</code> property are both updated to the new value.</p>
<p>You can also restrict the number of visible rows in the <code>ComboBox</code> drop down list when it is displayed. The following code line enables the display of three items for the comboBox control: <code>comboBox.setVisibleRowCount(3)</code> As the result of calling this method, the number of visible rows is limited to three, and a scroll bar appears (as shown in <a href="#BABGFGJC">Figure 16-3</a>).</p>
<div class="figure"><a id="BABGFGJC" name="BABGFGJC" class="anchor"></a><a id="JFXUI399" name="JFXUI399" class="anchor"></a>
<p class="titleinfigure">Figure 16-3 Setting the Number of Visible Rows for a Combo Box</p>
<img width="95" height="104" src="img/combobox-button.png" alt="Description of Figure 16-3 follows" title="Description of Figure 16-3 follows" longdesc="img_text/combobox-button.htm" /><br />
<a id="sthref149" name="sthref149" href="img_text/combobox-button.htm">Description of "Figure 16-3 Setting the Number of Visible Rows for a Combo Box"</a><br />
<br /></div>
<!-- class="figure" -->
<p>Although the <code>ComboBox</code> class has a generic notation and enables users to populate it with items of various types, do not use <code>Node</code> (or any subclass) as the type. Because the scene graph concept implies that only one <code>Node</code> object can be in one place of the application scene, the selected item is removed from the <code>ComboBox</code> list of items. When the selection changes, the previously selected item returns to the list and the new selection is removed. To prevent this situation, use the cell factory mechanism and the solution described in the <a href="../api/javafx/scene/control/ComboBox.html">API documentation</a>. The cell factory mechanism is particularly helpful when you need to change the initial behavior or appearance of the <code>ComboBox</code> object.</p>
<p>The ComboBoxSample application is designed to illustrate how to use combo boxes in a typical email interface. <a href="#BABDFEFC">Example 16-3</a> creates a such an interface, in which two combo boxes are used to select the email recipient and the priority of the message.</p>
<div class="example"><a id="BABDFEFC" name="BABDFEFC" class="anchor"></a><a id="JFXUI400" name="JFXUI400" class="anchor"></a>
<p class="titleinexample">Example 16-3 Creating Combo Boxes and Adding Them to the Scene</p>
<pre xml:space="preserve" class="oac_no_warn">import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;
 
public class ComboBoxSample extends Application {
    public static void main(String[] args) {
        launch(args);
    }
        
    final Button button = new Button ("Send");
    final Label notification = new Label ();
    final TextField subject = new TextField("");
    final TextArea text = new TextArea ("");
    
    String address = " ";
    
    @Override public void start(Stage stage) {
        stage.setTitle("ComboBoxSample");
        Scene scene = new Scene(new Group(), 500, 270);
        
        final ComboBox emailComboBox = new ComboBox();
        emailComboBox.getItems().addAll(
            "jacob.smith@example.com",
            "isabella.johnson@example.com",
            "ethan.williams@example.com",
            "emma.jones@example.com",
            "michael.brown@example.com"  
        );
        
        final ComboBox priorityComboBox = new ComboBox();
        priorityComboBox.getItems().addAll(
            "Highest",
            "High",
            "Normal",
            "Low",
            "Lowest" 
        );   

        priorityComboBox.setValue("Normal");
        
        GridPane grid = new GridPane();
        grid.setVgap(4);
        grid.setHgap(10);
        grid.setPadding(new Insets(5, 5, 5, 5));
        grid.add(new Label("To: "), 0, 0);
        grid.add(emailComboBox, 1, 0);
        grid.add(new Label("Priority: "), 2, 0);
        grid.add(priorityComboBox, 3, 0);
        grid.add(new Label("Subject: "), 0, 1);
        grid.add(subject, 1, 1, 3, 1);            
        grid.add(text, 0, 2, 4, 1);
        grid.add(button, 0, 3);
        grid.add (notification, 1, 3, 3, 1);
        
        Group root = (Group)scene.getRoot();
        root.getChildren().add(grid);
        stage.setScene(scene);
        stage.show();
    }    
}
</pre></div>
<!-- class="example" -->
<p>Both combo boxes in <a href="#BABDFEFC">Example 16-3</a> use the <code>getItems</code> and <code>addAll</code> methods to add items. When you compile and run this code, it produces the application window shown in <a href="#BABDEGIH">Figure 16-4</a>.</p>
<div class="figure"><a id="BABDEGIH" name="BABDEGIH" class="anchor"></a><a id="JFXUI401" name="JFXUI401" class="anchor"></a>
<p class="titleinfigure">Figure 16-4 Email Recipient and Priority Combo Boxes</p>
<img width="526" height="317" src="img/combobox-simple.png" alt="Description of Figure 16-4 follows" title="Description of Figure 16-4 follows" longdesc="img_text/combobox-simple.htm" /><br />
<a id="sthref150" name="sthref150" href="img_text/combobox-simple.htm">Description of "Figure 16-4 Email Recipient and Priority Combo Boxes"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect1" -->
<a id="JFXUI402" name="JFXUI402" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref151" name="sthref151" class="anchor"></a>
<h2 class="sect1">Editable Combo Boxes</h2>
<p>Typically, email client applications enable users to both select recipients from the address book and type a new address. An editable combo box perfectly fits this task. Use the <code>setEditable(true)</code> method of the <code>ComboBox</code> class to make a combo box editable. With the <code>setPromptText</code> method, you can specify the text to appear in the combo box editing area when no selection is performed. Examine the modified code of the application in <a href="#BABFGHFG">Example 16-4</a>. The bold lines are the additions made to <a href="#BABDFEFC">Example 16-3</a>.</p>
<div class="example"><a id="BABFGHFG" name="BABFGHFG" class="anchor"></a><a id="JFXUI403" name="JFXUI403" class="anchor"></a>
<p class="titleinexample">Example 16-4 Processing Newly Typed Values in an Editable Combo Box</p>
<pre xml:space="preserve" class="oac_no_warn">import javafx.application.Application;
<span class="bold">import javafx.event.ActionEvent;</span>
<span class="bold">import javafx.event.Event;</span>
import javafx.geometry.Insets;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;
 
public class ComboBoxSample extends Application {
        public static void main(String[] args) {
        launch(args);
    }
    
    final Button button = new Button ("Send");
    final Label notification = new Label ();
    final TextField subject = new TextField("");
    final TextArea text = new TextArea ("");
    
    String address = " ";
    
    @Override public void start(Stage stage) {
        stage.setTitle("ComboBoxSample");
        Scene scene = new Scene(new Group(), 500, 270);
        
        final ComboBox emailComboBox = new ComboBox();
        emailComboBox.getItems().addAll(
            "jacob.smith@example.com",
            "isabella.johnson@example.com",
            "ethan.williams@example.com",
            "emma.jones@example.com",
            "michael.brown@example.com"  
        );
        <span class="bold">emailComboBox.setPromptText("Email address");</span>
        <span class="bold">emailComboBox.setEditable(true); </span>       
        <span class="bold">emailComboBox.setOnAction((Event ev) -&gt; {</span>
            <span class="bold">address =</span> 
                <span class="bold">emailComboBox.getSelectionModel().getSelectedItem().toString();</span>    
        <span class="bold">});</span>
        
        final ComboBox priorityComboBox = new ComboBox();
        priorityComboBox.getItems().addAll(
            "Highest",
            "High",
            "Normal",
            "Low",
            "Lowest" 
        );   

        priorityComboBox.setValue("Normal");
     
        <span class="bold">button.setOnAction((ActionEvent e) -&gt; {</span>
            <span class="bold">if (emailComboBox.getValue() != null &amp;&amp;</span> 
                    <span class="bold">!emailComboBox.getValue().toString().isEmpty()){</span>
                <span class="bold">notification.setText("Your message was successfully sent"</span>
                        <span class="bold">+ " to " + address);</span>
                <span class="bold">emailComboBox.setValue(null);</span>
                <span class="bold">if (priorityComboBox.getValue() != null &amp;&amp;</span>
                        <span class="bold">!priorityComboBox.getValue().toString().isEmpty()){</span>
                    <span class="bold">priorityComboBox.setValue(null);</span>
                <span class="bold">}</span>
                <span class="bold">subject.clear();</span>
                <span class="bold">text.clear();</span>
            <span class="bold">}</span>
            <span class="bold">else {</span>
                <span class="bold">notification.setText("You have not selected a recipient!");</span>
            <span class="bold">}</span>
        <span class="bold">});</span>

        GridPane grid = new GridPane();
        grid.setVgap(4);
        grid.setHgap(10);
        grid.setPadding(new Insets(5, 5, 5, 5));
        grid.add(new Label("To: "), 0, 0);
        grid.add(emailComboBox, 1, 0);
        grid.add(new Label("Priority: "), 2, 0);
        grid.add(priorityComboBox, 3, 0);
        grid.add(new Label("Subject: "), 0, 1);
        grid.add(subject, 1, 1, 3, 1);            
        grid.add(text, 0, 2, 4, 1);
        grid.add(button, 0, 3);
        grid.add (notification, 1, 3, 3, 1);
        
        Group root = (Group)scene.getRoot();
        root.getChildren().add(grid);
        stage.setScene(scene);
        stage.show();
    }
}
</pre></div>
<!-- class="example" -->
<p>Besides the ability to edit <code>emailComboBox</code>, this code fragment implements event handling for this control. The newly typed or selected value is stored in the <code>address</code> variable. When users press the Send button, the notification containing the email address is shown.</p>
<p><a href="#BABEGIBG">Figure 16-5</a> captures the moment when a user is editing the email address of Jacob Smith and changing it to greg.smith@example.com.</p>
<div class="figure"><a id="BABEGIBG" name="BABEGIBG" class="anchor"></a><a id="JFXUI404" name="JFXUI404" class="anchor"></a>
<p class="titleinfigure">Figure 16-5 Editing an Email Address</p>
<img width="529" height="317" src="img/combobox-editable.png" alt="Description of Figure 16-5 follows" title="Description of Figure 16-5 follows" longdesc="img_text/combobox-editable.htm" /><br />
<a id="sthref152" name="sthref152" href="img_text/combobox-editable.htm">Description of "Figure 16-5 Editing an Email Address"</a><br />
<br /></div>
<!-- class="figure" -->
<p>When the Send button is pressed, all the controls return to their default states. The <code>clear</code> methods are called on the <code>TextField</code> and <code>TextArea</code> objects, and the <code>null</code> value is set for the combo box selected items. <a href="#BABCHAAH">Figure 16-6</a> shows the moment after the Send button is pressed.</p>
<div class="figure"><a id="BABCHAAH" name="BABCHAAH" class="anchor"></a><a id="JFXUI405" name="JFXUI405" class="anchor"></a>
<p class="titleinfigure">Figure 16-6 User Interface After the Send Button Is Pressed</p>
<img width="529" height="323" src="img/combobox-sent.png" alt="Description of Figure 16-6 follows" title="Description of Figure 16-6 follows" longdesc="img_text/combobox-sent.htm" /><br />
<a id="sthref153" name="sthref153" href="img_text/combobox-sent.htm">Description of "Figure 16-6 User Interface After the Send Button Is Pressed"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect1" -->
<a id="JFXUI406" name="JFXUI406" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref154" name="sthref154" class="anchor"></a>
<h2 class="sect1">Applying Cell Factories to Combo Boxes</h2>
<p>You can use the cell factory mechanism to alter the default behavior or appearance of a combo box. <a href="#BABIIIID">Example 16-5</a> creates a cell factory and applies it to the priority combo box to highlight priority types with special colors.</p>
<div class="example"><a id="BABIIIID" name="BABIIIID" class="anchor"></a><a id="JFXUI407" name="JFXUI407" class="anchor"></a>
<p class="titleinexample">Example 16-5 Implementing a Cell Factory for the Priority Combo Box</p>
<pre xml:space="preserve" class="oac_no_warn">import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.Event;
import javafx.geometry.Insets;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.GridPane;
<span class="bold">import javafx.scene.paint.Color;</span>
import javafx.stage.Stage;
<span class="bold">import javafx.util.Callback;</span>
 
public class ComboBoxSample extends Application {
        public static void main(String[] args) {
        launch(args);
    }
    
    final Button button = new Button ("Send");
    final Label notification = new Label ();
    final TextField subject = new TextField("");
    final TextArea text = new TextArea ("");
    
    String address = " ";
    
    @Override public void start(Stage stage) {
        stage.setTitle("ComboBoxSample");
        Scene scene = new Scene(new Group(), 500, 270);
        
        final ComboBox emailComboBox = new ComboBox();
        emailComboBox.getItems().addAll(
            "jacob.smith@example.com",
            "isabella.johnson@example.com",
            "ethan.williams@example.com",
            "emma.jones@example.com",
            "michael.brown@example.com"  
        );
        emailComboBox.setPromptText("Email address");
        emailComboBox.setEditable(true);        
        emailComboBox.setOnAction((Event ev) -&gt; {
            address = 
                emailComboBox.getSelectionModel().getSelectedItem().toString();    
        });
        
        final ComboBox priorityComboBox = new ComboBox();
        priorityComboBox.getItems().addAll(
            "Highest",
            "High",
            "Normal",
            "Low",
            "Lowest" 
        );   

        priorityComboBox.setValue("Normal");
        priorityComboBox.setCellFactory(
            <span class="bold">new Callback&lt;ListView&lt;String&gt;, ListCell&lt;String&gt;&gt;() {</span>
                <span class="bold">@Override public ListCell&lt;String&gt; call(ListView&lt;String&gt; param) {</span>
                    <span class="bold">final ListCell&lt;String&gt; cell = new ListCell&lt;String&gt;() {</span>
                        <span class="bold">{</span>
                            <span class="bold">super.setPrefWidth(100);</span>
                        <span class="bold">}</span>    
                        <span class="bold">@Override public void updateItem(String item,</span> 
                            <span class="bold">boolean empty) {</span>
                                <span class="bold">super.updateItem(item, empty);</span>
                                <span class="bold">if (item != null) {</span>
                                    <span class="bold">setText(item);</span>    
                                    <span class="bold">if (item.contains("High")) {</span>
                                        <span class="bold">setTextFill(Color.RED);</span>
                                    <span class="bold">}</span>
                                    <span class="bold">else if (item.contains("Low")){</span>
                                        <span class="bold">setTextFill(Color.GREEN);</span>
                                    <span class="bold">}</span>
                                    <span class="bold">else {</span>
                                        <span class="bold">setTextFill(Color.BLACK);</span>
                                    <span class="bold">}</span>
                                <span class="bold">}</span>
                                <span class="bold">else {</span>
                                   <span class="bold"> setText(null);</span>
                                <span class="bold">}</span>
                            <span class="bold">}</span>
                <span class="bold">};</span>
                <span class="bold">return cell;</span>
            <span class="bold">}</span>
        <span class="bold">});</span>
     
        button.setOnAction((ActionEvent e) -&gt; {
            if (emailComboBox.getValue() != null &amp;&amp; 
                    !emailComboBox.getValue().toString().isEmpty()){
                notification.setText("Your message was successfully sent"
                        + " to " + address);
                emailComboBox.setValue(null);
                if (priorityComboBox.getValue() != null &amp;&amp;
                        !priorityComboBox.getValue().toString().isEmpty()){
                    priorityComboBox.setValue(null);
                }
                subject.clear();
                text.clear();
            }
            else {
                notification.setText("You have not selected a recipient!");
            }
        })
        
        GridPane grid = new GridPane();
        grid.setVgap(4);
        grid.setHgap(10);
        grid.setPadding(new Insets(5, 5, 5, 5));
        grid.add(new Label("To: "), 0, 0);
        grid.add(emailComboBox, 1, 0);
        grid.add(new Label("Priority: "), 2, 0);
        grid.add(priorityComboBox, 3, 0);
        grid.add(new Label("Subject: "), 0, 1);
        grid.add(subject, 1, 1, 3, 1);            
        grid.add(text, 0, 2, 4, 1);
        grid.add(button, 0, 3);
        grid.add (notification, 1, 3, 3, 1);
        
        Group root = (Group)scene.getRoot();
        root.getChildren().add(grid);
        stage.setScene(scene);
        stage.show();
 
    }    
}
</pre></div>
<!-- class="example" -->
<p>The cell factory produces <code>ListCell</code> objects. Every cell is associated with a single combo box item. The width of each combo box item is set through the <code>setPrefWidth</code> method. The <code>updateItem</code> method sets the red color for the High and Highest items, green color for the Low and Lowest items, and leaves the Normal item black.</p>
<p><a href="#BABCCBHC">Figure 16-7</a> shows the items of the priority combo box after the cell factory in <a href="#BABIIIID">Example 16-5</a> is applied.</p>
<div class="figure"><a id="BABCCBHC" name="BABCCBHC" class="anchor"></a><a id="JFXUI408" name="JFXUI408" class="anchor"></a>
<p class="titleinfigure">Figure 16-7 Modified the Priority Combo Box</p>
<img width="527" height="321" src="img/combobox-priority.png" alt="Description of Figure 16-7 follows" title="Description of Figure 16-7 follows" longdesc="img_text/combobox-priority.htm" /><br />
<a id="sthref155" name="sthref155" href="img_text/combobox-priority.htm">Description of "Figure 16-7 Modified the Priority Combo Box"</a><br />
<br /></div>
<!-- class="figure" -->
<p>You can further enhance the appearance of the <code>ComboBox</code> control by applying CSS styles or visual effects.</p>
<p class="itemizedlisttitle">Related API Documentation&nbsp;</p>
<ul>
<li>
<p><a href="../api/javafx/scene/control/ComboBox.html"><code>ComboBox</code></a></p>
</li>
<li>
<p><a href="../api/javafx/scene/control/ComboBoxBase.html"><code>ComboBoxBase</code></a></p>
</li>
<li>
<p><a href="../api/javafx/scene/control/ListView.html"><code>ListView</code></a></p>
</li>
<li>
<p><a href="../api/javafx/scene/control/ListCell.html"><code>ListCell</code></a></p>
</li>
<li>
<p><a href="../api/javafx/scene/control/Button.html"><code>Button</code></a></p>
</li>
</ul>
</div>
<!-- class="sect1" -->

</article>

<div id=rightslider>


<!--/*///////////////////////////////////////////////////////////////////////
PANEL 1 /* table of contents */
///////////////////////////////////////////////////////////////////////*/-->

<div id="panel1" class="panel shadow">
<div class="panellists">
<div style="float:right;"><a href="#" id="X"><img src="../../assets/img-common/X.png"   alt="Close Window" title="Close Table of Contents Window" /></a></div>
	<h3>Table of Contents</h3>
		<script type="text/javascript" src="../../assets/js/tree.menu.js" >

/***********************************************
* Simple Tree Menu - (c) Dynamic Drive DHTML code library (www.dynamicdrive.com)
* This notice MUST stay intact for legal use
* Visit Dynamic Drive at http://www.dynamicdrive.com/ for full source code
***********************************************/

/*http://www.dynamicdrive.com/dynamicindex1/navigate1.htm*/
</script>

<h2>JavaFX: Working with JavaFX UI Components</h2>

<a href="javascript:ddtreemenu.flatten('treemenu1', 'expand')">Expand</a> | <a href="javascript:ddtreemenu.flatten('treemenu1', 'contact')">Collapse</a>

<ul id="treemenu1" class="treeview">
    <li><a href="title.htm#top">Title and Copyright Information</a></li>
    <li><a href="preface.htm#sthref2">Preface</a>
      <ul>
        <li><a href="preface.htm#sthref3">Audience</a></li>
        <li><a href="preface.htm#sthref4">Documentation Accessibility</a></li>
        <li><a href="preface.htm#sthref6">Related Documents</a></li>
        <li><a href="preface.htm#sthref7">Conventions</a></li>
      </ul>
    </li>
    <li><a href="ui_components.htm#JFXUI101">Part I About This Tutorial</a>
    <ul>
    <li><a href="whatsnew.htm#JFXUI781">1 What Is New</a></li>
</ul>
</li>
    <li><a href="ui_controls.htm#JFXUI336">Part II Using JavaFX UI Controls</a>
    <ul>
    <li><a href="label.htm#CIHHFIBJ">2 Label</a>
      <ul>
        <li><a href="label.htm#sthref10">Creating a Label</a></li>
        <li><a href="label.htm#sthref12">Setting a Font</a></li>
        <li><a href="label.htm#sthref13">Wrapping Text</a></li>
        <li><a href="label.htm#sthref15">Applying Effects</a></li>
      </ul>
    </li>
    <li><a href="button.htm#CJHEEACB">3 Button</a>
      <ul>
        <li><a href="button.htm#sthref19">Creating a Button</a></li>
        <li><a href="button.htm#sthref22">Assigning an Action</a></li>
        <li><a href="button.htm#sthref23">Applying Effects</a></li>
        <li><a href="button.htm#sthref25">Styling a Button</a></li>
      </ul>
    </li>
    <li><a href="radio-button.htm#BABBJBDA">4 Radio Button</a>
      <ul>
        <li><a href="radio-button.htm#sthref29">Creating a Radio Button</a></li>
        <li><a href="radio-button.htm#sthref30">Adding Radio Buttons to Groups</a></li>
        <li><a href="radio-button.htm#sthref32">Processing Events for Radio Buttons</a></li>
        <li><a href="radio-button.htm#sthref33">Requesting Focus for a Radio Button</a></li>
      </ul>
    </li>
    <li><a href="toggle-button.htm#CACJDICF">5 Toggle Button</a>
      <ul>
        <li><a href="toggle-button.htm#sthref38">Creating a Toggle Button</a></li>
        <li><a href="toggle-button.htm#sthref39">Adding Toggle Buttons to a Group</a></li>
        <li><a href="toggle-button.htm#sthref41">Setting the Behavior</a></li>
        <li><a href="toggle-button.htm#sthref43">Styling Toggle Buttons</a></li>
      </ul>
    </li>
    <li><a href="checkbox.htm#CHDFEJCD">6 Checkbox</a>
      <ul>
        <li><a href="checkbox.htm#sthref47">Creating Checkboxes</a></li>
        <li><a href="checkbox.htm#sthref48">Defining a State</a></li>
        <li><a href="checkbox.htm#sthref50">Setting the Behavior</a></li>
      </ul>
    </li>
    <li><a href="choice-box.htm#BCEDJAEH">7 Choice Box</a>
      <ul>
        <li><a href="choice-box.htm#sthref54">Creating a Choice Box</a></li>
        <li><a href="choice-box.htm#sthref56">Setting the Behavior for a Choice Box</a></li>
        <li><a href="choice-box.htm#sthref59">Applying a Tooltip</a></li>
      </ul>
    </li>
    <li><a href="text-field.htm#BABBCEIG">8 Text Field</a>
      <ul>
        <li><a href="text-field.htm#sthref63">Creating a Text Field</a></li>
        <li><a href="text-field.htm#sthref64">Building the UI with Text Fields</a></li>
        <li><a href="text-field.htm#sthref67">Processing Text Field Data</a></li>
      </ul>
    </li>
    <li><a href="password-field.htm#BABIDAGF">9 Password Field</a>
      <ul>
        <li><a href="password-field.htm#sthref71">Creating a Password Field</a></li>
        <li><a href="password-field.htm#sthref73">Evaluating the Password</a></li>
      </ul>
    </li>
    <li><a href="scrollbar.htm#BGBEGJDE">10 Scroll Bar</a>
      <ul>
        <li><a href="scrollbar.htm#sthref78">Creating a Scroll Bar</a></li>
        <li><a href="scrollbar.htm#sthref79">Using a Scroll Bar in Your Application</a></li>
      </ul>
    </li>
    <li><a href="scrollpane.htm#CBBFFBCH">11 Scroll Pane</a>
      <ul>
        <li><a href="scrollpane.htm#sthref83">Creating a Scroll Pane</a></li>
        <li><a href="scrollpane.htm#sthref84">Setting the Scroll Bar Policy for a Scroll Pane</a></li>
        <li><a href="scrollpane.htm#sthref86">Resizing Components in the Scroll Pane</a></li>
        <li><a href="scrollpane.htm#sthref89">Sample Application with a Scroll Pane</a></li>
      </ul>
    </li>
    <li><a href="list-view.htm#CEGGEDBF">12 List View</a>
      <ul>
        <li><a href="list-view.htm#sthref93">Creating a List View</a></li>
        <li><a href="list-view.htm#sthref96">Populating a List View with Data</a></li>
        <li><a href="list-view.htm#sthref98">Customizing the Content of a List View</a></li>
        <li><a href="list-view.htm#sthref100">Processing the List Item Selection</a></li>
      </ul>
    </li>
    <li><a href="table-view.htm#CJABIEED">13 Table View</a>
      <ul>
        <li><a href="table-view.htm#sthref104">Creating a Table</a></li>
        <li><a href="table-view.htm#sthref107">Defining the Data Model</a></li>
        <li><a href="table-view.htm#sthref109">Adding New Rows</a></li>
        <li><a href="table-view.htm#sthref112">Sorting Data in Columns</a></li>
        <li><a href="table-view.htm#sthref114">Editing Data in the Table</a></li>
        <li><a href="table-view.htm#sthref117">Adding Maps of Data to the Table</a></li>
      </ul>
    </li>
    <li><a href="tree-view.htm#JFXUI377">14 Tree View</a>
      <ul>
        <li><a href="tree-view.htm#sthref121">Creating Tree Views</a></li>
        <li><a href="tree-view.htm#sthref123">Implementing Cell Factories</a></li>
        <li><a href="tree-view.htm#sthref126">Adding New Tree Items on Demand</a></li>
        <li><a href="tree-view.htm#sthref129">Using Tree Cell Editors</a></li>
      </ul>
    </li>
    <li><a href="tree-table-view.htm#JFXUI833">15 Tree Table View</a>
      <ul>
        <li><a href="tree-table-view.htm#sthref135">Creating a TreeTableView control</a></li>
        <li><a href="tree-table-view.htm#sthref137">Adding Several Columns</a></li>
        <li><a href="tree-table-view.htm#sthref139">Altering Visual Appearance</a></li>
        <li><a href="tree-table-view.htm#sthref142">Managing Selection Mode</a></li>
      </ul>
    </li>
    <li><a class="selected" href="combo-box.htm#BABEFEJC">16 Combo Box</a>
      <ul>
        <li><a href="combo-box.htm#sthref147">Creating Combo Boxes</a></li>
        <li><a href="combo-box.htm#sthref151">Editable Combo Boxes</a></li>
        <li><a href="combo-box.htm#sthref154">Applying Cell Factories to Combo Boxes</a></li>
      </ul>
    </li>
    <li><a href="separator.htm#BGBCFDFI">17 Separator</a>
      <ul>
        <li><a href="separator.htm#sthref157">Creating a Separator</a></li>
        <li><a href="separator.htm#sthref159">Adding Separators to the UI of Your Application</a></li>
        <li><a href="separator.htm#sthref161">Styling Separators</a></li>
      </ul>
    </li>
    <li><a href="slider.htm#CCHFBJCH">18 Slider</a>
      <ul>
        <li><a href="slider.htm#sthref165">Creating a Slider</a></li>
        <li><a href="slider.htm#sthref166">Using Sliders in Graphical Applications</a></li>
      </ul>
    </li>
    <li><a href="progress.htm#CHDDJAJE">19 Progress Bar and Progress Indicator</a>
      <ul>
        <li><a href="progress.htm#sthref170">Creating Progress Controls</a></li>
        <li><a href="progress.htm#sthref172">Indicating Progress in Your User Interface</a></li>
      </ul>
    </li>
    <li><a href="hyperlink.htm#CIHGADBG">20 Hyperlink</a>
      <ul>
        <li><a href="hyperlink.htm#sthref176">Creating a Hyperlink</a></li>
        <li><a href="hyperlink.htm#sthref177">Linking the Local Content</a></li>
        <li><a href="hyperlink.htm#sthref180">Linking the Remote Content</a></li>
      </ul>
    </li>
    <li><a href="editor.htm#JFXUI346">21 HTML Editor</a>
      <ul>
        <li><a href="editor.htm#sthref184">Adding an HTML Editor</a></li>
        <li><a href="editor.htm#sthref187">Using an HTML Editor to Build the User Interface</a></li>
        <li><a href="editor.htm#sthref189">Obtaining HTML Content</a></li>
      </ul>
    </li>
    <li><a href="tooltip.htm#BABBIJBJ">22 Tooltip</a>
      <ul>
        <li><a href="tooltip.htm#sthref194">Creating a Tooltip</a></li>
        <li><a href="tooltip.htm#sthref196">Presenting Application Data in Tooltips</a></li>
      </ul>
    </li>
    <li><a href="accordion-titledpane.htm#JFXUI356">23 Titled Pane and Accordion</a>
      <ul>
        <li><a href="accordion-titledpane.htm#sthref200">Creating Titled Panes</a></li>
        <li><a href="accordion-titledpane.htm#sthref203">Adding Titled Panes to an Accordion</a></li>
        <li><a href="accordion-titledpane.htm#sthref205">Processing Events for an Accordion with Titled Panes</a></li>
      </ul>
    </li>
    <li><a href="menu_controls.htm#JFXUI409">24 Menu</a>
      <ul>
        <li><a href="menu_controls.htm#sthref210">Building Menus in JavaFX Applications</a></li>
        <li><a href="menu_controls.htm#sthref211">Creating a Menu Bar</a></li>
        <li><a href="menu_controls.htm#sthref213">Adding Menu Items</a></li>
        <li><a href="menu_controls.htm#sthref216">Creating Submenus</a></li>
        <li><a href="menu_controls.htm#sthref220">Adding Context Menus</a></li>
      </ul>
    </li>
    <li><a href="color-picker.htm#JFXUI433">25 Color Picker</a>
      <ul>
        <li><a href="color-picker.htm#sthref223">Design Overview</a>
          <ul>
          <li><a href="color-picker.htm#sthref225">Color Chooser</a></li>
          <li><a href="color-picker.htm#sthref227">Color Palette</a></li>
          <li><a href="color-picker.htm#sthref230">Custom Color Dialog Window</a></li>
          </ul>
        </li>
        <li><a href="color-picker.htm#JFXUI445">Using a Color Picker</a></li>
        <li><a href="color-picker.htm#JFXUI452">Changing the Appearance of a Color Picker</a></li>
      </ul>
    </li>
    <li><a href="date-picker.htm#JFXUI808">26 Date Picker</a>
      <ul>
        <li><a href="date-picker.htm#sthref238">Working with Time Data and Date Formats</a></li>
        <li><a href="date-picker.htm#sthref239">Date Picker Design Overview</a></li>
        <li><a href="date-picker.htm#sthref241">Adding a Date Picker to an Application UI</a></li>
        <li><a href="date-picker.htm#sthref244">Customizing the Date Picker</a></li>
        <li><a href="date-picker.htm#sthref250">Altering the Calendar System</a></li>
      </ul>
    </li>
    <li><a href="pagination.htm#JFXUI459">27 Pagination Control</a>
      <ul>
        <li><a href="pagination.htm#sthref254">Creating a Pagination Control</a></li>
        <li><a href="pagination.htm#sthref257">Implementing Page Factories</a></li>
        <li><a href="pagination.htm#sthref262">Styling a Pagination Control</a></li>
      </ul>
    </li>
    <li><a href="file-chooser.htm#CCHICECF">28 File Chooser</a>
      <ul>
        <li><a href="file-chooser.htm#sthref266">Opening Files</a></li>
        <li><a href="file-chooser.htm#sthref272">Configuring a File Chooser</a></li>
        <li><a href="file-chooser.htm#sthref274">Setting Extension Filters</a></li>
        <li><a href="file-chooser.htm#sthref276">Saving Files</a></li>
      </ul>
    </li>
    <li><a href="custom.htm#JFXUI493">29 Customization of UI Controls</a>
      <ul>
        <li><a href="custom.htm#sthref280">Applying CSS</a></li>
        <li><a href="custom.htm#sthref285">Altering Default Behavior</a></li>
        <li><a href="custom.htm#sthref288">Implementing Cell Factories</a></li>
      </ul>
    </li>
    <li><a href="embed.htm#JFXUI785">30 UI Controls on the Embedded Platforms</a>
      <ul>
        <li><a href="embed.htm#sthref292">Embedded Runtime Features</a>
          <ul>
          <li><a href="embed.htm#sthref293">Support for Touch-Enabled Devices</a></li>
          <li><a href="embed.htm#sthref294">Virtual Keyboard</a></li>
          </ul>
        </li>
        <li><a href="embed.htm#sthref301">Appearance of UI Controls on Embedded Platforms</a>
          <ul>
          <li><a href="embed.htm#sthref302">Scrolling Controls</a></li>
          <li><a href="embed.htm#sthref304">Text Input Controls</a></li>
          <li><a href="embed.htm#sthref306">Context Menus</a></li>
          </ul>
        </li>
        <li><a href="embed.htm#sthref309">UI Controls Features Available on the Embedded Platforms</a></li>
        <li><a href="embed.htm#sthref311">UI Controls Features That Are Not Available on Embedded Touch Platforms</a></li>
        <li><a href="embed.htm#sthref312">Other Features That Are Not Available on Embedded Touch Platforms</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="charts.htm#JFXUI577">Part III Working with JavaFX Charts</a>
    <ul>
    <li><a href="pie-chart.htm#CIHFDADD">31 Pie Chart</a>
      <ul>
        <li><a href="pie-chart.htm#sthref314">Creating a Pie Chart</a></li>
        <li><a href="pie-chart.htm#sthref316">Setting a Pie Chart and a Legend</a></li>
        <li><a href="pie-chart.htm#sthref319">Processing Events for a Pie Chart</a></li>
      </ul>
    </li>
    <li><a href="line-chart.htm#CIHGBCFI">32 Line Chart</a>
      <ul>
        <li><a href="line-chart.htm#sthref323">Chart Settings</a></li>
        <li><a href="line-chart.htm#sthref324">Chart Data</a></li>
        <li><a href="line-chart.htm#sthref325">Creating a Line Chart</a></li>
        <li><a href="line-chart.htm#sthref327">Creating Categories for a Line Chart</a></li>
        <li><a href="line-chart.htm#sthref329">Adding Series to the Line Chart</a></li>
      </ul>
    </li>
    <li><a href="area-chart.htm#CIHCFGBA">33 Area Chart</a>
      <ul>
        <li><a href="area-chart.htm#sthref334">Creating an Area Chart</a></li>
        <li><a href="area-chart.htm#sthref336">Creating a Stacked Area Chart</a></li>
        <li><a href="area-chart.htm#sthref338">Setting Axis and Tick Properties</a></li>
        <li><a href="area-chart.htm#sthref342">Adding Negative Values</a></li>
        <li><a href="area-chart.htm#sthref344">Styling Area Charts</a></li>
      </ul>
    </li>
    <li><a href="bubble-chart.htm#CHDHAFHB">34 Bubble Chart</a>
      <ul>
        <li><a href="bubble-chart.htm#sthref348">Creating a Bubble Chart</a></li>
        <li><a href="bubble-chart.htm#sthref351">Using the Extra Value Property</a></li>
        <li><a href="bubble-chart.htm#sthref353">Changing the Appearance Visual Setting of the Plot and Tick Marks</a></li>
      </ul>
    </li>
    <li><a href="scatter-chart.htm#CIHDEACI">35 Scatter Chart</a>
      <ul>
        <li><a href="scatter-chart.htm#sthref357">Creating a Scatter Chart</a></li>
        <li><a href="scatter-chart.htm#sthref359">Managing Chart Data</a></li>
        <li><a href="scatter-chart.htm#sthref361">Adding Effects to Charts</a></li>
        <li><a href="scatter-chart.htm#sthref363">Changing the Chart Symbol</a></li>
      </ul>
    </li>
    <li><a href="bar-chart.htm#CIHJFHDE">36 Bar Chart</a>
      <ul>
        <li><a href="bar-chart.htm#sthref367">Creating a Bar Chart</a></li>
        <li><a href="bar-chart.htm#sthref369">Horizontal Bar Chart</a></li>
        <li><a href="bar-chart.htm#sthref371">Creating a Stacked Bar Chart</a></li>
        <li><a href="bar-chart.htm#sthref374">Animating Data in Charts</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="css_tutorial.htm#JFXUI733">Part IV Skinning JavaFX Applications with CSS</a>
    <ul>
    <li><a href="apply-css.htm#JFXUI714">37 Styling UI Controls with CSS</a>
      <ul>
        <li><a href="apply-css.htm#sthref378">Default Style Sheet</a></li>
        <li><a href="apply-css.htm#sthref380">Creating Style Sheets</a></li>
        <li><a href="apply-css.htm#sthref381">Defining Styles</a>
          <ul>
          <li><a href="apply-css.htm#sthref382">Selectors</a></li>
          <li><a href="apply-css.htm#sthref383">Rules and Properties</a></li>
          </ul>
        </li>
        <li><a href="apply-css.htm#sthref384">Skinning the Scene</a></li>
        <li><a href="apply-css.htm#sthref385">Skinning Controls</a>
          <ul>
          <li><a href="apply-css.htm#sthref386">Overriding Default Styles</a></li>
          <li><a href="apply-css.htm#sthref388">Creating Class Styles</a></li>
          <li><a href="apply-css.htm#sthref390">Creating ID Styles</a></li>
          <li><a href="apply-css.htm#sthref392">Setting Styles in the Code</a></li>
          </ul>
        </li>
        <li><a href="apply-css.htm#sthref394">Additional Resources</a></li>
      </ul>
    </li>
    <li><a href="css-styles.htm#JFXUI672">38 Styling Charts with CSS</a>
      <ul>
        <li><a href="css-styles.htm#sthref395">Modifying Basic Chart Elements</a></li>
        <li><a href="css-styles.htm#sthref401">Altering Colors of the Chart Plot</a></li>
        <li><a href="css-styles.htm#sthref404">Setting the Axes</a></li>
        <li><a href="css-styles.htm#sthref407">Setting Chart Colors</a></li>
        <li><a href="css-styles.htm#sthref413">Changing Chart Symbols</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="text.htm#JFXUI734">Part V Working with Text in JavaFX Applications</a>
    <ul>
    <li><a href="text-settings.htm#JFXUI735">39 Using Text in JavaFX</a>
      <ul>
        <li><a href="text-settings.htm#sthref417">Introduction</a></li>
        <li><a href="text-settings.htm#sthref418">Adding Text</a>
          <ul>
          <li><a href="text-settings.htm#sthref420">Setting Text Font and Color</a></li>
          <li><a href="text-settings.htm#sthref422">Making Text Bold or Italic</a></li>
          <li><a href="text-settings.htm#sthref423">Using Custom Fonts</a></li>
          <li><a href="text-settings.htm#sthref425">Setting LCD Text Support</a></li>
          <li><a href="text-settings.htm#sthref426">Rich Text and Bidirectional Support</a></li>
          </ul>
        </li>
      </ul>
    </li>
    <li><a href="text-effects.htm#JFXUI773">40 Applying Effects to Text</a>
      <ul>
        <li><a href="text-effects.htm#sthref429">Perspective Effect</a></li>
        <li><a href="text-effects.htm#sthref431">Blur Effect</a></li>
        <li><a href="text-effects.htm#sthref433">Drop Shadow Effect</a></li>
        <li><a href="text-effects.htm#sthref435">Inner Shadow Effect</a></li>
        <li><a href="text-effects.htm#sthref437">Reflection</a></li>
        <li><a href="text-effects.htm#sthref439">Combining Several Effects</a></li>
        <li><a href="text-effects.htm#sthref441">Application Files</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="samples.htm#sthref444">Part VI Source Code for the UI Components Tutorials</a>
    <ul>
    <li><a href="ui_controls_samples.htm#sthref445">A UI Control Samples</a>
      <ul>
        <li><a href="ui_controls_samples.htm#JFXUI870">LabelSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI871">ButtonSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI872">RadioButtonSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI873">ToggleButtonSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI874">CheckboxSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI875">ChoiceBoxSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI876">TextFieldSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI877">PasswordField.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI878">ScrollBarSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI879">ScrollPaneSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI880">ListViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI881">TableViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI882">TreeViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI883">TreeTableViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI884">ComboBoxSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI885">SeparatorSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI886">SliderSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI887">ProgressSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI888">HyperlinkSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI889">HyperlinkWebViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI890">HTMLEditorSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI891">TooltipSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI892">TitledPaneSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI893">MenuSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI894">ColorPickerSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI895">DatePickerSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI896">PaginationSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI897">FileChooserSample.java</a></li>
      </ul>
    </li>
    <li><a href="chart_samples.htm#JFXUI898">B Chart Samples</a>
      <ul>
        <li><a href="chart_samples.htm#JFXUI900">PieChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI901">LineChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI902">AreaChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI903">BubbleChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI904">ScatterChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI905">BarChartSample.java</a></li>
      </ul>
    </li>
    <li><a href="css_samples.htm#sthref446">C CSS Samples</a>
      <ul>
        <li><a href="css_samples.htm#JFXUI908">DownloadButton.java</a></li>
        <li><a href="css_samples.htm#JFXUI909">DownloadButtonStyle1.css</a></li>
        <li><a href="css_samples.htm#JFXUI910">DownloadButtonStyle2.css</a></li>
        <li><a href="css_samples.htm#JFXUI911">StyleStage.java</a></li>
        <li><a href="css_samples.htm#JFXUI912">UIControlCSS.java</a></li>
        <li><a href="css_samples.htm#JFXUI913">controlStyle1.css</a></li>
        <li><a href="css_samples.htm#JFXUI914">controlStyle2.css</a></li>
      </ul>
    </li>
    <li><a href="text_samples.htm#sthref447">D Text Samples</a>
      <ul>
        <li><a href="text_samples.htm#JFXUI917">TextEffects.java</a></li>
        <li><a href="text_samples.htm#JFXUI920">NeonSign.java</a></li>
      </ul>
    </li>
</ul>

</li>
</ul>


<script type="text/javascript">

//ddtreemenu.createTree(treeid, enablepersist, opt_persist_in_days (default is 1))

ddtreemenu.createTree("treemenu1", true)
//ddtreemenu.createTree("treemenu2", false)

</script>
</div>
<div style="clear:both;"></div>
</div>


<!--/*///////////////////////////////////////////////////////////////////////
TABS 
///////////////////////////////////////////////////////////////////////*/-->

<a class="trig1 trigger shadow" alt="Table of Contents" title="Contents" href="#"></a>

</div>

<div id="pagenav2"><a class="button" title="Previous Page" href="tree-table-view.htm">Previous Page</a><a href="#top"  class="button" title="Top of Page" target="_self">Top of Page</a><a class="button" title="Next Page" href="separator.htm">Next Page</a></div>

<br class="clearfloat" />
<span class="clearfloat"></span>
</div> <!-- .contentarea -->
</div> <!-- .main -->
</div> <!-- #main-container --><!-- content -->

<div class="main wrapper">

<div class="socialicons">

<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a>


<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a>


<a href="" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>


<!--
<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a> 

<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a> 

<a target="_blank" href="http://blogs.oracle.com/thejavatutorials/feed/entries/rss" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>
-->
</div>
<div class="SocialBar">


<div id="tw-like">
<!-- from:twitter:https://twitter.com/about/resources/buttons#tweet -->
<a target="_blank" href="https://twitter.com/share" class="twitter-share-button" data-count="none">Tweet</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</div>



<div id="go-like">
<!-- https://developers.google.com/+/web/+1button/ -->

<!-- Place this tag where you want the +1 button to render. -->
<div class="g-plusone" data-size="medium" data-annotation="none"></div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</div>




<!--<div id="fb-like">

<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like" data-href="https://www.facebook.com/OracleCloudComputing" data-width="450" data-layout="button_count" data-show-faces="false" data-send="true"></div>
</div>-->


</div>
</div>


<div class="footer-containerbook ">
 <footer>
	<span style="display:block;">Copyright &copy; 2011, 2014, Oracle and/or its affiliates. All rights reserved. <a href="../../assets/cpyr.htm">Legal Notices</a></span>
 </footer>
</div>
        
        <br />
        
        <!--<script src="../../assets/js/jquery.min.js"></script>
        <script>window.jQuery || document.write('<script src="../../assets/js/jquery-1.8.0.min.js"><\/script>')</script>-->

<!-- Start SiteCatalyst code -->
<script type="application/javascript" src="https://www.oracleimg.com/us/assets/metrics/ora_docs.js"></script>
<!-- End SiteCatalyst code -->


</body>
</html>
