<!DOCTYPE html>
<!--[if lt IE 7]>      <html lang="en" class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html lang="en" class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html lang="en" class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html lang="en" class="no-js"> <!--<![endif]-->

<head>

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<title>24 Menu (Release 8)</title>
<meta name="description" content="This chapter explains how to create menus and menu bars, add menu items, group the menus into categories, create submenus, and set context menus.">

<meta name="viewport" content="width=device-width">

<link rel="stylesheet" href="../../assets/css/main.css">
<link rel="stylesheet" href="../../assets/css/main-media-480-tablet.css">
<link rel="stylesheet" href="../../assets/css/main-media-768-laptop.css">
<link rel="stylesheet" href="../../assets/css/main-media-1140-deskp.css">

<link rel="stylesheet" href="../../assets/css/simpletree.css">
<link rel="stylesheet" href="../../assets/css/forms.css">
<link rel="stylesheet" href="../../assets/css/panel.css">
<link rel="stylesheet" href="../../assets/css/altanav.css">
<link rel="stylesheet" href="../../assets/css/docstyles.css">

<link rel="stylesheet" href="../../assets/css/print.css">
<link rel="stylesheet" href="../../assets/css/home.css">
<link rel="stylesheet" href="../../assets/css/normalize.min.css">    

        
<!--[if lt IE 9]>
<link rel="stylesheet" href="../../assets/css/ltIE9.css">
<![endif]-->         
        
<script src="../../assets/js/jquery-1.6.2.js"></script>
<script src="../../assets/js/modernizr-2.6.1-respond-1.1.0.min.js"></script>

<!--toggle search-->
<script src="../../assets/js/toggle.search.js"  type="text/javascript"></script>
<!--navigation main-->
<script src="../../assets/js/altanav.js"  type="text/javascript"></script> 
<!--custom tag element-->
<script src="../../assets/js/customhtmltags.js"  type="text/javascript"></script> 

<!--project specific head data-->
  
<!-- Function for printing -->  
<script>
function PrintPage()
  {window.print();}
</script>

<script>
  $(window).unload(function() {
  });
</script>


<!-- keep select menu's sticking when hit back button-->
<script>
$(window).load(function () {
    $("select").each(function () {
        $(this).val($(this).find('option[selected]').val());
    });
});
</script>

<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>

<body>
<!--[if lt IE 7]>
<div style="border-bottom: 1px solid #A3A481; background-color: #FFFFDC; padding: 10px; font: normal 13px/16px Arial, sans-serif;">
<strong>You are running an older version of Internet Explorer or running Internet Explorer in compatibility mode.</strong>  For a richer experience, please upgrade to the latest <a target="_blank" href="http://windows.microsoft.com/en-US/internet-explorer/downloads/ie" target="_blank">Internet Explorer</a> version, or use <a target="_blank" href="http://www.google.com/chrome/" target="_blank">Chrome</a>, <a target="_blank" href="http://www.mozilla.com/en-US/firefox/" target="_blank">Firefox</a>, or <a target="_blank" href="http://www.apple.com/safari/" target="_blank">Safari</a>.
</div>
<![endif]--> 

<div id="altlogo">Oracle | Hardware and Software, Engineered to Work Together</div>

<span id="top"></span>


<div class="header-container">
<header class="bookwrapper  clearfix">

<div id="brandProdName" >
<div id="logocover"></div>
<div id="productName" >Documentation</div>
</div> 

<div id="signInArea"></div>
<script type="text/javascript">
$(document).ready(function() {
$("#signInArea").load("../../version.html");
});
</script>

<div id="searchheader">
<a href="/javase/search.html" class="button">Search Java SE Documentation</a></div>

<!-- Main Navigation -->
 <br class="clearfloat" />
 <div id="navBar" class="io" >

<!--
<ul>
<li><a class="menu1" title="Home" href="pg-home.php"><span>Home</span></a></li>
<li><a class="menu2" title="What's New"><span>What's New</span><span class="dropdown-arrow"></span></a></li>
<li><a class="menu3" title="All Books" href="pg-allbooks-infotype.php"><span>All Books</span></a></li>
</ul>
-->
</div>
            <br class="clearfloat" />
<!--         
<div id="navcontainer" >
<div class="submenu2 shadow" ><h3>See What's New in <strong>SE</strong> Documentation</h3>
</div>

</div> -->
            <br class="clearfloat" />
<!-- End Main Navigation -->


  </header>
</div><!-- header -->

<div class="main-container" >
<div class="main bookwrapper bookindent clearfix" >

<div id="breadcrumb">
  <a href="../../index.html">Java Platform, Standard Edition (Java SE) 8</a>
</div>
<div class="bookoptions"><a href="mailto:javasedocs_us@oracle.com" title="Send Feedback">Send Feedback</a> | <a href="#" onclick="PrintPage();">Print</a>
 | <a href="../JFXUI.pdf">PDF</a> | <a href="../JFXUI.epub">ePub</a> | <a href="../JFXUI.mobi">Mobi</a>
</div>

<div class="booktitle">JavaFX: Working with JavaFX UI Components</div>

<div class="contentarea clearboth">

<script type="text/javascript">

$(document).ready(function(){

//////////////////////
$(".trig1").click(function(){
        $("#panel1").toggle("fast"); <!--/*makes panel visible*/-->
        $(this).toggleClass("active"); <!--makes trigger expand out-->
        return false;
    });

///////////////////////

$("#X").click(function(){
      // trigger click is needed for css .active to work
	  $( ".trig1" ).trigger( "click" );
   return false;
    });

/*/////////////////////

$("#panel1").mouseleave(function(){
  $( ".trig1" ).trigger( "click" );
   return false;
});

/////////////////////*/
});

</script>


<!-- page navigation -->

<!--div id="tocbutton" ><span class="button"><a href="#mypanel"><img src="../../assets/img-common/3linemenu.png" alt="menu icon" />Menu</a></span></div-->

<div id="pagenav"><a class="button" title="Previous Page" href="accordion-titledpane.htm">Previous Page</a><a class="button" title="Next Page" href="color-picker.htm">Next Page</a></div>

<article>

<!-- End Header --><a id="BABGHADI" name="BABGHADI" class="anchor"></a><a id="JFXUI409" name="JFXUI409" class="anchor"></a>
<h1 class="chapter"><span class="secnum">24</span> Menu</h1>
<a id="JFXUI410" name="JFXUI410" class="anchor"></a>
<p>This chapter explains how to create menus and menu bars, add menu items, group the menus into categories, create submenus, and set context menus.</p>
<p>You can use the following classes of the JavaFX API to build menus in your JavaFX application.</p>
<ul>
<li>
<p>MenuBar</p>
</li>
<li>
<p>MenuItem</p>
<ul>
<li>
<p>Menu</p>
</li>
<li>
<p>CheckMenuItem</p>
</li>
<li>
<p>RadioMenuItem</p>
</li>
<li>
<p>Menu</p>
</li>
<li>
<p>CustomMenuItem</p>
<ul>
<li>
<p>SeparatorMenuItem</p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>ContextMenu</p>
</li>
</ul>
<p><a href="#BABFJIIH">Figure 24-1</a> shows a screen capture of an application with a typical menu bar.</p>
<div class="figure"><a id="BABFJIIH" name="BABFJIIH" class="anchor"></a><a id="JFXUI411" name="JFXUI411" class="anchor"></a>
<p class="titleinfigure">Figure 24-1 Application with a Menu Bar and Three Menu Categories</p>
<img width="418" height="389" src="img/menu-intro.png" alt="Description of Figure 24-1 follows" title="Description of Figure 24-1 follows" longdesc="img_text/menu-intro.htm" /><br />
<a id="sthref209" name="sthref209" href="img_text/menu-intro.htm">Description of "Figure 24-1 Application with a Menu Bar and Three Menu Categories"</a><br />
<br /></div>
<!-- class="figure" -->
<a id="JFXUI412" name="JFXUI412" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref210" name="sthref210" class="anchor"></a>
<h2 class="sect1">Building Menus in JavaFX Applications</h2>
<p>A menu is a list of actionable items that can be displayed upon a user's request. When a menu is visible, users can select one menu item at time. After a user clicks an item, the menu returns to the hidden mode. By using menus, you can save space in your application user interface (UI) by placing in menus the functionality that does not always need to be visible.</p>
<p>The menus in a menu bar are typically grouped into categories. The coding pattern is to declare a menu bar, define the category menus, and populate the category menus with menu items. Use the following menu item classes when building menus in your JavaFX applications:</p>
<ul>
<li>
<p><code>MenuItem</code> &#x2013; to create one actionable option</p>
</li>
<li>
<p><code>Menu</code> &#x2013; to create a submenu</p>
</li>
<li>
<p><code>RadioButtonItem</code> &#x2013; to create a mutually exclusive selection</p>
</li>
<li>
<p><code>CheckMenuItem</code> &#x2013; to create an option that can be toggled between selected and unselected states</p>
</li>
</ul>
<p>To separate menu items within one category, use the <code>SeparatorMenuItem</code> class.</p>
<p>The menus organized by categories in a menu bar are typically located at the top of the window, leaving the rest of the scene for crucial UI elements. If, for some reasons, you cannot allot any visual part of your UI for a menu bar, you can use context menus that the user opens with a mouse click.</p>
</div>
<!-- class="sect1" -->
<a id="JFXUI413" name="JFXUI413" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref211" name="sthref211" class="anchor"></a>
<h2 class="sect1">Creating a Menu Bar</h2>
<p>Although a menu bar can be placed elsewhere in the user interface, typically it is located at the top of the UI and it contains one or more menus. The menu bar automatically resizes to fit the width of the application window. By default, each menu added to the menu bar is represented by a button with the text value.</p>
<p>Consider an application that renders reference information about plants such as their name, binomial name, picture, and a brief description. You can create three menu categories: File, Edit, and View, and populate them with the menu items. <a href="#BABCFFFG">Example 24-1</a> shows the source code of such an application with the menu bar added.</p>
<div class="example"><a id="BABCFFFG" name="BABCFFFG" class="anchor"></a><a id="JFXUI414" name="JFXUI414" class="anchor"></a>
<p class="titleinexample">Example 24-1 Menu Sample Application</p>
<pre xml:space="preserve" class="oac_no_warn">import java.util.AbstractMap.SimpleEntry;
import java.util.Map.Entry;
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.effect.DropShadow;
import javafx.scene.effect.Effect;
import javafx.scene.effect.Glow;
import javafx.scene.effect.SepiaTone;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
 
public class MenuSample extends Application {
 
    final PageData[] pages = new PageData[] {
        new PageData("Apple",
            "The apple is the pomaceous fruit of the apple tree, species Malus "
            + "domestica in the rose family (Rosaceae). It is one of the most "
            + "widely cultivated tree fruits, and the most widely known of "
            + "the many members of genus Malus that are used by humans. "
            + "The tree originated in Western Asia, where its wild ancestor, "
            + "the Alma, is still found today.",
            "Malus domestica"),
        new PageData("Hawthorn",
            "The hawthorn is a large genus of shrubs and trees in the rose "
            + "family, Rosaceae, native to temperate regions of the Northern "
            + "Hemisphere in Europe, Asia and North America. "
            + "The name hawthorn was "
            + "originally applied to the species native to northern Europe, "
            + "especially the Common Hawthorn C. monogyna, and the unmodified "
            + "name is often so used in Britain and Ireland.",
            "Crataegus monogyna"),
        new PageData("Ivy",
            "The ivy is a flowering plant in the grape family (Vitaceae) native to"
            + " eastern Asia in Japan, Korea, and northern and eastern China. "
            + "It is a deciduous woody vine growing to 30 m tall or more given "
            + "suitable support,  attaching itself by means of numerous small "
            + "branched tendrils tipped with sticky disks.",
            "Parthenocissus tricuspidata"),
        new PageData("Quince",
            "The quince is the sole member of the genus Cydonia and is native to "
            + "warm-temperate southwest Asia in the Caucasus region. The "
            + "immature fruit is green with dense grey-white pubescence, most "
            + "of which rubs off before maturity in late autumn when the fruit "
            + "changes color to yellow with hard, strongly perfumed flesh.",
            "Cydonia oblonga")
    };
 
    final String[] viewOptions = new String[] {
        "Title", 
        "Binomial name", 
        "Picture", 
        "Description"
    };
 
    final Entry&lt;String, Effect&gt;[] effects = new Entry[] {
        new SimpleEntry&lt;&gt;("Sepia Tone", new SepiaTone()),
        new SimpleEntry&lt;&gt;("Glow", new Glow()),
        new SimpleEntry&lt;&gt;("Shadow", new DropShadow())
    };
 
    final ImageView pic = new ImageView();
    final Label name = new Label();
    final Label binName = new Label();
    final Label description = new Label();
 
    public static void main(String[] args) {
        launch(args);
    }
 
    @Override
    public void start(Stage stage) {
        stage.setTitle("Menu Sample");
        Scene scene = new Scene(new VBox(), 400, 350);
         
        <span class="bold">MenuBar menuBar = new MenuBar();</span>
 
        // --- Menu File
        <span class="bold">Menu menuFile = new Menu("File");</span>
 
        // --- Menu Edit
        <span class="bold">Menu menuEdit = new Menu("Edit");</span>
 
        // --- Menu View
        <span class="bold">Menu menuView = new Menu("View");</span>
 
        <span class="bold">menuBar.getMenus().addAll(menuFile, menuEdit, menuView);</span>
 
 
        ((VBox) scene.getRoot()).getChildren().addAll(menuBar);
 
        stage.setScene(scene);
        stage.show();
    }
 
 
    private class PageData {
        public String name;
        public String description;
        public String binNames;
        public Image image;
        public PageData(String name, String description, String binNames) {
            this.name = name;
            this.description = description;
            this.binNames = binNames;
            image = new Image(getClass().getResourceAsStream(name + ".jpg"));
        }
    }
}
</pre></div>
<!-- class="example" -->
<p>Unlike other UI Controls, the <code>Menu</code> class and other extensions of the <code>MenuItem</code> class do not extend the <code>Node</code> class. They cannot be added directly to the application scene and remain invisible until added to the menu bar through the <code>getMenus</code> method.</p>
<div class="figure"><a id="BABBBEHI" name="BABBBEHI" class="anchor"></a><a id="JFXUI415" name="JFXUI415" class="anchor"></a>
<p class="titleinfigure">Figure 24-2 Menu Bar is Added to the Application</p>
<img width="420" height="391" src="img/menu-bar.png" alt="Description of Figure 24-2 follows" title="Description of Figure 24-2 follows" longdesc="img_text/menu-bar.htm" /><br />
<a id="sthref212" name="sthref212" href="img_text/menu-bar.htm">Description of "Figure 24-2 Menu Bar is Added to the Application"</a><br />
<br /></div>
<!-- class="figure" -->
<p>You can navigate through the menus by using the arrow keys of the keyboard. However, when you select a menu, no action is performed, because the behavior for the menus is not defined yet.</p>
</div>
<!-- class="sect1" -->
<a id="JFXUI416" name="JFXUI416" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref213" name="sthref213" class="anchor"></a>
<h2 class="sect1">Adding Menu Items</h2>
<p>Set the functionality for the File menu by adding the following items:</p>
<ul>
<li>
<p>Shuffle &#x2013; to load reference information about plants</p>
</li>
<li>
<p>Clear &#x2013; to remove the reference information and clear the scene</p>
</li>
<li>
<p>Separator &#x2013; to detach menu items</p>
</li>
<li>
<p>Exit &#x2013; to exit the application</p>
</li>
</ul>
<p>Bold lines in <a href="#BABCEFCH">Example 24-2</a> create a Shuffle menu by using the <code>MenuItem</code> class and add graphical components to the application scene. The <code>MenuItem</code> class enables creating an actionable item with text and graphics. The action performed on a user click is defined by the <code>setOnAction</code> method, similar to the <code>Button</code> class.</p>
<div class="example"><a id="BABCEFCH" name="BABCEFCH" class="anchor"></a><a id="JFXUI417" name="JFXUI417" class="anchor"></a>
<p class="titleinexample">Example 24-2 Adding the Shuffle Menu Item with Graphics</p>
<pre xml:space="preserve" class="oac_no_warn">import java.util.AbstractMap.SimpleEntry;
import java.util.Map.Entry;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.effect.DropShadow;
import javafx.scene.effect.Effect;
import javafx.scene.effect.Glow;
import javafx.scene.effect.SepiaTone;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.TextAlignment;
import javafx.stage.Stage;
 
public class MenuSample extends Application {
 
    final PageData[] pages = new PageData[] {
        new PageData("Apple",
            "The apple is the pomaceous fruit of the apple tree, species Malus "
            +"domestica in the rose family (Rosaceae). It is one of the most "
            +"widely cultivated tree fruits, and the most widely known of "
            +"the many members of genus Malus that are used by humans. "
            +"The tree originated in Western Asia, where its wild ancestor, "
            +"the Alma, is still found today.",
            "Malus domestica"),
        new PageData("Hawthorn",
            "The hawthorn is a large genus of shrubs and trees in the rose "
            + "family, Rosaceae, native to temperate regions of the Northern "
            + "Hemisphere in Europe, Asia and North America. "
            + "The name hawthorn was "
            + "originally applied to the species native to northern Europe, "
            + "especially the Common Hawthorn C. monogyna, and the unmodified "
            + "name is often so used in Britain and Ireland.",
            "Crataegus monogyna"),
        new PageData("Ivy",
            "The ivy is a flowering plant in the grape family (Vitaceae) native"
            +" to eastern Asia in Japan, Korea, and northern and eastern China."
            +" It is a deciduous woody vine growing to 30 m tall or more given "
            +"suitable support,  attaching itself by means of numerous small "
            +"branched tendrils tipped with sticky disks.",
            "Parthenocissus tricuspidata"),
        new PageData("Quince",
            "The quince is the sole member of the genus Cydonia and is native"
            +" to warm-temperate southwest Asia in the Caucasus region. The "
            +"immature fruit is green with dense grey-white pubescence, most "
            +"of which rubs off before maturity in late autumn when the fruit "
            +"changes color to yellow with hard, strongly perfumed flesh.",
            "Cydonia oblonga")
    };
 
    final String[] viewOptions = new String[] {
        "Title", 
        "Binomial name", 
        "Picture", 
        "Description"
    };
 
    final Entry&lt;String, Effect&gt;[] effects = new Entry[] {
        new SimpleEntry&lt;&gt;("Sepia Tone", new SepiaTone()),
        new SimpleEntry&lt;&gt;("Glow", new Glow()),
        new SimpleEntry&lt;&gt;("Shadow", new DropShadow())
    };
 
    final ImageView pic = new ImageView();
    final Label name = new Label();
    final Label binName = new Label();
    final Label description = new Label();
    <span class="bold">private int currentIndex = -1;</span>
 
    public static void main(String[] args) {
        launch(args);
    }
 
    @Override
    public void start(Stage stage) {
        stage.setTitle("Menu Sample");
        Scene scene = new Scene(new VBox(), 400, 350);
        scene.setFill(Color.OLDLACE);
 
        <span class="bold">name.setFont(new Font("Verdana Bold", 22));</span>
        <span class="bold">binName.setFont(new Font("Arial Italic", 10));</span>
        <span class="bold">pic.setFitHeight(150);</span>
        <span class="bold">pic.setPreserveRatio(true);</span>
        <span class="bold">description.setWrapText(true);</span>
        <span class="bold">description.setTextAlignment(TextAlignment.JUSTIFY);</span>
 
       <span class="bold"> shuffle();</span>
 
        MenuBar menuBar = new MenuBar();
 
        final VBox vbox = new VBox();
        vbox.setAlignment(Pos.CENTER);
        vbox.setSpacing(10);
        vbox.setPadding(new Insets(0, 10, 0, 10));
        vbox.getChildren().addAll(name, binName, pic, description);
 
        // --- Menu File
        <span class="bold">Menu menuFile = new Menu("File");</span>
        <span class="bold">MenuItem add = new MenuItem("Shuffle",</span>
            <span class="bold">new ImageView(new Image("menusample/new.png")));</span>
        <span class="bold">add.setOnAction((ActionEvent t) -&gt; {</span>
            <span class="bold">shuffle();</span>
            <span class="bold">vbox.setVisible(true);</span>
        <span class="bold">});</span>        
 
        <span class="bold">menuFile.getItems().addAll(add);</span>
 
        // --- Menu Edit
        Menu menuEdit = new Menu("Edit");
        
        // --- Menu View
        Menu menuView = new Menu("View");
        
        menuBar.getMenus().addAll(menuFile, menuEdit, menuView);
        ((VBox) scene.getRoot()).getChildren().addAll(menuBar, vbox);
        stage.setScene(scene);
        stage.show();
    }
 
    <span class="bold">private void shuffle() {</span>
        <span class="bold">int i = currentIndex;</span>
        <span class="bold">while (i == currentIndex) {</span>
            <span class="bold">i = (int) (Math.random() * pages.length);</span>
        <span class="bold">}</span>
        <span class="bold">pic.setImage(pages[i].image);</span>
        <span class="bold">name.setText(pages[i].name);</span>
        <span class="bold">binName.setText("(" + pages[i].binNames + ")");</span>
        <span class="bold">description.setText(pages[i].description);</span>
        <span class="bold">currentIndex = i;</span>
    <span class="bold">}</span>
 
    
    private class PageData {
        public String name;
        public String description;
        public String binNames;
        public Image image;
        public PageData(String name, String description, String binNames) {
            this.name = name;
            this.description = description;
            this.binNames = binNames;
            image = new Image(getClass().getResourceAsStream(name + ".jpg"));
        }
    }
}
</pre></div>
<!-- class="example" -->
<p>When a user selects the Shuffle menu item, the <code>shuffle</code> method called within <code>setOnAction</code> specifies the title, the binomial name, a picture of the plant, and its description by calculating the index of the elements in the corresponding arrays.</p>
<p>The Clear menu item is used to erase the application scene. You can implement this by making the <code>VBox</code> container with the GUI elements invisible as shown in <a href="#BABIGGAG">Example 24-3</a>.</p>
<div class="example"><a id="BABIGGAG" name="BABIGGAG" class="anchor"></a><a id="JFXUI418" name="JFXUI418" class="anchor"></a>
<p class="titleinexample">Example 24-3 Creating the Clear Menu Item with Accelerator</p>
<pre xml:space="preserve" class="oac_no_warn">MenuItem clear = new MenuItem("Clear");
clear.setAccelerator(KeyCombination.keyCombination("Ctrl+X"));
clear.setOnAction((ActionEvent t) -&gt; {
    vbox.setVisible(false);
});
</pre></div>
<!-- class="example" -->
<p>Implementation of the <code>MenuItem</code> class enables developers to set a menu accelerator, a key combination that performs the same action as the menu item. With the Clear menu, users can either select the action from the File menu category or press Control Key and X key simultaneously.</p>
<p>The Exit menu closes the application window. Set <code>System.exit(0)</code> as an action for this menu item as shown in <a href="#BABGIIGB">Example 24-4</a>.</p>
<div class="example"><a id="BABGIIGB" name="BABGIIGB" class="anchor"></a><a id="JFXUI419" name="JFXUI419" class="anchor"></a>
<p class="titleinexample">Example 24-4 Creating the Exit Menu Item</p>
<pre xml:space="preserve" class="oac_no_warn">MenuItem exit = new MenuItem("Exit");
exit.setOnAction((ActionEvent t) -&gt; {
    System.exit(0);
});
</pre></div>
<!-- class="example" -->
<p>Use the <code>getItems</code> method shown in <a href="#BABGAAIE">Example 24-5</a> to add the newly created menu items to the File menu. You can create a separator menu item and add it within the <code>getItems</code> method to visually detach the Exit menu item.</p>
<div class="example"><a id="BABGAAIE" name="BABGAAIE" class="anchor"></a><a id="JFXUI420" name="JFXUI420" class="anchor"></a>
<p class="titleinexample">Example 24-5 Adding Menu Items</p>
<pre xml:space="preserve" class="oac_no_warn">menuFile.getItems().addAll(add, clear, new SeparatorMenuItem(), exit);
</pre></div>
<!-- class="example" -->
<p>Add <a href="#BABCEFCH">Example 24-2</a>, <a href="#BABIGGAG">Example 24-3</a>, <a href="#BABGIIGB">Example 24-4</a>, and <a href="#BABGAAIE">Example 24-5</a> to the Menu Sample application, and then compile and run it. Select the Shuffle menu item to load reference information about different plants. Then clear the scene (Clear), and close the application (Exit). <a href="#BABCEEDA">Figure 24-3</a> shows selection of the Clear menu item.</p>
<div class="figure"><a id="BABCEEDA" name="BABCEEDA" class="anchor"></a><a id="JFXUI421" name="JFXUI421" class="anchor"></a>
<p class="titleinfigure">Figure 24-3 File Menu with Three Menu Items</p>
<img width="419" height="391" src="img/menu-file.png" alt="Description of Figure 24-3 follows" title="Description of Figure 24-3 follows" longdesc="img_text/menu-file.htm" /><br />
<a id="sthref214" name="sthref214" href="img_text/menu-file.htm">Description of "Figure 24-3 File Menu with Three Menu Items"</a><br />
<br /></div>
<!-- class="figure" -->
<p>With the View menu, you can hide and show elements of reference information. Implement the <code>createMenuItem</code> method and call it within the <code>start</code> method to create four <code>CheckMenuItem</code> objects. Then add newly created check menu items to the View menu to toggle visibility of the title, binomial name, picture of the plant, and its description. <a href="#BABJBEEB">Example 24-6</a> shows two code fragments that implement these tasks.</p>
<div class="example"><a id="BABJBEEB" name="BABJBEEB" class="anchor"></a><a id="JFXUI422" name="JFXUI422" class="anchor"></a>
<p class="titleinexample">Example 24-6 Applying the CheckMenuItem Class to Create Toggle Options</p>
<pre xml:space="preserve" class="oac_no_warn">// --- Creating four check menu items within the start method
CheckMenuItem titleView = createMenuItem ("Title", name);                                                       
CheckMenuItem binNameView = createMenuItem ("Binomial name", binName);        
CheckMenuItem picView = createMenuItem ("Picture", pic);        
CheckMenuItem descriptionView = createMenuItem ("Description", description);     
menuView.getItems().addAll(titleView, binNameView, picView, descriptionView);

...

// The createMenuItem method
private static CheckMenuItem createMenuItem (String title, final Node node){
    CheckMenuItem cmi = new CheckMenuItem(title);
    cmi.setSelected(true);
    cmi.selectedProperty().addListener(
        (ObservableValue&lt;? extends Boolean&gt; ov, Boolean old_val, 
        Boolean new_val) -&gt; {
            node.setVisible(new_val);
    });              
    return cmi;
}
</pre></div>
<!-- class="example" -->
<p>The <code>CheckMenuItem</code> class is an extension of the <code>MenuItem</code> class. It can be toggled between selected and deselected states. When selected, a check menu item shows a check mark.</p>
<p><a href="#BABJBEEB">Example 24-6</a> creates four <code>CheckMenuItem</code> objects and processes the changing of their <code>selectedProperty</code> property. When, for example, a user deselects the <code>picView</code> item, the <code>setVisible</code> method receives the <code>false</code> value, the picture of the plant becomes invisible. When you add this code fragment to the application, compile, and run the application, you can experiment with selecting and deselecting the menu items. <a href="#BABEHIEI">Figure 24-4</a> shows the application in the moment when the title and picture of the plant are shown, but its binomial name and description are hidden.</p>
<div class="figure"><a id="BABEHIEI" name="BABEHIEI" class="anchor"></a><a id="JFXUI423" name="JFXUI423" class="anchor"></a>
<p class="titleinfigure">Figure 24-4 Using Check Menu Items</p>
<img width="418" height="390" src="img/menu-check.png" alt="Description of Figure 24-4 follows" title="Description of Figure 24-4 follows" longdesc="img_text/menu-check.htm" /><br />
<a id="sthref215" name="sthref215" href="img_text/menu-check.htm">Description of "Figure 24-4 Using Check Menu Items"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect1" -->
<a id="JFXUI424" name="JFXUI424" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref216" name="sthref216" class="anchor"></a>
<h2 class="sect1">Creating Submenus</h2>
<p>For the Edit menu, define two menu items: Picture Effect and No Effects. The Picture Effect menu item is designed as a submenu with three items to set one of the three available visual effects. The No Effects menu item removes the selected effect and restores the initial state of the image.</p>
<p>Use the <code>RadioMenuItem</code> class to create the items of the submenu. Add the radio menu buttons to a toggle group to make the selection mutually exclusive. <a href="#BABBHGCE">Example 24-7</a> implements these tasks.</p>
<div class="example"><a id="BABBHGCE" name="BABBHGCE" class="anchor"></a><a id="JFXUI425" name="JFXUI425" class="anchor"></a>
<p class="titleinexample">Example 24-7 Creating a Submenu with Radio Menu Items</p>
<pre xml:space="preserve" class="oac_no_warn">//Picture Effect menu
Menu menuEffect = new Menu("Picture Effect");
final ToggleGroup groupEffect = new ToggleGroup();
for (Entry&lt;String, Effect&gt; effect : effects) {
    RadioMenuItem itemEffect = new RadioMenuItem(effect.getKey());
    itemEffect.setUserData(effect.getValue());
    itemEffect.setToggleGroup(groupEffect);
    menuEffect.getItems().add(itemEffect);
}
//No Effects menu
final MenuItem noEffects = new MenuItem("No Effects");

noEffects.setOnAction((ActionEvent t) -&gt; {
    pic.setEffect(null);
    groupEffect.getSelectedToggle().setSelected(false);
});

//Processing menu item selection
groupEffect.selectedToggleProperty().addListener(new ChangeListener&lt;Toggle&gt;() {
    public void changed(ObservableValue&lt;? extends Toggle&gt; ov,
        Toggle old_toggle, Toggle new_toggle) {
            if (groupEffect.getSelectedToggle() != null) {
                Effect effect = 
                    (Effect) groupEffect.getSelectedToggle().getUserData();
                pic.setEffect(effect);
            }
        }
 });
groupEffect.selectedToggleProperty().addListener(
    (ObservableValue&lt;? extends Toggle&gt; ov, Toggle old_toggle, 
    Toggle new_toggle) -&gt; {
        if (groupEffect.getSelectedToggle() != null) {
             Effect effect = 
                 (Effect) groupEffect.getSelectedToggle().getUserData();
             pic.setEffect(effect);
        }
});

//Adding items to the Edit menu
menuEdit.getItems().addAll(menuEffect, noEffects);
</pre></div>
<!-- class="example" -->
<p>The <code>setUserData</code> method defines a visual effect for a particular radio menu item. When one of the items in the toggle group is selected, the corresponding effect is applied to the picture. When the No Effects menu item is selected, the <code>setEffect</code> method specifies the <code>null</code> value and no effects are applied to the picture.</p>
<p><a href="#BABGHDJB">Figure 24-5</a> captures a moment when a user is selecting a Shadow menu item.</p>
<div class="figure"><a id="BABGHDJB" name="BABGHDJB" class="anchor"></a><a id="JFXUI426" name="JFXUI426" class="anchor"></a>
<p class="titleinfigure">Figure 24-5 Submenu with Three Radio Menu Items</p>
<img width="419" height="391" src="img/menu-effect.png" alt="Description of Figure 24-5 follows" title="Description of Figure 24-5 follows" longdesc="img_text/menu-effect.htm" /><br />
<a id="sthref217" name="sthref217" href="img_text/menu-effect.htm">Description of "Figure 24-5 Submenu with Three Radio Menu Items"</a><br />
<br /></div>
<!-- class="figure" -->
<p>When the <code>DropShadow</code> effect is applied to the picture, it looks as shown in <a href="#BABIEAJD">Figure 24-6</a>.</p>
<div class="figure"><a id="BABIEAJD" name="BABIEAJD" class="anchor"></a><a id="JFXUI427" name="JFXUI427" class="anchor"></a>
<p class="titleinfigure">Figure 24-6 Picture of Quince with a DropShadow Effect Applied</p>
<img width="419" height="391" src="img/menu-shadow.png" alt="Description of Figure 24-6 follows" title="Description of Figure 24-6 follows" longdesc="img_text/menu-shadow.htm" /><br />
<a id="sthref218" name="sthref218" href="img_text/menu-shadow.htm">Description of "Figure 24-6 Picture of Quince with a DropShadow Effect Applied"</a><br />
<br /></div>
<!-- class="figure" -->
<p>You can use the <code>setDisable</code> method of the <code>MenuItem</code> class to disable the No Effects menu when none of the effects are selected in the Picture Effect submenu. Modify <a href="#BABBHGCE">Example 24-7</a> as shown in <a href="#BABBJBGF">Example 24-8</a>.</p>
<div class="example"><a id="BABBJBGF" name="BABBJBGF" class="anchor"></a><a id="JFXUI428" name="JFXUI428" class="anchor"></a>
<p class="titleinexample">Example 24-8 Disabling a Menu Item</p>
<pre xml:space="preserve" class="oac_no_warn">Menu menuEffect = new Menu("Picture Effect");
final ToggleGroup groupEffect = new ToggleGroup();
for (Entry&lt;String, Effect&gt; effect : effects) {
     RadioMenuItem itemEffect = new RadioMenuItem(effect.getKey());
     itemEffect.setUserData(effect.getValue());
     itemEffect.setToggleGroup(groupEffect);
     menuEffect.getItems().add(itemEffect);
}
final MenuItem noEffects = new MenuItem("No Effects");
<span class="bold">noEffects.setDisable(true);</span>
noEffects.setOnAction((ActionEvent t) -&gt; {
    pic.setEffect(null);
    groupEffect.getSelectedToggle().setSelected(false);
    <span class="bold">noEffects.setDisable(true);</span>
});

groupEffect.selectedToggleProperty().addListener(
    (ObservableValue&lt;? extends Toggle&gt; ov, Toggle old_toggle, 
    Toggle new_toggle) -&gt; {
        if (groupEffect.getSelectedToggle() != null) {
            Effect effect = 
                (Effect) groupEffect.getSelectedToggle().getUserData();
            pic.setEffect(effect);
            <span class="bold">noEffects.setDisable(false);</span>
        } else {
                <span class="bold">noEffects.setDisable(true);</span>
            }
});
        
menuEdit.getItems().addAll(menuEffect, noEffects);
</pre></div>
<!-- class="example" -->
<p>When none of the <code>RadioMenuItem</code> options are selected, the No Effect menu item is disabled as shown in <a href="#BABJJDAF">Figure 24-7</a>. When a user selects one of the visual effects, the No Effects menu item is enabled.</p>
<div class="figure"><a id="BABJJDAF" name="BABJJDAF" class="anchor"></a><a id="JFXUI429" name="JFXUI429" class="anchor"></a>
<p class="titleinfigure">Figure 24-7 Effect Menu Item Is Disabled</p>
<img width="421" height="390" src="img/menu-disabled.png" alt="Description of Figure 24-7 follows" title="Description of Figure 24-7 follows" longdesc="img_text/menu-disabled.htm" /><br />
<a id="sthref219" name="sthref219" href="img_text/menu-disabled.htm">Description of "Figure 24-7 Effect Menu Item Is Disabled"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect1" -->
<a id="JFXUI430" name="JFXUI430" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref220" name="sthref220" class="anchor"></a>
<h2 class="sect1">Adding Context Menus</h2>
<p>When you cannot allocate any space of your user interface for a required functionality, you can use a context menu. A context menu is a pop-up window that appears in response to a mouse click. A context menu can contain one or more menu items.</p>
<p>In the Menu Sample application, set a context menu for the picture of the plant, so that users can copy the image.</p>
<p>Use the <code>ContextMenu</code> class to define the context menu as shown in <a href="#BABEIGGJ">Example 24-9</a>.</p>
<div class="example"><a id="BABEIGGJ" name="BABEIGGJ" class="anchor"></a><a id="JFXUI431" name="JFXUI431" class="anchor"></a>
<p class="titleinexample">Example 24-9 Defining a Context Menu</p>
<pre xml:space="preserve" class="oac_no_warn">final ContextMenu cm = new ContextMenu();
MenuItem cmItem1 = new MenuItem("Copy Image");
cmItem1.setOnAction((ActionEvent e) -&gt; {
    Clipboard clipboard = Clipboard.getSystemClipboard();
    ClipboardContent content = new ClipboardContent();
    content.putImage(pic.getImage());
    clipboard.setContent(content);
});

cm.getItems().add(cmItem1);
pic.addEventHandler(MouseEvent.MOUSE_CLICKED, (MouseEvent e) -&gt; {
    if (e.getButton() == MouseButton.SECONDARY)
       cm.show(pic, e.getScreenX(), e.getScreenY());
});
</pre></div>
<!-- class="example" -->
<p>When a user right clicks the <code>ImageView</code> object, the <code>show</code> method is called for the context menu to enable its showing.</p>
<p>The <code>setOnAction</code> method defined for the Copy Image item of the context menu creates a <code>Clipboard</code> object and adds the image as its content. <a href="#BABJIHIA">Figure 24-8</a> captures a moment when a user is selecting the Copy Image context menu item.</p>
<div class="figure"><a id="BABJIHIA" name="BABJIHIA" class="anchor"></a><a id="JFXUI432" name="JFXUI432" class="anchor"></a>
<p class="titleinfigure">Figure 24-8 Using the Context Menu</p>
<img width="419" height="390" src="img/menu-context.png" alt="Description of Figure 24-8 follows" title="Description of Figure 24-8 follows" longdesc="img_text/menu-context.htm" /><br />
<a id="sthref221" name="sthref221" href="img_text/menu-context.htm">Description of "Figure 24-8 Using the Context Menu"</a><br />
<br /></div>
<!-- class="figure" -->
<p>You can try to copy the image and paste it into in a graphical editor.</p>
<p>For further enhancements, you can add more menu items to the context menu and specify different actions. You can also create a custom menu by using the <code>CustomMenuItem</code> class. With this class you can embed an arbitrary node within a menu and specify, for example, a button or a slider as a menu item.</p>
<p class="itemizedlisttitle">Related API Documentation&nbsp;</p>
<ul>
<li>
<p><a href="../api/javafx/scene/control/Menu.html"><code>Menu</code></a></p>
</li>
<li>
<p><a href="../api/javafx/scene/control/MenuItem.html"><code>MenuItem</code></a></p>
</li>
<li>
<p><a href="../api/javafx/scene/control/RadioMenuItem.html"><code>RadioMenuItem</code></a></p>
</li>
<li>
<p><a href="../api/javafx/scene/control/CheckMenuItem.html"><code>CheckMenuItem</code></a></p>
</li>
<li>
<p><a href="../api/javafx/scene/control/ContextMenu.html"><code>ContextMenu</code></a></p>
</li>
<li>
<p><a href="../api/javafx/scene/control/SeparatorMenuItem.html"><code>SeparatorMenuItem</code></a></p>
</li>
<li>
<p><a href="../api/javafx/scene/control/CustomMenuItem.html"><code>CustomMenuItem</code></a></p>
</li>
</ul>
</div>
<!-- class="sect1" -->

</article>

<div id=rightslider>


<!--/*///////////////////////////////////////////////////////////////////////
PANEL 1 /* table of contents */
///////////////////////////////////////////////////////////////////////*/-->

<div id="panel1" class="panel shadow">
<div class="panellists">
<div style="float:right;"><a href="#" id="X"><img src="../../assets/img-common/X.png"   alt="Close Window" title="Close Table of Contents Window" /></a></div>
	<h3>Table of Contents</h3>
		<script type="text/javascript" src="../../assets/js/tree.menu.js" >

/***********************************************
* Simple Tree Menu - (c) Dynamic Drive DHTML code library (www.dynamicdrive.com)
* This notice MUST stay intact for legal use
* Visit Dynamic Drive at http://www.dynamicdrive.com/ for full source code
***********************************************/

/*http://www.dynamicdrive.com/dynamicindex1/navigate1.htm*/
</script>

<h2>JavaFX: Working with JavaFX UI Components</h2>

<a href="javascript:ddtreemenu.flatten('treemenu1', 'expand')">Expand</a> | <a href="javascript:ddtreemenu.flatten('treemenu1', 'contact')">Collapse</a>

<ul id="treemenu1" class="treeview">
    <li><a href="title.htm#top">Title and Copyright Information</a></li>
    <li><a href="preface.htm#sthref2">Preface</a>
      <ul>
        <li><a href="preface.htm#sthref3">Audience</a></li>
        <li><a href="preface.htm#sthref4">Documentation Accessibility</a></li>
        <li><a href="preface.htm#sthref6">Related Documents</a></li>
        <li><a href="preface.htm#sthref7">Conventions</a></li>
      </ul>
    </li>
    <li><a href="ui_components.htm#JFXUI101">Part I About This Tutorial</a>
    <ul>
    <li><a href="whatsnew.htm#JFXUI781">1 What Is New</a></li>
</ul>
</li>
    <li><a href="ui_controls.htm#JFXUI336">Part II Using JavaFX UI Controls</a>
    <ul>
    <li><a href="label.htm#CIHHFIBJ">2 Label</a>
      <ul>
        <li><a href="label.htm#sthref10">Creating a Label</a></li>
        <li><a href="label.htm#sthref12">Setting a Font</a></li>
        <li><a href="label.htm#sthref13">Wrapping Text</a></li>
        <li><a href="label.htm#sthref15">Applying Effects</a></li>
      </ul>
    </li>
    <li><a href="button.htm#CJHEEACB">3 Button</a>
      <ul>
        <li><a href="button.htm#sthref19">Creating a Button</a></li>
        <li><a href="button.htm#sthref22">Assigning an Action</a></li>
        <li><a href="button.htm#sthref23">Applying Effects</a></li>
        <li><a href="button.htm#sthref25">Styling a Button</a></li>
      </ul>
    </li>
    <li><a href="radio-button.htm#BABBJBDA">4 Radio Button</a>
      <ul>
        <li><a href="radio-button.htm#sthref29">Creating a Radio Button</a></li>
        <li><a href="radio-button.htm#sthref30">Adding Radio Buttons to Groups</a></li>
        <li><a href="radio-button.htm#sthref32">Processing Events for Radio Buttons</a></li>
        <li><a href="radio-button.htm#sthref33">Requesting Focus for a Radio Button</a></li>
      </ul>
    </li>
    <li><a href="toggle-button.htm#CACJDICF">5 Toggle Button</a>
      <ul>
        <li><a href="toggle-button.htm#sthref38">Creating a Toggle Button</a></li>
        <li><a href="toggle-button.htm#sthref39">Adding Toggle Buttons to a Group</a></li>
        <li><a href="toggle-button.htm#sthref41">Setting the Behavior</a></li>
        <li><a href="toggle-button.htm#sthref43">Styling Toggle Buttons</a></li>
      </ul>
    </li>
    <li><a href="checkbox.htm#CHDFEJCD">6 Checkbox</a>
      <ul>
        <li><a href="checkbox.htm#sthref47">Creating Checkboxes</a></li>
        <li><a href="checkbox.htm#sthref48">Defining a State</a></li>
        <li><a href="checkbox.htm#sthref50">Setting the Behavior</a></li>
      </ul>
    </li>
    <li><a href="choice-box.htm#BCEDJAEH">7 Choice Box</a>
      <ul>
        <li><a href="choice-box.htm#sthref54">Creating a Choice Box</a></li>
        <li><a href="choice-box.htm#sthref56">Setting the Behavior for a Choice Box</a></li>
        <li><a href="choice-box.htm#sthref59">Applying a Tooltip</a></li>
      </ul>
    </li>
    <li><a href="text-field.htm#BABBCEIG">8 Text Field</a>
      <ul>
        <li><a href="text-field.htm#sthref63">Creating a Text Field</a></li>
        <li><a href="text-field.htm#sthref64">Building the UI with Text Fields</a></li>
        <li><a href="text-field.htm#sthref67">Processing Text Field Data</a></li>
      </ul>
    </li>
    <li><a href="password-field.htm#BABIDAGF">9 Password Field</a>
      <ul>
        <li><a href="password-field.htm#sthref71">Creating a Password Field</a></li>
        <li><a href="password-field.htm#sthref73">Evaluating the Password</a></li>
      </ul>
    </li>
    <li><a href="scrollbar.htm#BGBEGJDE">10 Scroll Bar</a>
      <ul>
        <li><a href="scrollbar.htm#sthref78">Creating a Scroll Bar</a></li>
        <li><a href="scrollbar.htm#sthref79">Using a Scroll Bar in Your Application</a></li>
      </ul>
    </li>
    <li><a href="scrollpane.htm#CBBFFBCH">11 Scroll Pane</a>
      <ul>
        <li><a href="scrollpane.htm#sthref83">Creating a Scroll Pane</a></li>
        <li><a href="scrollpane.htm#sthref84">Setting the Scroll Bar Policy for a Scroll Pane</a></li>
        <li><a href="scrollpane.htm#sthref86">Resizing Components in the Scroll Pane</a></li>
        <li><a href="scrollpane.htm#sthref89">Sample Application with a Scroll Pane</a></li>
      </ul>
    </li>
    <li><a href="list-view.htm#CEGGEDBF">12 List View</a>
      <ul>
        <li><a href="list-view.htm#sthref93">Creating a List View</a></li>
        <li><a href="list-view.htm#sthref96">Populating a List View with Data</a></li>
        <li><a href="list-view.htm#sthref98">Customizing the Content of a List View</a></li>
        <li><a href="list-view.htm#sthref100">Processing the List Item Selection</a></li>
      </ul>
    </li>
    <li><a href="table-view.htm#CJABIEED">13 Table View</a>
      <ul>
        <li><a href="table-view.htm#sthref104">Creating a Table</a></li>
        <li><a href="table-view.htm#sthref107">Defining the Data Model</a></li>
        <li><a href="table-view.htm#sthref109">Adding New Rows</a></li>
        <li><a href="table-view.htm#sthref112">Sorting Data in Columns</a></li>
        <li><a href="table-view.htm#sthref114">Editing Data in the Table</a></li>
        <li><a href="table-view.htm#sthref117">Adding Maps of Data to the Table</a></li>
      </ul>
    </li>
    <li><a href="tree-view.htm#JFXUI377">14 Tree View</a>
      <ul>
        <li><a href="tree-view.htm#sthref121">Creating Tree Views</a></li>
        <li><a href="tree-view.htm#sthref123">Implementing Cell Factories</a></li>
        <li><a href="tree-view.htm#sthref126">Adding New Tree Items on Demand</a></li>
        <li><a href="tree-view.htm#sthref129">Using Tree Cell Editors</a></li>
      </ul>
    </li>
    <li><a href="tree-table-view.htm#JFXUI833">15 Tree Table View</a>
      <ul>
        <li><a href="tree-table-view.htm#sthref135">Creating a TreeTableView control</a></li>
        <li><a href="tree-table-view.htm#sthref137">Adding Several Columns</a></li>
        <li><a href="tree-table-view.htm#sthref139">Altering Visual Appearance</a></li>
        <li><a href="tree-table-view.htm#sthref142">Managing Selection Mode</a></li>
      </ul>
    </li>
    <li><a href="combo-box.htm#BABEFEJC">16 Combo Box</a>
      <ul>
        <li><a href="combo-box.htm#sthref147">Creating Combo Boxes</a></li>
        <li><a href="combo-box.htm#sthref151">Editable Combo Boxes</a></li>
        <li><a href="combo-box.htm#sthref154">Applying Cell Factories to Combo Boxes</a></li>
      </ul>
    </li>
    <li><a href="separator.htm#BGBCFDFI">17 Separator</a>
      <ul>
        <li><a href="separator.htm#sthref157">Creating a Separator</a></li>
        <li><a href="separator.htm#sthref159">Adding Separators to the UI of Your Application</a></li>
        <li><a href="separator.htm#sthref161">Styling Separators</a></li>
      </ul>
    </li>
    <li><a href="slider.htm#CCHFBJCH">18 Slider</a>
      <ul>
        <li><a href="slider.htm#sthref165">Creating a Slider</a></li>
        <li><a href="slider.htm#sthref166">Using Sliders in Graphical Applications</a></li>
      </ul>
    </li>
    <li><a href="progress.htm#CHDDJAJE">19 Progress Bar and Progress Indicator</a>
      <ul>
        <li><a href="progress.htm#sthref170">Creating Progress Controls</a></li>
        <li><a href="progress.htm#sthref172">Indicating Progress in Your User Interface</a></li>
      </ul>
    </li>
    <li><a href="hyperlink.htm#CIHGADBG">20 Hyperlink</a>
      <ul>
        <li><a href="hyperlink.htm#sthref176">Creating a Hyperlink</a></li>
        <li><a href="hyperlink.htm#sthref177">Linking the Local Content</a></li>
        <li><a href="hyperlink.htm#sthref180">Linking the Remote Content</a></li>
      </ul>
    </li>
    <li><a href="editor.htm#JFXUI346">21 HTML Editor</a>
      <ul>
        <li><a href="editor.htm#sthref184">Adding an HTML Editor</a></li>
        <li><a href="editor.htm#sthref187">Using an HTML Editor to Build the User Interface</a></li>
        <li><a href="editor.htm#sthref189">Obtaining HTML Content</a></li>
      </ul>
    </li>
    <li><a href="tooltip.htm#BABBIJBJ">22 Tooltip</a>
      <ul>
        <li><a href="tooltip.htm#sthref194">Creating a Tooltip</a></li>
        <li><a href="tooltip.htm#sthref196">Presenting Application Data in Tooltips</a></li>
      </ul>
    </li>
    <li><a href="accordion-titledpane.htm#JFXUI356">23 Titled Pane and Accordion</a>
      <ul>
        <li><a href="accordion-titledpane.htm#sthref200">Creating Titled Panes</a></li>
        <li><a href="accordion-titledpane.htm#sthref203">Adding Titled Panes to an Accordion</a></li>
        <li><a href="accordion-titledpane.htm#sthref205">Processing Events for an Accordion with Titled Panes</a></li>
      </ul>
    </li>
    <li><a class="selected" href="menu_controls.htm#JFXUI409">24 Menu</a>
      <ul>
        <li><a href="menu_controls.htm#sthref210">Building Menus in JavaFX Applications</a></li>
        <li><a href="menu_controls.htm#sthref211">Creating a Menu Bar</a></li>
        <li><a href="menu_controls.htm#sthref213">Adding Menu Items</a></li>
        <li><a href="menu_controls.htm#sthref216">Creating Submenus</a></li>
        <li><a href="menu_controls.htm#sthref220">Adding Context Menus</a></li>
      </ul>
    </li>
    <li><a href="color-picker.htm#JFXUI433">25 Color Picker</a>
      <ul>
        <li><a href="color-picker.htm#sthref223">Design Overview</a>
          <ul>
          <li><a href="color-picker.htm#sthref225">Color Chooser</a></li>
          <li><a href="color-picker.htm#sthref227">Color Palette</a></li>
          <li><a href="color-picker.htm#sthref230">Custom Color Dialog Window</a></li>
          </ul>
        </li>
        <li><a href="color-picker.htm#JFXUI445">Using a Color Picker</a></li>
        <li><a href="color-picker.htm#JFXUI452">Changing the Appearance of a Color Picker</a></li>
      </ul>
    </li>
    <li><a href="date-picker.htm#JFXUI808">26 Date Picker</a>
      <ul>
        <li><a href="date-picker.htm#sthref238">Working with Time Data and Date Formats</a></li>
        <li><a href="date-picker.htm#sthref239">Date Picker Design Overview</a></li>
        <li><a href="date-picker.htm#sthref241">Adding a Date Picker to an Application UI</a></li>
        <li><a href="date-picker.htm#sthref244">Customizing the Date Picker</a></li>
        <li><a href="date-picker.htm#sthref250">Altering the Calendar System</a></li>
      </ul>
    </li>
    <li><a href="pagination.htm#JFXUI459">27 Pagination Control</a>
      <ul>
        <li><a href="pagination.htm#sthref254">Creating a Pagination Control</a></li>
        <li><a href="pagination.htm#sthref257">Implementing Page Factories</a></li>
        <li><a href="pagination.htm#sthref262">Styling a Pagination Control</a></li>
      </ul>
    </li>
    <li><a href="file-chooser.htm#CCHICECF">28 File Chooser</a>
      <ul>
        <li><a href="file-chooser.htm#sthref266">Opening Files</a></li>
        <li><a href="file-chooser.htm#sthref272">Configuring a File Chooser</a></li>
        <li><a href="file-chooser.htm#sthref274">Setting Extension Filters</a></li>
        <li><a href="file-chooser.htm#sthref276">Saving Files</a></li>
      </ul>
    </li>
    <li><a href="custom.htm#JFXUI493">29 Customization of UI Controls</a>
      <ul>
        <li><a href="custom.htm#sthref280">Applying CSS</a></li>
        <li><a href="custom.htm#sthref285">Altering Default Behavior</a></li>
        <li><a href="custom.htm#sthref288">Implementing Cell Factories</a></li>
      </ul>
    </li>
    <li><a href="embed.htm#JFXUI785">30 UI Controls on the Embedded Platforms</a>
      <ul>
        <li><a href="embed.htm#sthref292">Embedded Runtime Features</a>
          <ul>
          <li><a href="embed.htm#sthref293">Support for Touch-Enabled Devices</a></li>
          <li><a href="embed.htm#sthref294">Virtual Keyboard</a></li>
          </ul>
        </li>
        <li><a href="embed.htm#sthref301">Appearance of UI Controls on Embedded Platforms</a>
          <ul>
          <li><a href="embed.htm#sthref302">Scrolling Controls</a></li>
          <li><a href="embed.htm#sthref304">Text Input Controls</a></li>
          <li><a href="embed.htm#sthref306">Context Menus</a></li>
          </ul>
        </li>
        <li><a href="embed.htm#sthref309">UI Controls Features Available on the Embedded Platforms</a></li>
        <li><a href="embed.htm#sthref311">UI Controls Features That Are Not Available on Embedded Touch Platforms</a></li>
        <li><a href="embed.htm#sthref312">Other Features That Are Not Available on Embedded Touch Platforms</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="charts.htm#JFXUI577">Part III Working with JavaFX Charts</a>
    <ul>
    <li><a href="pie-chart.htm#CIHFDADD">31 Pie Chart</a>
      <ul>
        <li><a href="pie-chart.htm#sthref314">Creating a Pie Chart</a></li>
        <li><a href="pie-chart.htm#sthref316">Setting a Pie Chart and a Legend</a></li>
        <li><a href="pie-chart.htm#sthref319">Processing Events for a Pie Chart</a></li>
      </ul>
    </li>
    <li><a href="line-chart.htm#CIHGBCFI">32 Line Chart</a>
      <ul>
        <li><a href="line-chart.htm#sthref323">Chart Settings</a></li>
        <li><a href="line-chart.htm#sthref324">Chart Data</a></li>
        <li><a href="line-chart.htm#sthref325">Creating a Line Chart</a></li>
        <li><a href="line-chart.htm#sthref327">Creating Categories for a Line Chart</a></li>
        <li><a href="line-chart.htm#sthref329">Adding Series to the Line Chart</a></li>
      </ul>
    </li>
    <li><a href="area-chart.htm#CIHCFGBA">33 Area Chart</a>
      <ul>
        <li><a href="area-chart.htm#sthref334">Creating an Area Chart</a></li>
        <li><a href="area-chart.htm#sthref336">Creating a Stacked Area Chart</a></li>
        <li><a href="area-chart.htm#sthref338">Setting Axis and Tick Properties</a></li>
        <li><a href="area-chart.htm#sthref342">Adding Negative Values</a></li>
        <li><a href="area-chart.htm#sthref344">Styling Area Charts</a></li>
      </ul>
    </li>
    <li><a href="bubble-chart.htm#CHDHAFHB">34 Bubble Chart</a>
      <ul>
        <li><a href="bubble-chart.htm#sthref348">Creating a Bubble Chart</a></li>
        <li><a href="bubble-chart.htm#sthref351">Using the Extra Value Property</a></li>
        <li><a href="bubble-chart.htm#sthref353">Changing the Appearance Visual Setting of the Plot and Tick Marks</a></li>
      </ul>
    </li>
    <li><a href="scatter-chart.htm#CIHDEACI">35 Scatter Chart</a>
      <ul>
        <li><a href="scatter-chart.htm#sthref357">Creating a Scatter Chart</a></li>
        <li><a href="scatter-chart.htm#sthref359">Managing Chart Data</a></li>
        <li><a href="scatter-chart.htm#sthref361">Adding Effects to Charts</a></li>
        <li><a href="scatter-chart.htm#sthref363">Changing the Chart Symbol</a></li>
      </ul>
    </li>
    <li><a href="bar-chart.htm#CIHJFHDE">36 Bar Chart</a>
      <ul>
        <li><a href="bar-chart.htm#sthref367">Creating a Bar Chart</a></li>
        <li><a href="bar-chart.htm#sthref369">Horizontal Bar Chart</a></li>
        <li><a href="bar-chart.htm#sthref371">Creating a Stacked Bar Chart</a></li>
        <li><a href="bar-chart.htm#sthref374">Animating Data in Charts</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="css_tutorial.htm#JFXUI733">Part IV Skinning JavaFX Applications with CSS</a>
    <ul>
    <li><a href="apply-css.htm#JFXUI714">37 Styling UI Controls with CSS</a>
      <ul>
        <li><a href="apply-css.htm#sthref378">Default Style Sheet</a></li>
        <li><a href="apply-css.htm#sthref380">Creating Style Sheets</a></li>
        <li><a href="apply-css.htm#sthref381">Defining Styles</a>
          <ul>
          <li><a href="apply-css.htm#sthref382">Selectors</a></li>
          <li><a href="apply-css.htm#sthref383">Rules and Properties</a></li>
          </ul>
        </li>
        <li><a href="apply-css.htm#sthref384">Skinning the Scene</a></li>
        <li><a href="apply-css.htm#sthref385">Skinning Controls</a>
          <ul>
          <li><a href="apply-css.htm#sthref386">Overriding Default Styles</a></li>
          <li><a href="apply-css.htm#sthref388">Creating Class Styles</a></li>
          <li><a href="apply-css.htm#sthref390">Creating ID Styles</a></li>
          <li><a href="apply-css.htm#sthref392">Setting Styles in the Code</a></li>
          </ul>
        </li>
        <li><a href="apply-css.htm#sthref394">Additional Resources</a></li>
      </ul>
    </li>
    <li><a href="css-styles.htm#JFXUI672">38 Styling Charts with CSS</a>
      <ul>
        <li><a href="css-styles.htm#sthref395">Modifying Basic Chart Elements</a></li>
        <li><a href="css-styles.htm#sthref401">Altering Colors of the Chart Plot</a></li>
        <li><a href="css-styles.htm#sthref404">Setting the Axes</a></li>
        <li><a href="css-styles.htm#sthref407">Setting Chart Colors</a></li>
        <li><a href="css-styles.htm#sthref413">Changing Chart Symbols</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="text.htm#JFXUI734">Part V Working with Text in JavaFX Applications</a>
    <ul>
    <li><a href="text-settings.htm#JFXUI735">39 Using Text in JavaFX</a>
      <ul>
        <li><a href="text-settings.htm#sthref417">Introduction</a></li>
        <li><a href="text-settings.htm#sthref418">Adding Text</a>
          <ul>
          <li><a href="text-settings.htm#sthref420">Setting Text Font and Color</a></li>
          <li><a href="text-settings.htm#sthref422">Making Text Bold or Italic</a></li>
          <li><a href="text-settings.htm#sthref423">Using Custom Fonts</a></li>
          <li><a href="text-settings.htm#sthref425">Setting LCD Text Support</a></li>
          <li><a href="text-settings.htm#sthref426">Rich Text and Bidirectional Support</a></li>
          </ul>
        </li>
      </ul>
    </li>
    <li><a href="text-effects.htm#JFXUI773">40 Applying Effects to Text</a>
      <ul>
        <li><a href="text-effects.htm#sthref429">Perspective Effect</a></li>
        <li><a href="text-effects.htm#sthref431">Blur Effect</a></li>
        <li><a href="text-effects.htm#sthref433">Drop Shadow Effect</a></li>
        <li><a href="text-effects.htm#sthref435">Inner Shadow Effect</a></li>
        <li><a href="text-effects.htm#sthref437">Reflection</a></li>
        <li><a href="text-effects.htm#sthref439">Combining Several Effects</a></li>
        <li><a href="text-effects.htm#sthref441">Application Files</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="samples.htm#sthref444">Part VI Source Code for the UI Components Tutorials</a>
    <ul>
    <li><a href="ui_controls_samples.htm#sthref445">A UI Control Samples</a>
      <ul>
        <li><a href="ui_controls_samples.htm#JFXUI870">LabelSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI871">ButtonSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI872">RadioButtonSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI873">ToggleButtonSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI874">CheckboxSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI875">ChoiceBoxSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI876">TextFieldSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI877">PasswordField.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI878">ScrollBarSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI879">ScrollPaneSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI880">ListViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI881">TableViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI882">TreeViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI883">TreeTableViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI884">ComboBoxSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI885">SeparatorSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI886">SliderSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI887">ProgressSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI888">HyperlinkSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI889">HyperlinkWebViewSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI890">HTMLEditorSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI891">TooltipSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI892">TitledPaneSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI893">MenuSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI894">ColorPickerSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI895">DatePickerSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI896">PaginationSample.java</a></li>
        <li><a href="ui_controls_samples.htm#JFXUI897">FileChooserSample.java</a></li>
      </ul>
    </li>
    <li><a href="chart_samples.htm#JFXUI898">B Chart Samples</a>
      <ul>
        <li><a href="chart_samples.htm#JFXUI900">PieChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI901">LineChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI902">AreaChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI903">BubbleChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI904">ScatterChartSample.java</a></li>
        <li><a href="chart_samples.htm#JFXUI905">BarChartSample.java</a></li>
      </ul>
    </li>
    <li><a href="css_samples.htm#sthref446">C CSS Samples</a>
      <ul>
        <li><a href="css_samples.htm#JFXUI908">DownloadButton.java</a></li>
        <li><a href="css_samples.htm#JFXUI909">DownloadButtonStyle1.css</a></li>
        <li><a href="css_samples.htm#JFXUI910">DownloadButtonStyle2.css</a></li>
        <li><a href="css_samples.htm#JFXUI911">StyleStage.java</a></li>
        <li><a href="css_samples.htm#JFXUI912">UIControlCSS.java</a></li>
        <li><a href="css_samples.htm#JFXUI913">controlStyle1.css</a></li>
        <li><a href="css_samples.htm#JFXUI914">controlStyle2.css</a></li>
      </ul>
    </li>
    <li><a href="text_samples.htm#sthref447">D Text Samples</a>
      <ul>
        <li><a href="text_samples.htm#JFXUI917">TextEffects.java</a></li>
        <li><a href="text_samples.htm#JFXUI920">NeonSign.java</a></li>
      </ul>
    </li>
</ul>

</li>
</ul>


<script type="text/javascript">

//ddtreemenu.createTree(treeid, enablepersist, opt_persist_in_days (default is 1))

ddtreemenu.createTree("treemenu1", true)
//ddtreemenu.createTree("treemenu2", false)

</script>
</div>
<div style="clear:both;"></div>
</div>


<!--/*///////////////////////////////////////////////////////////////////////
TABS 
///////////////////////////////////////////////////////////////////////*/-->

<a class="trig1 trigger shadow" alt="Table of Contents" title="Contents" href="#"></a>

</div>

<div id="pagenav2"><a class="button" title="Previous Page" href="accordion-titledpane.htm">Previous Page</a><a href="#top"  class="button" title="Top of Page" target="_self">Top of Page</a><a class="button" title="Next Page" href="color-picker.htm">Next Page</a></div>

<br class="clearfloat" />
<span class="clearfloat"></span>
</div> <!-- .contentarea -->
</div> <!-- .main -->
</div> <!-- #main-container --><!-- content -->

<div class="main wrapper">

<div class="socialicons">

<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a>


<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a>


<a href="" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>


<!--
<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a> 

<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a> 

<a target="_blank" href="http://blogs.oracle.com/thejavatutorials/feed/entries/rss" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>
-->
</div>
<div class="SocialBar">


<div id="tw-like">
<!-- from:twitter:https://twitter.com/about/resources/buttons#tweet -->
<a target="_blank" href="https://twitter.com/share" class="twitter-share-button" data-count="none">Tweet</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</div>



<div id="go-like">
<!-- https://developers.google.com/+/web/+1button/ -->

<!-- Place this tag where you want the +1 button to render. -->
<div class="g-plusone" data-size="medium" data-annotation="none"></div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</div>




<!--<div id="fb-like">

<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like" data-href="https://www.facebook.com/OracleCloudComputing" data-width="450" data-layout="button_count" data-show-faces="false" data-send="true"></div>
</div>-->


</div>
</div>


<div class="footer-containerbook ">
 <footer>
	<span style="display:block;">Copyright &copy; 2011, 2014, Oracle and/or its affiliates. All rights reserved. <a href="../../assets/cpyr.htm">Legal Notices</a></span>
 </footer>
</div>
        
        <br />
        
        <!--<script src="../../assets/js/jquery.min.js"></script>
        <script>window.jQuery || document.write('<script src="../../assets/js/jquery-1.8.0.min.js"><\/script>')</script>-->

<!-- Start SiteCatalyst code -->
<script type="application/javascript" src="https://www.oracleimg.com/us/assets/metrics/ora_docs.js"></script>
<!-- End SiteCatalyst code -->


</body>
</html>
