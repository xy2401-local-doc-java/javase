<!DOCTYPE html>
<!--[if lt IE 7]>      <html lang="en" class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html lang="en" class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html lang="en" class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html lang="en" class="no-js"> <!--<![endif]-->

<head>

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<title>9 Printing HTML Content (Release 8)</title>
<meta name="description" content="This chapter teaches you how to print a web page loaded in the WebView component.">

<meta name="viewport" content="width=device-width">

<link rel="stylesheet" href="../../assets/css/main.css">
<link rel="stylesheet" href="../../assets/css/main-media-480-tablet.css">
<link rel="stylesheet" href="../../assets/css/main-media-768-laptop.css">
<link rel="stylesheet" href="../../assets/css/main-media-1140-deskp.css">

<link rel="stylesheet" href="../../assets/css/simpletree.css">
<link rel="stylesheet" href="../../assets/css/forms.css">
<link rel="stylesheet" href="../../assets/css/panel.css">
<link rel="stylesheet" href="../../assets/css/altanav.css">
<link rel="stylesheet" href="../../assets/css/docstyles.css">

<link rel="stylesheet" href="../../assets/css/print.css">
<link rel="stylesheet" href="../../assets/css/home.css">
<link rel="stylesheet" href="../../assets/css/normalize.min.css">    

        
<!--[if lt IE 9]>
<link rel="stylesheet" href="../../assets/css/ltIE9.css">
<![endif]-->         
        
<script src="../../assets/js/jquery-1.6.2.js"></script>
<script src="../../assets/js/modernizr-2.6.1-respond-1.1.0.min.js"></script>

<!--toggle search-->
<script src="../../assets/js/toggle.search.js"  type="text/javascript"></script>
<!--navigation main-->
<script src="../../assets/js/altanav.js"  type="text/javascript"></script> 
<!--custom tag element-->
<script src="../../assets/js/customhtmltags.js"  type="text/javascript"></script> 

<!--project specific head data-->
  
<!-- Function for printing -->  
<script>
function PrintPage()
  {window.print();}
</script>

<script>
  $(window).unload(function() {
  });
</script>


<!-- keep select menu's sticking when hit back button-->
<script>
$(window).load(function () {
    $("select").each(function () {
        $(this).val($(this).find('option[selected]').val());
    });
});
</script>

<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>

<body>
<!--[if lt IE 7]>
<div style="border-bottom: 1px solid #A3A481; background-color: #FFFFDC; padding: 10px; font: normal 13px/16px Arial, sans-serif;">
<strong>You are running an older version of Internet Explorer or running Internet Explorer in compatibility mode.</strong>  For a richer experience, please upgrade to the latest <a target="_blank" href="http://windows.microsoft.com/en-US/internet-explorer/downloads/ie" target="_blank">Internet Explorer</a> version, or use <a target="_blank" href="http://www.google.com/chrome/" target="_blank">Chrome</a>, <a target="_blank" href="http://www.mozilla.com/en-US/firefox/" target="_blank">Firefox</a>, or <a target="_blank" href="http://www.apple.com/safari/" target="_blank">Safari</a>.
</div>
<![endif]--> 

<div id="altlogo">Oracle | Hardware and Software, Engineered to Work Together</div>

<span id="top"></span>


<div class="header-container">
<header class="bookwrapper  clearfix">

<div id="brandProdName" >
<div id="logocover"></div>
<div id="productName" >Documentation</div>
</div> 

<div id="signInArea"></div>
<script type="text/javascript">
$(document).ready(function() {
$("#signInArea").load("../../version.html");
});
</script>

<div id="searchheader">
<a href="/javase/search.html" class="button">Search Java SE Documentation</a></div>

<!-- Main Navigation -->
 <br class="clearfloat" />
 <div id="navBar" class="io" >

<!--
<ul>
<li><a class="menu1" title="Home" href="pg-home.php"><span>Home</span></a></li>
<li><a class="menu2" title="What's New"><span>What's New</span><span class="dropdown-arrow"></span></a></li>
<li><a class="menu3" title="All Books" href="pg-allbooks-infotype.php"><span>All Books</span></a></li>
</ul>
-->
</div>
            <br class="clearfloat" />
<!--         
<div id="navcontainer" >
<div class="submenu2 shadow" ><h3>See What's New in <strong>SE</strong> Documentation</h3>
</div>

</div> -->
            <br class="clearfloat" />
<!-- End Main Navigation -->


  </header>
</div><!-- header -->

<div class="main-container" >
<div class="main bookwrapper bookindent clearfix" >

<div id="breadcrumb">
  <a href="../../index.html">Java Platform, Standard Edition (Java SE) 8</a>
</div>
<div class="bookoptions"><a href="mailto:javasedocs_us@oracle.com" title="Send Feedback">Send Feedback</a> | <a href="#" onclick="PrintPage();">Print</a>
 | <a href="../JFXWV.pdf">PDF</a> | <a href="../JFXWV.epub">ePub</a> | <a href="../JFXWV.mobi">Mobi</a>
</div>

<div class="booktitle">JavaFX: Adding HTML Content to JavaFX Applications</div>

<div class="contentarea clearboth">

<script type="text/javascript">

$(document).ready(function(){

//////////////////////
$(".trig1").click(function(){
        $("#panel1").toggle("fast"); <!--/*makes panel visible*/-->
        $(this).toggleClass("active"); <!--makes trigger expand out-->
        return false;
    });

///////////////////////

$("#X").click(function(){
      // trigger click is needed for css .active to work
	  $( ".trig1" ).trigger( "click" );
   return false;
    });

/*/////////////////////

$("#panel1").mouseleave(function(){
  $( ".trig1" ).trigger( "click" );
   return false;
});

/////////////////////*/
});

</script>


<!-- page navigation -->

<!--div id="tocbutton" ><span class="button"><a href="#mypanel"><img src="../../assets/img-common/3linemenu.png" alt="menu icon" />Menu</a></span></div-->

<div id="pagenav"><a class="button" title="Previous Page" href="history.htm">Previous Page</a><a class="button" title="Next Page" href="samples.htm">Next Page</a></div>

<article>

<!-- End Header --><a id="BABDHCFH" name="BABDHCFH" class="anchor"></a><a id="JFXWV161" name="JFXWV161" class="anchor"></a>
<h1 class="chapter"><span class="secnum">9</span> Printing HTML Content</h1>
<a id="JFXWV162" name="JFXWV162" class="anchor"></a>
<p>This chapter teaches you how to print a web page loaded in the <code>WebView</code> component.</p>
<p>With the printing API available in JavaFX 8, you can print graphical content of JavaFX applications. The corresponding classes and enums are located in the <code>javafx.print</code> package.</p>
<a id="JFXWV163" name="JFXWV163" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref44" name="sthref44" class="anchor"></a>
<h2 class="sect1">Using the Printing API</h2>
<p>To enable the printing functionality in your JavaFX application, you must use the <code>PrinterJob</code> class. This class represents a printer job that is associated with the default system printer. Use the <code>Printer</code> class to alter a printer for a particular job. For each print job, you can specify job settings by using the properties of the <code>JobSettings</code> class such as <code>collation</code>, <code>copies</code>, <code>pageLayout</code>, <code>pageRanges</code>, <code>paperSource</code>, <code>printColor</code>, <code>printResolution</code>, <code>printQuality</code>, and <code>printSides</code>.</p>
<p>You can print any node of the scene graph including the root node. You can also print nodes that are not added to the scene. Use the <code>printPage</code> method to initiate a print job for a particular node: <code>job.printPage(node)</code>. See the to JavaFX 8 API specification for more information about printing capabilities.</p>
<p>When working with the JavaFX web component, you typically need to print an HTML page loaded into the browser rather than the application UI itself. That is why the <code>print</code> method was added to the <code>WebEngine</code> class. This method is geared toward printing an HTML page that is associated with the web engine.</p>
</div>
<!-- class="sect1" -->
<a id="JFXWV175" name="JFXWV175" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref45" name="sthref45" class="anchor"></a>
<h2 class="sect1">Adding a Context Menu to Enable Printing</h2>
<p>Typically, you add a Print command to an application menu or assign printing to one of the toolbar buttons. In the WebViewSample application, the toolbar is overloaded with controls, which is why you add the Print command to the context menu that is enabled by a right-click. <a href="#BABIJICB">Example 9-1</a> shows a code fragment that adds a context menu with the Print command to the application toolbar.</p>
<div class="example"><a id="BABIJICB" name="BABIJICB" class="anchor"></a><a id="JFXWV176" name="JFXWV176" class="anchor"></a>
<p class="titleinexample">Example 9-1 Creating a Toolbar Context Menu</p>
<pre xml:space="preserve" class="oac_no_warn">//adding context menu
final ContextMenu cm = new ContextMenu();
MenuItem cmItem1 = new MenuItem("Print");
cm.getItems().add(cmItem1);
toolBar.addEventHandler(MouseEvent.MOUSE_CLICKED, (MouseEvent e) -&gt; {
    if (e.getButton() == MouseButton.SECONDARY) {
        cm.show(toolBar, e.getScreenX(), e.getScreenY());
    }
});
</pre></div>
<!-- class="example" -->
<p>When you add the code fragment from <a href="#BABIJICB">Example 9-1</a> to the WebViewSample application, run it, and right click the toolbar, the Print context menu appears, as shown in <a href="#BABICFFD">Figure 9-1</a>.</p>
<div class="figure"><a id="BABICFFD" name="BABICFFD" class="anchor"></a><a id="JFXWV177" name="JFXWV177" class="anchor"></a>
<p class="titleinfigure">Figure 9-1 Print Context Menu</p>
<img width="598" height="442" src="img/webview-print.png" alt="Description of Figure 9-1 follows" title="Description of Figure 9-1 follows" longdesc="img_text/webview-print.htm" /><br />
<a id="sthref46" name="sthref46" href="img_text/webview-print.htm">Description of "Figure 9-1 Print Context Menu"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect1" -->
<a id="JFXWV178" name="JFXWV178" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref47" name="sthref47" class="anchor"></a>
<h2 class="sect1">Processing a Print Job</h2>
<p>After the Print context menu is added to the application UI, you can define the printing action. First, you must create a <code>PrinterJob</code> object. Then, you call the <code>WebEngine.print</code> method passing the printer job as a parameter, as shown in <a href="#BABDAGBJ">Example 9-2</a>.</p>
<div class="example"><a id="BABDAGBJ" name="BABDAGBJ" class="anchor"></a><a id="JFXWV179" name="JFXWV179" class="anchor"></a>
<p class="titleinexample">Example 9-2 Calling the WebEngine.print Method</p>
<pre xml:space="preserve" class="oac_no_warn">//processing print job
cmItem1.setOnAction((ActionEvent e) -&gt; {
    PrinterJob job = PrinterJob.createPrinterJob();
    if (job != null) {
        webEngine.print(job);
        job.endJob();
    }
});
</pre></div>
<!-- class="example" -->
<p>It is important to check for non-null printer jobs, because the <code>createPrinterJob</code> method returns <code>null</code> if there are no printers available in the system.</p>
<p>Study <a href="#BABHJCIE">Example 9-3</a> to evaluate the complete code of the WebViewSample application with the enabled printing functionality.</p>
<div class="example"><a id="BABHJCIE" name="BABHJCIE" class="anchor"></a><a id="JFXWV180" name="JFXWV180" class="anchor"></a>
<p class="titleinexample">Example 9-3 WebViewSample With the Enabled Printing Functionality</p>
<pre xml:space="preserve" class="oac_no_warn">import javafx.application.Application;
import javafx.application.Platform;
import javafx.beans.value.ObservableValue;
import javafx.collections.ListChangeListener.Change;
import javafx.concurrent.Worker.State;
import javafx.event.ActionEvent;
import javafx.event.Event;
import javafx.geometry.HPos;
import javafx.geometry.Pos;
import javafx.geometry.VPos;
import javafx.print.PrinterJob;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.ContextMenu;
import javafx.scene.control.Hyperlink;
import javafx.scene.control.MenuItem;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseButton;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Priority;
import javafx.scene.layout.Region;
import javafx.scene.paint.Color;
import javafx.scene.web.PopupFeatures;
import javafx.scene.web.WebEngine;
import javafx.scene.web.WebHistory;
import javafx.scene.web.WebHistory.Entry;
import javafx.scene.web.WebView;
import javafx.stage.Stage;
import netscape.javascript.JSObject;
 
public class WebViewSample extends Application {
 
    private Scene scene;
 
    @Override
    public void start(Stage stage) {
        // create scene
        stage.setTitle("Web View Sample");
        scene = new Scene(new Browser(stage), 900, 600, Color.web("#666970"));
        stage.setScene(scene);
        // apply CSS style
        scene.getStylesheets().add("webviewsample/BrowserToolbar.css");
        // show stage
        stage.show();
    }
 
    public static void main(String[] args) {
        launch(args);
    }
}
 
class Browser extends Region {
 
    private final HBox toolBar;
    final private static String[] imageFiles = new String[]{
        "product.png",
        "blog.png",
        "documentation.png",
        "partners.png",
        "help.png"
    };
    final private static String[] captions = new String[]{
        "Products",
        "Blogs",
        "Documentation",
        "Partners",
        "Help"
    };
    final private static String[] urls = new String[]{
        "http://www.oracle.com/products/index.html",
        "http://blogs.oracle.com/",
        "http://docs.oracle.com/javase/index.html",
        "http://www.oracle.com/partners/index.html",
        WebViewSample.class.getResource("help.html").toExternalForm()
    };
    final ImageView selectedImage = new ImageView();
    final Hyperlink[] hpls = new Hyperlink[captions.length];
    final Image[] images = new Image[imageFiles.length];
    final WebView browser = new WebView();
    final WebEngine webEngine = browser.getEngine();
    final Button toggleHelpTopics = new Button("Toggle Help Topics");
    final WebView smallView = new WebView();
    final ComboBox comboBox = new ComboBox();
    private boolean needDocumentationButton = false;
    
    public Browser(final Stage stage) {
        //apply the styles
        getStyleClass().add("browser");
                
        for (int i = 0; i &lt; captions.length; i++) {
            // create hyperlinks
            Hyperlink hpl = hpls[i] = new Hyperlink(captions[i]);
            Image image = images[i]
                    = new Image(getClass().getResourceAsStream(imageFiles[i]));
            hpl.setGraphic(new ImageView(image));
            final String url = urls[i];
            final boolean addButton = (hpl.getText().equals("Help"));  
            
            // process event 
            hpl.setOnAction((ActionEvent e) -&gt; {
                needDocumentationButton = addButton;
                webEngine.load(url);
            });
                    
        }
 
 
        comboBox.setPrefWidth(60);
 
        // create the toolbar
        toolBar = new HBox();
        toolBar.setAlignment(Pos.CENTER);
        toolBar.getStyleClass().add("browser-toolbar");
        toolBar.getChildren().add(comboBox);
        toolBar.getChildren().addAll(hpls);
        toolBar.getChildren().add(createSpacer());
 
        //set action for the button
        toggleHelpTopics.setOnAction((ActionEvent t) -&gt; {
            webEngine.executeScript("toggle_visibility('help_topics')");
        });
 
        smallView.setPrefSize(120, 80);
 
        //handle popup windows
        webEngine.setCreatePopupHandler(
                (PopupFeatures config) -&gt; {
                    smallView.setFontScale(0.8);
                    if (!toolBar.getChildren().contains(smallView)) {
                        toolBar.getChildren().add(smallView);
                    }
                    return smallView.getEngine();
        });
 
        //process history
        final WebHistory history = webEngine.getHistory();
        history.getEntries().addListener(
            (Change&lt;? extends Entry&gt; c) -&gt; {
                c.next();
                c.getRemoved().stream().forEach((e) -&gt; {
                comboBox.getItems().remove(e.getUrl());
            });
                c.getAddedSubList().stream().forEach((e) -&gt; {
                comboBox.getItems().add(e.getUrl());
            });
        });
 
        //set the behavior for the history combobox               
        comboBox.setOnAction((Event ev) -&gt; {
            int offset
                    = comboBox.getSelectionModel().getSelectedIndex()
                    - history.getCurrentIndex();
            history.go(offset);
        });
 
        // process page loading
        webEngine.getLoadWorker().stateProperty().addListener(
            (ObservableValue&lt;? extends State&gt; ov, State oldState, 
                State newState) -&gt; {
                    toolBar.getChildren().remove(toggleHelpTopics);
                    if (newState == State.SUCCEEDED) {
                        JSObject win
                                = (JSObject) webEngine.executeScript("window");
                        win.setMember("app", new JavaApp());
                        if (needDocumentationButton) {
                            toolBar.getChildren().add(toggleHelpTopics);
                        }
                    }
        });
        <span class="bold">//adding context menu</span>
        <span class="bold">final ContextMenu cm = new ContextMenu();</span>
        <span class="bold">MenuItem cmItem1 = new MenuItem("Print");</span>
        <span class="bold">cm.getItems().add(cmItem1);</span>
        <span class="bold">toolBar.addEventHandler(MouseEvent.MOUSE_CLICKED, (MouseEvent e) -&gt; {</span>
            <span class="bold">if (e.getButton() == MouseButton.SECONDARY) {</span>
                <span class="bold">cm.show(toolBar, e.getScreenX(), e.getScreenY());</span>
            <span class="bold">}</span>
        <span class="bold">});</span>
 
        <span class="bold">//processing print job</span>
        <span class="bold">cmItem1.setOnAction((ActionEvent e) -&gt; {</span>
            <span class="bold">PrinterJob job = PrinterJob.createPrinterJob();</span>
            <span class="bold">if (job != null) {</span>
                <span class="bold">webEngine.print(job);</span>
                <span class="bold">job.endJob();</span>
            <span class="bold">}</span>
        <span class="bold">});</span>
 
        // load the home page        
        webEngine.load("http://www.oracle.com/products/index.html");
 
        //add components
        getChildren().add(toolBar);
        getChildren().add(browser);
    }
 
    // JavaScript interface object
    public class JavaApp {
 
        public void exit() {
            Platform.exit();
        }
    }
 
    private Node createSpacer() {
        Region spacer = new Region();
        HBox.setHgrow(spacer, Priority.ALWAYS);
        return spacer;
    }
 
    @Override
    protected void layoutChildren() {
        double w = getWidth();
        double h = getHeight();
        double tbHeight = toolBar.prefHeight(w);
        layoutInArea(browser,0,0,w,h-tbHeight,0,HPos.CENTER,VPos.CENTER);
        layoutInArea(toolBar,0,h-tbHeight,w,tbHeight,0,HPos.CENTER,VPos.CENTER);
    }
 
    @Override
    protected double computePrefWidth(double height) {
        return 900;
    }
 
    @Override
    protected double computePrefHeight(double width) {
        return 600;
    }
}
</pre></div>
<!-- class="example" -->
<p>To extend the printing capabilities of the WebViewSample application, use the classes available in the <code>javafx.print</code> package.</p>
<p>In your JavaFX application, you can implement browser tabs by using the <code>TabPane</code> class and create a new <code>WebView</code> object when a user adds a new tab.</p>
<p>To further enhance this application, you can apply effects, transformations, and animated transitions. You can also add more <code>WebView</code> instances to the application scene.</p>
<p>See the JavaFX API documentation and the JavaFX CSS specification for more information about available features. You can also study the <a class="olink JFXIP561" href="../../javafx/interoperability-tutorial/fx_swing.htm#JFXIP561">JavaFX in Swing</a> tutorial to learn how to add a <code>WebView</code> component in your existing Swing application.</p>
<p class="itemizedlisttitle">Related API Documentation&nbsp;</p>
<ul>
<li>
<p><code>WebView</code></p>
</li>
<li>
<p><code>WebEngine</code></p>
</li>
<li>
<p><code>WebHistory</code></p>
</li>
<li>
<p><code>Region</code></p>
</li>
<li>
<p><code>Hyperlink</code></p>
</li>
<li>
<p><code>Worker</code></p>
</li>
</ul>
</div>
<!-- class="sect1" -->

</article>

<div id=rightslider>


<!--/*///////////////////////////////////////////////////////////////////////
PANEL 1 /* table of contents */
///////////////////////////////////////////////////////////////////////*/-->

<div id="panel1" class="panel shadow">
<div class="panellists">
<div style="float:right;"><a href="#" id="X"><img src="../../assets/img-common/X.png"   alt="Close Window" title="Close Table of Contents Window" /></a></div>
	<h3>Table of Contents</h3>
		<script type="text/javascript" src="../../assets/js/tree.menu.js" >

/***********************************************
* Simple Tree Menu - (c) Dynamic Drive DHTML code library (www.dynamicdrive.com)
* This notice MUST stay intact for legal use
* Visit Dynamic Drive at http://www.dynamicdrive.com/ for full source code
***********************************************/

/*http://www.dynamicdrive.com/dynamicindex1/navigate1.htm*/
</script>

<h2>JavaFX: Adding HTML Content to JavaFX Applications</h2>

<a href="javascript:ddtreemenu.flatten('treemenu1', 'expand')">Expand</a> | <a href="javascript:ddtreemenu.flatten('treemenu1', 'contact')">Collapse</a>

<ul id="treemenu1" class="treeview">
    <li><a href="title.htm#top">Title and Copyright Information</a></li>
    <li><a href="preface.htm#sthref2">Preface</a>
      <ul>
        <li><a href="preface.htm#sthref3">About This Tutorial</a></li>
        <li><a href="preface.htm#sthref4">Audience</a></li>
        <li><a href="preface.htm#sthref5">Documentation Accessibility</a></li>
        <li><a href="preface.htm#sthref7">Related Documents</a></li>
        <li><a href="preface.htm#sthref8">Conventions</a></li>
      </ul>
    </li>
    <li><a href="whatsnew.htm#JFXWV101">1 What Is New</a></li>
    <li><a href="overview.htm#JFXWV135">2 Overview of the JavaFX WebView Component</a>
      <ul>
        <li><a href="overview.htm#sthref11">WebEngine Class</a></li>
        <li><a href="overview.htm#sthref12">WebView Class</a></li>
        <li><a href="overview.htm#sthref13">PopupFeatures Class</a></li>
        <li><a href="overview.htm#sthref14">Other Features</a></li>
      </ul>
    </li>
    <li><a href="html-five.htm#JFXWV137">3 Supported Features of HTML5</a>
      <ul>
        <li><a href="html-five.htm#sthref15">Canvas and SVG</a></li>
        <li><a href="html-five.htm#sthref17">Media Playback</a></li>
        <li><a href="html-five.htm#sthref18">Form Controls</a></li>
        <li><a href="html-five.htm#sthref20">History Maintenance</a></li>
        <li><a href="html-five.htm#sthref21">Support for Interactive Element Tags</a></li>
        <li><a href="html-five.htm#sthref23">Document Object Model</a></li>
        <li><a href="html-five.htm#sthref24">Web Sockets</a></li>
        <li><a href="html-five.htm#sthref25">Web Workers</a></li>
        <li><a href="html-five.htm#sthref26">Web Font Support</a></li>
      </ul>
    </li>
    <li><a href="add-browser.htm#JFXWV139">4 Adding a WebView Component to the Application Scene</a>
      <ul>
        <li><a href="add-browser.htm#sthref28">Creating an Embedded Browser</a></li>
        <li><a href="add-browser.htm#sthref30">Creating an Application Toolbar</a></li>
      </ul>
    </li>
    <li><a href="js-commands.htm#JFXWV141">5 Processing JavaScript Commands</a>
      <ul>
        <li><a href="js-commands.htm#sthref32">Understanding the executeScript method</a></li>
        <li><a href="js-commands.htm#sthref33">Calling JavaScript Commands from JavaFX Code</a></li>
      </ul>
    </li>
    <li><a href="js-javafx.htm#JFXWV143">6 Making Upcalls from JavaScript to JavaFX</a>
      <ul>
        <li><a href="js-javafx.htm#sthref37">Using a JavaScript Command to Exit JavaFX Application</a></li>
      </ul>
    </li>
    <li><a href="pop-up.htm#JFXWV145">7 Managing Web Pop-Up Windows</a>
      <ul>
        <li><a href="pop-up.htm#sthref39">Using Pop-Up Windows to Set</a></li>
      </ul>
    </li>
    <li><a href="history.htm#JFXWV147">8 Managing Web History</a>
      <ul>
        <li><a href="history.htm#sthref42">Obtaining the List of Visited Pages</a></li>
      </ul>
    </li>
    <li><a class="selected" href="printing.htm#JFXWV161">9 Printing HTML Content</a>
      <ul>
        <li><a href="printing.htm#sthref44">Using the Printing API</a></li>
        <li><a href="printing.htm#sthref45">Adding a Context Menu to Enable Printing</a></li>
        <li><a href="printing.htm#sthref47">Processing a Print Job</a></li>
      </ul>
    </li>
    <li><a href="samples.htm#JFXWV189">A Web View Sample</a>
      <ul>
        <li><a href="samples.htm#JFXWV191">WebViewSample.java</a></li>
        <li><a href="samples.htm#JFXWV192">BrowserToolbar.css</a></li>
        <li><a href="samples.htm#JFXWV193">help.html</a></li>
        <li><a href="samples.htm#JFXWV194">Image Resources</a></li>
      </ul>
    </li>
</ul>


<script type="text/javascript">

//ddtreemenu.createTree(treeid, enablepersist, opt_persist_in_days (default is 1))

ddtreemenu.createTree("treemenu1", true)
//ddtreemenu.createTree("treemenu2", false)

</script>
</div>
<div style="clear:both;"></div>
</div>


<!--/*///////////////////////////////////////////////////////////////////////
TABS 
///////////////////////////////////////////////////////////////////////*/-->

<a class="trig1 trigger shadow" alt="Table of Contents" title="Contents" href="#"></a>

</div>

<div id="pagenav2"><a class="button" title="Previous Page" href="history.htm">Previous Page</a><a href="#top"  class="button" title="Top of Page" target="_self">Top of Page</a><a class="button" title="Next Page" href="samples.htm">Next Page</a></div>

<br class="clearfloat" />
<span class="clearfloat"></span>
</div> <!-- .contentarea -->
</div> <!-- .main -->
</div> <!-- #main-container --><!-- content -->

<div class="main wrapper">

<div class="socialicons">

<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a>


<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a>


<a href="" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>


<!--
<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a> 

<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a> 

<a target="_blank" href="http://blogs.oracle.com/thejavatutorials/feed/entries/rss" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>
-->
</div>
<div class="SocialBar">


<div id="tw-like">
<!-- from:twitter:https://twitter.com/about/resources/buttons#tweet -->
<a target="_blank" href="https://twitter.com/share" class="twitter-share-button" data-count="none">Tweet</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</div>



<div id="go-like">
<!-- https://developers.google.com/+/web/+1button/ -->

<!-- Place this tag where you want the +1 button to render. -->
<div class="g-plusone" data-size="medium" data-annotation="none"></div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</div>




<!--<div id="fb-like">

<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like" data-href="https://www.facebook.com/OracleCloudComputing" data-width="450" data-layout="button_count" data-show-faces="false" data-send="true"></div>
</div>-->


</div>
</div>


<div class="footer-containerbook ">
 <footer>
	<span style="display:block;">Copyright &copy; 2011, 2014, Oracle and/or its affiliates. All rights reserved. <a href="../../assets/cpyr.htm">Legal Notices</a></span>
 </footer>
</div>
        
        <br />
        
        <!--<script src="../../assets/js/jquery.min.js"></script>
        <script>window.jQuery || document.write('<script src="../../assets/js/jquery-1.8.0.min.js"><\/script>')</script>-->

<!-- Start SiteCatalyst code -->
<script type="application/javascript" src="https://www.oracleimg.com/us/assets/metrics/ora_docs.js"></script>
<!-- End SiteCatalyst code -->


</body>
</html>
