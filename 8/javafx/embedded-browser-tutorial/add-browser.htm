<!DOCTYPE html>
<!--[if lt IE 7]>      <html lang="en" class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html lang="en" class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html lang="en" class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html lang="en" class="no-js"> <!--<![endif]-->

<head>

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<title>4 Adding a WebView Component to the Application Scene (Release 8)</title>
<meta name="description" content="This chapter introduces the WebViewSample application and explains how to implement the task of adding a WebView component to the scene of a JavaFX application.">

<meta name="viewport" content="width=device-width">

<link rel="stylesheet" href="../../assets/css/main.css">
<link rel="stylesheet" href="../../assets/css/main-media-480-tablet.css">
<link rel="stylesheet" href="../../assets/css/main-media-768-laptop.css">
<link rel="stylesheet" href="../../assets/css/main-media-1140-deskp.css">

<link rel="stylesheet" href="../../assets/css/simpletree.css">
<link rel="stylesheet" href="../../assets/css/forms.css">
<link rel="stylesheet" href="../../assets/css/panel.css">
<link rel="stylesheet" href="../../assets/css/altanav.css">
<link rel="stylesheet" href="../../assets/css/docstyles.css">

<link rel="stylesheet" href="../../assets/css/print.css">
<link rel="stylesheet" href="../../assets/css/home.css">
<link rel="stylesheet" href="../../assets/css/normalize.min.css">    

        
<!--[if lt IE 9]>
<link rel="stylesheet" href="../../assets/css/ltIE9.css">
<![endif]-->         
        
<script src="../../assets/js/jquery-1.6.2.js"></script>
<script src="../../assets/js/modernizr-2.6.1-respond-1.1.0.min.js"></script>

<!--toggle search-->
<script src="../../assets/js/toggle.search.js"  type="text/javascript"></script>
<!--navigation main-->
<script src="../../assets/js/altanav.js"  type="text/javascript"></script> 
<!--custom tag element-->
<script src="../../assets/js/customhtmltags.js"  type="text/javascript"></script> 

<!--project specific head data-->
  
<!-- Function for printing -->  
<script>
function PrintPage()
  {window.print();}
</script>

<script>
  $(window).unload(function() {
  });
</script>


<!-- keep select menu's sticking when hit back button-->
<script>
$(window).load(function () {
    $("select").each(function () {
        $(this).val($(this).find('option[selected]').val());
    });
});
</script>

<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>

<body>
<!--[if lt IE 7]>
<div style="border-bottom: 1px solid #A3A481; background-color: #FFFFDC; padding: 10px; font: normal 13px/16px Arial, sans-serif;">
<strong>You are running an older version of Internet Explorer or running Internet Explorer in compatibility mode.</strong>  For a richer experience, please upgrade to the latest <a target="_blank" href="http://windows.microsoft.com/en-US/internet-explorer/downloads/ie" target="_blank">Internet Explorer</a> version, or use <a target="_blank" href="http://www.google.com/chrome/" target="_blank">Chrome</a>, <a target="_blank" href="http://www.mozilla.com/en-US/firefox/" target="_blank">Firefox</a>, or <a target="_blank" href="http://www.apple.com/safari/" target="_blank">Safari</a>.
</div>
<![endif]--> 

<div id="altlogo">Oracle | Hardware and Software, Engineered to Work Together</div>

<span id="top"></span>


<div class="header-container">
<header class="bookwrapper  clearfix">

<div id="brandProdName" >
<div id="logocover"></div>
<div id="productName" >Documentation</div>
</div> 

<div id="signInArea"></div>
<script type="text/javascript">
$(document).ready(function() {
$("#signInArea").load("../../version.html");
});
</script>

<div id="searchheader">
<a href="/javase/search.html" class="button">Search Java SE Documentation</a></div>

<!-- Main Navigation -->
 <br class="clearfloat" />
 <div id="navBar" class="io" >

<!--
<ul>
<li><a class="menu1" title="Home" href="pg-home.php"><span>Home</span></a></li>
<li><a class="menu2" title="What's New"><span>What's New</span><span class="dropdown-arrow"></span></a></li>
<li><a class="menu3" title="All Books" href="pg-allbooks-infotype.php"><span>All Books</span></a></li>
</ul>
-->
</div>
            <br class="clearfloat" />
<!--         
<div id="navcontainer" >
<div class="submenu2 shadow" ><h3>See What's New in <strong>SE</strong> Documentation</h3>
</div>

</div> -->
            <br class="clearfloat" />
<!-- End Main Navigation -->


  </header>
</div><!-- header -->

<div class="main-container" >
<div class="main bookwrapper bookindent clearfix" >

<div id="breadcrumb">
  <a href="../../index.html">Java Platform, Standard Edition (Java SE) 8</a>
</div>
<div class="bookoptions"><a href="mailto:javasedocs_us@oracle.com" title="Send Feedback">Send Feedback</a> | <a href="#" onclick="PrintPage();">Print</a>
 | <a href="../JFXWV.pdf">PDF</a> | <a href="../JFXWV.epub">ePub</a> | <a href="../JFXWV.mobi">Mobi</a>
</div>

<div class="booktitle">JavaFX: Adding HTML Content to JavaFX Applications</div>

<div class="contentarea clearboth">

<script type="text/javascript">

$(document).ready(function(){

//////////////////////
$(".trig1").click(function(){
        $("#panel1").toggle("fast"); <!--/*makes panel visible*/-->
        $(this).toggleClass("active"); <!--makes trigger expand out-->
        return false;
    });

///////////////////////

$("#X").click(function(){
      // trigger click is needed for css .active to work
	  $( ".trig1" ).trigger( "click" );
   return false;
    });

/*/////////////////////

$("#panel1").mouseleave(function(){
  $( ".trig1" ).trigger( "click" );
   return false;
});

/////////////////////*/
});

</script>


<!-- page navigation -->

<!--div id="tocbutton" ><span class="button"><a href="#mypanel"><img src="../../assets/img-common/3linemenu.png" alt="menu icon" />Menu</a></span></div-->

<div id="pagenav"><a class="button" title="Previous Page" href="html-five.htm">Previous Page</a><a class="button" title="Next Page" href="js-commands.htm">Next Page</a></div>

<article>

<!-- End Header --><a id="CCHIFCIB" name="CCHIFCIB" class="anchor"></a><a id="JFXWV139" name="JFXWV139" class="anchor"></a>
<h1 class="chapter"><span class="secnum">4</span> Adding a WebView Component to the Application Scene</h1>
<a id="JFXWV140" name="JFXWV140" class="anchor"></a>
<p>This chapter introduces the WebViewSample application and explains how to implement the task of adding a <code>WebView</code> component to the scene of a JavaFX application.</p>
<p>The WebViewSample application creates the <code>Browser</code> class that encapsulates both the <code>WebView</code> object and the toolbar with UI controls. The <code>WebViewSample</code> class of the application creates the scene and adds a <code>Browser</code> object to the scene.</p>
<a id="JFXWV111" name="JFXWV111" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref28" name="sthref28" class="anchor"></a>
<h2 class="sect1">Creating an Embedded Browser</h2>
<p><a href="#CEGDIBBI">Example 4-1</a> shows how to add the <code>WebView</code> component to the application scene.</p>
<div class="example"><a id="CEGDIBBI" name="CEGDIBBI" class="anchor"></a><a id="JFXWV112" name="JFXWV112" class="anchor"></a>
<p class="titleinexample">Example 4-1 Creating a Browser by Using the WebView and WebEngine Classes</p>
<pre xml:space="preserve" class="oac_no_warn">import javafx.application.Application;
import javafx.geometry.HPos;
import javafx.geometry.VPos;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Priority;
import javafx.scene.layout.Region;
import javafx.scene.paint.Color;
import javafx.scene.web.WebEngine;
import javafx.scene.web.WebView;
import javafx.stage.Stage;
 
 
public class WebViewSample extends Application {
    private Scene scene;
    @Override public void start(Stage stage) {
        // create the scene
        stage.setTitle("Web View");
        scene = new Scene(new Browser(),900,600, Color.web("#666970"));
        stage.setScene(scene);
        scene.getStylesheets().add("webviewsample/BrowserToolbar.css");        
        stage.show();
    }
 
    public static void main(String[] args){
        launch(args);
    }
}
class Browser extends Region {
 
    <span class="bold">final WebView browser = new WebView();</span>
    <span class="bold">final WebEngine webEngine = browser.getEngine();</span>
     
    public Browser() {
        //apply the styles
        getStyleClass().add("browser");
        // load the web page
        <span class="bold">webEngine.load("http://www.oracle.com/products/index.html");</span>
        //add the web view to the scene
        <span class="bold">getChildren().add(browser);</span>
 
    }
    private Node createSpacer() {
        Region spacer = new Region();
        HBox.setHgrow(spacer, Priority.ALWAYS);
        return spacer;
    }
 
    @Override protected void layoutChildren() {
        double w = getWidth();
        double h = getHeight();
        layoutInArea(browser,0,0,w,h,0, HPos.CENTER, VPos.CENTER);
    }
 
    @Override protected double computePrefWidth(double height) {
        return 900;
    }
 
    @Override protected double computePrefHeight(double width) {
        return 600;
    }
}
</pre></div>
<!-- class="example" -->
<p>In this code, the web engine loads a URL that points to the Oracle corporate web site. The <code>WebView</code> object that contains this web engine is added to the application scene by using the <code>getChildren</code> and <code>add</code> methods.</p>
<p>When you add, compile, and run this code fragment, it produces the application window shown in <a href="#CEGGDCDG">Figure 4-1</a>.</p>
<div class="figure"><a id="CEGGDCDG" name="CEGGDCDG" class="anchor"></a><a id="JFXWV113" name="JFXWV113" class="anchor"></a>
<p class="titleinfigure">Figure 4-1 WebView Object in an Application Scene</p>
<img width="598" height="480" src="img/webview-add.png" alt="WebView object" title="WebView object" longdesc="img_text/webview-add.htm" /><br />
<a id="sthref29" name="sthref29" href="img_text/webview-add.htm">Description of "Figure 4-1 WebView Object in an Application Scene "</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect1" -->
<a id="JFXWV172" name="JFXWV172" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref30" name="sthref30" class="anchor"></a>
<h2 class="sect1">Creating an Application Toolbar</h2>
<p>Add a toolbar with four <code>Hyperlink</code> objects to switch between different Oracle web resources. Study the modified code of the <code>Browser</code> class shown in <a href="#CEGHGCHB">Example 4-2</a>. It adds URLs for alternative web resources including Oracle products, blogs, Java documentation, and the partner network. The code fragment also creates a toolbar and adds the hyperlinks to it.</p>
<div class="example"><a id="CEGHGCHB" name="CEGHGCHB" class="anchor"></a><a id="JFXWV114" name="JFXWV114" class="anchor"></a>
<p class="titleinexample">Example 4-2 Creating a Toolbar</p>
<pre xml:space="preserve" class="oac_no_warn">import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.HPos;
import javafx.geometry.VPos;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Hyperlink;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Priority;
import javafx.scene.layout.Region;
import javafx.scene.paint.Color;
import javafx.scene.web.WebEngine;
import javafx.scene.web.WebView;
import javafx.stage.Stage;
 
public class WebViewSample extends Application {
 
    private Scene scene;
 
    @Override public void start(Stage stage) {
        // create scene
        stage.setTitle("Web View");
        scene = new Scene(new Browser(),900,600, Color.web("#666970"));
        stage.setScene(scene);
        scene.getStylesheets().add("webviewsample/BrowserToolbar.css");
        // show stage
        stage.show();
    }
 
    public static void main(String[] args){
        launch(args);
    }
}
class Browser extends Region {
   private HBox toolBar;
 
   final private static String[] imageFiles = new String[]{
        "product.png",
        "blog.png",
        "documentation.png",
        "partners.png"
    };
    final private static String[] captions = new String[]{
        "Products",
        "Blogs",
        "Documentation",
        "Partners"
    };
 
    final private static String[] urls = new String[]{
        "http://www.oracle.com/products/index.html",
        "http://blogs.oracle.com/",
        "http://docs.oracle.com/javase/index.html",
        "http://www.oracle.com/partners/index.html"
    };
 
    final ImageView selectedImage = new ImageView();
    final Hyperlink[] hpls = new Hyperlink[captions.length];
    final Image[] images = new Image[imageFiles.length];
    final WebView browser = new WebView();
    final WebEngine webEngine = browser.getEngine();
 
    public Browser() {       
        //apply the styles
        getStyleClass().add("browser");
        
        <span class="bold">for (int i = 0; i &lt; captions.length; i++) {</span>
            <span class="bold">final Hyperlink hpl = hpls[i] = new Hyperlink(captions[i]);</span>
            <span class="bold">Image image = images[i] =</span>
                <span class="bold">new Image(getClass().getResourceAsStream(imageFiles[i]));</span>
            <span class="bold">hpl.setGraphic(new ImageView (image));</span>
            <span class="bold">final String url = urls[i];</span>
 
            <span class="bold">hpl.setOnAction(new EventHandler&lt;ActionEvent&gt;() {</span>
                <span class="bold">@Override</span>
                <span class="bold">public void handle(ActionEvent e) {</span>
                    <span class="bold">webEngine.load(url);</span>   
                <span class="bold">}</span>
            <span class="bold">});</span>
        <span class="bold">}</span>        
 
// load the home page        
        webEngine.load("http://www.oracle.com/products/index.html");
        
// create the toolbar
        <span class="bold">toolBar = new HBox();</span>
        <span class="bold">toolBar.getStyleClass().add("browser-toolbar");</span>
        <span class="bold">toolBar.getChildren().addAll(hpls);</span>        
    
        //add components
        getChildren().add(toolBar);
        getChildren().add(browser); 
    }
 
    private Node createSpacer() {
        Region spacer = new Region();
        HBox.setHgrow(spacer, Priority.ALWAYS);
        return spacer;
    }
 
    @Override protected void layoutChildren() {
        double w = getWidth();
        double h = getHeight();
        double tbHeight = toolBar.prefHeight(w);
        layoutInArea(browser,0,0,w,h-tbHeight,0, HPos.CENTER, VPos.CENTER);
        layoutInArea(toolBar,0,h-tbHeight,w,tbHeight,0,HPos.CENTER,VPos.CENTER);
    }
 
    @Override protected double computePrefWidth(double height) {
        return 900;
    }
 
    @Override protected double computePrefHeight(double width) {
        return 600;
    }
}
</pre></div>
<!-- class="example" -->
<p>This code uses a <code>for</code> loop to create the hyperlinks. The <code>setOnAction</code> method defines the behavior of the hyperlinks. When a user clicks a link, the corresponding URL value is passed to the <code>load</code> method of the <code>webEngine</code>. When you compile and run the modified application, the application window changes as shown in <a href="#CEGDBBAH">Figure 4-2</a>.</p>
<div class="figure"><a id="CEGDBBAH" name="CEGDBBAH" class="anchor"></a><a id="JFXWV115" name="JFXWV115" class="anchor"></a>
<p class="titleinfigure">Figure 4-2 Embedded Browser with the Navigation Toolbar</p>
<img width="598" height="453" src="img/webview-partner.png" alt="Description of Figure 4-2 follows" title="Description of Figure 4-2 follows" longdesc="img_text/webview-partner.htm" /><br />
<a id="sthref31" name="sthref31" href="img_text/webview-partner.htm">Description of "Figure 4-2 Embedded Browser with the Navigation Toolbar"</a><br />
<br /></div>
<!-- class="figure" --></div>
<!-- class="sect1" -->

</article>

<div id=rightslider>


<!--/*///////////////////////////////////////////////////////////////////////
PANEL 1 /* table of contents */
///////////////////////////////////////////////////////////////////////*/-->

<div id="panel1" class="panel shadow">
<div class="panellists">
<div style="float:right;"><a href="#" id="X"><img src="../../assets/img-common/X.png"   alt="Close Window" title="Close Table of Contents Window" /></a></div>
	<h3>Table of Contents</h3>
		<script type="text/javascript" src="../../assets/js/tree.menu.js" >

/***********************************************
* Simple Tree Menu - (c) Dynamic Drive DHTML code library (www.dynamicdrive.com)
* This notice MUST stay intact for legal use
* Visit Dynamic Drive at http://www.dynamicdrive.com/ for full source code
***********************************************/

/*http://www.dynamicdrive.com/dynamicindex1/navigate1.htm*/
</script>

<h2>JavaFX: Adding HTML Content to JavaFX Applications</h2>

<a href="javascript:ddtreemenu.flatten('treemenu1', 'expand')">Expand</a> | <a href="javascript:ddtreemenu.flatten('treemenu1', 'contact')">Collapse</a>

<ul id="treemenu1" class="treeview">
    <li><a href="title.htm#top">Title and Copyright Information</a></li>
    <li><a href="preface.htm#sthref2">Preface</a>
      <ul>
        <li><a href="preface.htm#sthref3">About This Tutorial</a></li>
        <li><a href="preface.htm#sthref4">Audience</a></li>
        <li><a href="preface.htm#sthref5">Documentation Accessibility</a></li>
        <li><a href="preface.htm#sthref7">Related Documents</a></li>
        <li><a href="preface.htm#sthref8">Conventions</a></li>
      </ul>
    </li>
    <li><a href="whatsnew.htm#JFXWV101">1 What Is New</a></li>
    <li><a href="overview.htm#JFXWV135">2 Overview of the JavaFX WebView Component</a>
      <ul>
        <li><a href="overview.htm#sthref11">WebEngine Class</a></li>
        <li><a href="overview.htm#sthref12">WebView Class</a></li>
        <li><a href="overview.htm#sthref13">PopupFeatures Class</a></li>
        <li><a href="overview.htm#sthref14">Other Features</a></li>
      </ul>
    </li>
    <li><a href="html-five.htm#JFXWV137">3 Supported Features of HTML5</a>
      <ul>
        <li><a href="html-five.htm#sthref15">Canvas and SVG</a></li>
        <li><a href="html-five.htm#sthref17">Media Playback</a></li>
        <li><a href="html-five.htm#sthref18">Form Controls</a></li>
        <li><a href="html-five.htm#sthref20">History Maintenance</a></li>
        <li><a href="html-five.htm#sthref21">Support for Interactive Element Tags</a></li>
        <li><a href="html-five.htm#sthref23">Document Object Model</a></li>
        <li><a href="html-five.htm#sthref24">Web Sockets</a></li>
        <li><a href="html-five.htm#sthref25">Web Workers</a></li>
        <li><a href="html-five.htm#sthref26">Web Font Support</a></li>
      </ul>
    </li>
    <li><a class="selected" href="add-browser.htm#JFXWV139">4 Adding a WebView Component to the Application Scene</a>
      <ul>
        <li><a href="add-browser.htm#sthref28">Creating an Embedded Browser</a></li>
        <li><a href="add-browser.htm#sthref30">Creating an Application Toolbar</a></li>
      </ul>
    </li>
    <li><a href="js-commands.htm#JFXWV141">5 Processing JavaScript Commands</a>
      <ul>
        <li><a href="js-commands.htm#sthref32">Understanding the executeScript method</a></li>
        <li><a href="js-commands.htm#sthref33">Calling JavaScript Commands from JavaFX Code</a></li>
      </ul>
    </li>
    <li><a href="js-javafx.htm#JFXWV143">6 Making Upcalls from JavaScript to JavaFX</a>
      <ul>
        <li><a href="js-javafx.htm#sthref37">Using a JavaScript Command to Exit JavaFX Application</a></li>
      </ul>
    </li>
    <li><a href="pop-up.htm#JFXWV145">7 Managing Web Pop-Up Windows</a>
      <ul>
        <li><a href="pop-up.htm#sthref39">Using Pop-Up Windows to Set</a></li>
      </ul>
    </li>
    <li><a href="history.htm#JFXWV147">8 Managing Web History</a>
      <ul>
        <li><a href="history.htm#sthref42">Obtaining the List of Visited Pages</a></li>
      </ul>
    </li>
    <li><a href="printing.htm#JFXWV161">9 Printing HTML Content</a>
      <ul>
        <li><a href="printing.htm#sthref44">Using the Printing API</a></li>
        <li><a href="printing.htm#sthref45">Adding a Context Menu to Enable Printing</a></li>
        <li><a href="printing.htm#sthref47">Processing a Print Job</a></li>
      </ul>
    </li>
    <li><a href="samples.htm#JFXWV189">A Web View Sample</a>
      <ul>
        <li><a href="samples.htm#JFXWV191">WebViewSample.java</a></li>
        <li><a href="samples.htm#JFXWV192">BrowserToolbar.css</a></li>
        <li><a href="samples.htm#JFXWV193">help.html</a></li>
        <li><a href="samples.htm#JFXWV194">Image Resources</a></li>
      </ul>
    </li>
</ul>


<script type="text/javascript">

//ddtreemenu.createTree(treeid, enablepersist, opt_persist_in_days (default is 1))

ddtreemenu.createTree("treemenu1", true)
//ddtreemenu.createTree("treemenu2", false)

</script>
</div>
<div style="clear:both;"></div>
</div>


<!--/*///////////////////////////////////////////////////////////////////////
TABS 
///////////////////////////////////////////////////////////////////////*/-->

<a class="trig1 trigger shadow" alt="Table of Contents" title="Contents" href="#"></a>

</div>

<div id="pagenav2"><a class="button" title="Previous Page" href="html-five.htm">Previous Page</a><a href="#top"  class="button" title="Top of Page" target="_self">Top of Page</a><a class="button" title="Next Page" href="js-commands.htm">Next Page</a></div>

<br class="clearfloat" />
<span class="clearfloat"></span>
</div> <!-- .contentarea -->
</div> <!-- .main -->
</div> <!-- #main-container --><!-- content -->

<div class="main wrapper">

<div class="socialicons">

<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a>


<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a>


<a href="" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>


<!--
<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a> 

<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a> 

<a target="_blank" href="http://blogs.oracle.com/thejavatutorials/feed/entries/rss" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>
-->
</div>
<div class="SocialBar">


<div id="tw-like">
<!-- from:twitter:https://twitter.com/about/resources/buttons#tweet -->
<a target="_blank" href="https://twitter.com/share" class="twitter-share-button" data-count="none">Tweet</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</div>



<div id="go-like">
<!-- https://developers.google.com/+/web/+1button/ -->

<!-- Place this tag where you want the +1 button to render. -->
<div class="g-plusone" data-size="medium" data-annotation="none"></div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</div>




<!--<div id="fb-like">

<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like" data-href="https://www.facebook.com/OracleCloudComputing" data-width="450" data-layout="button_count" data-show-faces="false" data-send="true"></div>
</div>-->


</div>
</div>


<div class="footer-containerbook ">
 <footer>
	<span style="display:block;">Copyright &copy; 2011, 2014, Oracle and/or its affiliates. All rights reserved. <a href="../../assets/cpyr.htm">Legal Notices</a></span>
 </footer>
</div>
        
        <br />
        
        <!--<script src="../../assets/js/jquery.min.js"></script>
        <script>window.jQuery || document.write('<script src="../../assets/js/jquery-1.8.0.min.js"><\/script>')</script>-->

<!-- Start SiteCatalyst code -->
<script type="application/javascript" src="https://www.oracleimg.com/us/assets/metrics/ora_docs.js"></script>
<!-- End SiteCatalyst code -->


</body>
</html>
