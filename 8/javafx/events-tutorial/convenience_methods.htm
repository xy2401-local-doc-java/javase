<!DOCTYPE html>
<!--[if lt IE 7]>      <html lang="en" class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html lang="en" class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html lang="en" class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html lang="en" class="no-js"> <!--<![endif]-->

<head>

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<title>2 Working with Convenience Methods (Release 8)</title>
<meta name="description" content="This topic describes convenience methods that you can use to register event handlers within your JavaFX application. Learn an easy way to create and register event handlers to respond to mouse events, keyboard events, action events, drag-and-drop events, window events, and others.">

<meta name="viewport" content="width=device-width">

<link rel="stylesheet" href="../../assets/css/main.css">
<link rel="stylesheet" href="../../assets/css/main-media-480-tablet.css">
<link rel="stylesheet" href="../../assets/css/main-media-768-laptop.css">
<link rel="stylesheet" href="../../assets/css/main-media-1140-deskp.css">

<link rel="stylesheet" href="../../assets/css/simpletree.css">
<link rel="stylesheet" href="../../assets/css/forms.css">
<link rel="stylesheet" href="../../assets/css/panel.css">
<link rel="stylesheet" href="../../assets/css/altanav.css">
<link rel="stylesheet" href="../../assets/css/docstyles.css">

<link rel="stylesheet" href="../../assets/css/print.css">
<link rel="stylesheet" href="../../assets/css/home.css">
<link rel="stylesheet" href="../../assets/css/normalize.min.css">    

        
<!--[if lt IE 9]>
<link rel="stylesheet" href="../../assets/css/ltIE9.css">
<![endif]-->         
        
<script src="../../assets/js/jquery-1.6.2.js"></script>
<script src="../../assets/js/modernizr-2.6.1-respond-1.1.0.min.js"></script>

<!--toggle search-->
<script src="../../assets/js/toggle.search.js"  type="text/javascript"></script>
<!--navigation main-->
<script src="../../assets/js/altanav.js"  type="text/javascript"></script> 
<!--custom tag element-->
<script src="../../assets/js/customhtmltags.js"  type="text/javascript"></script> 

<!--project specific head data-->
  
<!-- Function for printing -->  
<script>
function PrintPage()
  {window.print();}
</script>

<script>
  $(window).unload(function() {
  });
</script>


<!-- keep select menu's sticking when hit back button-->
<script>
$(window).load(function () {
    $("select").each(function () {
        $(this).val($(this).find('option[selected]').val());
    });
});
</script>

<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>

<body>
<!--[if lt IE 7]>
<div style="border-bottom: 1px solid #A3A481; background-color: #FFFFDC; padding: 10px; font: normal 13px/16px Arial, sans-serif;">
<strong>You are running an older version of Internet Explorer or running Internet Explorer in compatibility mode.</strong>  For a richer experience, please upgrade to the latest <a target="_blank" href="http://windows.microsoft.com/en-US/internet-explorer/downloads/ie" target="_blank">Internet Explorer</a> version, or use <a target="_blank" href="http://www.google.com/chrome/" target="_blank">Chrome</a>, <a target="_blank" href="http://www.mozilla.com/en-US/firefox/" target="_blank">Firefox</a>, or <a target="_blank" href="http://www.apple.com/safari/" target="_blank">Safari</a>.
</div>
<![endif]--> 

<div id="altlogo">Oracle | Hardware and Software, Engineered to Work Together</div>

<span id="top"></span>


<div class="header-container">
<header class="bookwrapper  clearfix">

<div id="brandProdName" >
<div id="logocover"></div>
<div id="productName" >Documentation</div>
</div> 

<div id="signInArea"></div>
<script type="text/javascript">
$(document).ready(function() {
$("#signInArea").load("../../version.html");
});
</script>

<div id="searchheader">
<a href="/javase/search.html" class="button">Search Java SE Documentation</a></div>

<!-- Main Navigation -->
 <br class="clearfloat" />
 <div id="navBar" class="io" >

<!--
<ul>
<li><a class="menu1" title="Home" href="pg-home.php"><span>Home</span></a></li>
<li><a class="menu2" title="What's New"><span>What's New</span><span class="dropdown-arrow"></span></a></li>
<li><a class="menu3" title="All Books" href="pg-allbooks-infotype.php"><span>All Books</span></a></li>
</ul>
-->
</div>
            <br class="clearfloat" />
<!--         
<div id="navcontainer" >
<div class="submenu2 shadow" ><h3>See What's New in <strong>SE</strong> Documentation</h3>
</div>

</div> -->
            <br class="clearfloat" />
<!-- End Main Navigation -->


  </header>
</div><!-- header -->

<div class="main-container" >
<div class="main bookwrapper bookindent clearfix" >

<div id="breadcrumb">
  <a href="../../index.html">Java Platform, Standard Edition (Java SE) 8</a>
</div>
<div class="bookoptions"><a href="mailto:javasedocs_us@oracle.com" title="Send Feedback">Send Feedback</a> | <a href="#" onclick="PrintPage();">Print</a>
 | <a href="../JFXED.pdf">PDF</a> | <a href="../JFXED.epub">ePub</a> | <a href="../JFXED.mobi">Mobi</a>
</div>

<div class="booktitle">JavaFX: Handling Events</div>

<div class="contentarea clearboth">

<script type="text/javascript">

$(document).ready(function(){

//////////////////////
$(".trig1").click(function(){
        $("#panel1").toggle("fast"); <!--/*makes panel visible*/-->
        $(this).toggleClass("active"); <!--makes trigger expand out-->
        return false;
    });

///////////////////////

$("#X").click(function(){
      // trigger click is needed for css .active to work
	  $( ".trig1" ).trigger( "click" );
   return false;
    });

/*/////////////////////

$("#panel1").mouseleave(function(){
  $( ".trig1" ).trigger( "click" );
   return false;
});

/////////////////////*/
});

</script>


<!-- page navigation -->

<!--div id="tocbutton" ><span class="button"><a href="#mypanel"><img src="../../assets/img-common/3linemenu.png" alt="menu icon" />Menu</a></span></div-->

<div id="pagenav"><a class="button" title="Previous Page" href="processing.htm">Previous Page</a><a class="button" title="Next Page" href="filters.htm">Next Page</a></div>

<article>

<!-- End Header --><a id="BABCCIHI" name="BABCCIHI" class="anchor"></a><a id="JFXED101" name="JFXED101" class="anchor"></a>
<h1 class="chapter"><span class="secnum">2</span> Working with Convenience Methods</h1>
<a id="JFXED102" name="JFXED102" class="anchor"></a>
<p>This topic describes convenience methods that you can use to register event handlers within your JavaFX application. Learn an easy way to create and register event handlers to respond to mouse events, keyboard events, action events, drag-and-drop events, window events, and others.</p>
<p>Some JavaFX classes define event handler properties, which provide a way to register event handlers. Setting an event handler property to a user-defined event handler automatically registers the handler to receive the corresponding event type. The setter methods for the event handler properties are convenience methods for registering event handlers.</p>
<a id="JFXED103" name="JFXED103" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref23" name="sthref23" class="anchor"></a>
<h2 class="sect1">Using Convenience Methods</h2>
<p>Many of the convenience methods are defined in the <code>Node</code> class and are available to all of its subclasses. Other classes also contain convenience methods. <a href="#CIHEFFAG">Table 2-1</a> describes the events that convenience methods can be used to handle and identifies the classes in which the convenience methods are defined.</p>
<div class="tblformal"><a id="JFXED165" name="JFXED165" class="anchor"></a><a id="sthref24" name="sthref24" class="anchor"></a><a id="CIHEFFAG" name="CIHEFFAG" class="anchor"></a>
<p class="titleintable">Table 2-1 Classes with Convenience Methods for Event Handling</p>
<table class="Formal" title="Classes with Convenience Methods for Event Handling" summary="This table identifies the JavaFX classes that contain convenience methods for creating and registering event handlers. The first column identifies the action that causes an event to be dispatched. The second column identifies the type of event. The third column identifies the class." dir="ltr" border="1" width="100%" frame="hsides" rules="groups" cellpadding="3" cellspacing="0">
<col width="*" />
<col width="37%" />
<col width="23%" />
<thead>
<tr align="left" valign="top">
<th align="left" valign="bottom" id="r1c1-t2">User Action</th>
<th align="left" valign="bottom" id="r1c2-t2">Event Type</th>
<th align="left" valign="bottom" id="r1c3-t2">Class</th>
</tr>
</thead>
<tbody>
<tr align="left" valign="top">
<td align="left" id="r2c1-t2" headers="r1c1-t2">
<p>Key on the keyboard is pressed.</p>
</td>
<td align="left" headers="r2c1-t2 r1c2-t2">
<p><code>KeyEvent</code></p>
</td>
<td align="left" headers="r2c1-t2 r1c3-t2">
<p><code>Node</code>, <code>Scene</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r3c1-t2" headers="r1c1-t2">
<p>Mouse is moved or a button on the mouse is pressed.</p>
</td>
<td align="left" headers="r3c1-t2 r1c2-t2">
<p><code>MouseEvent</code></p>
</td>
<td align="left" headers="r3c1-t2 r1c3-t2">
<p><code>Node</code>, <code>Scene</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r4c1-t2" headers="r1c1-t2">
<p>Full mouse press-drag-release action is performed.</p>
</td>
<td align="left" headers="r4c1-t2 r1c2-t2">
<p><code>MouseDragEvent</code></p>
</td>
<td align="left" headers="r4c1-t2 r1c3-t2">
<p><code>Node</code>, <code>Scene</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r5c1-t2" headers="r1c1-t2">
<p>Input from an alternate method for entering characters (typically for a foreign language) is generated, changed, removed, or committed.</p>
</td>
<td align="left" headers="r5c1-t2 r1c2-t2">
<p><code>InputMethodEvent</code></p>
</td>
<td align="left" headers="r5c1-t2 r1c3-t2">
<p><code>Node</code>, <code>Scene</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r6c1-t2" headers="r1c1-t2">
<p>Platform-supported drag and drop action is performed.</p>
</td>
<td align="left" headers="r6c1-t2 r1c2-t2">
<p><code>DragEvent</code></p>
</td>
<td align="left" headers="r6c1-t2 r1c3-t2">
<p><code>Node</code>, <code>Scene</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r7c1-t2" headers="r1c1-t2">
<p>Object is scrolled.</p>
</td>
<td align="left" headers="r7c1-t2 r1c2-t2">
<p><code>ScrollEvent</code></p>
</td>
<td align="left" headers="r7c1-t2 r1c3-t2">
<p><code>Node</code>, <code>Scene</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r8c1-t2" headers="r1c1-t2">
<p>Rotation gesture is performed on an object</p>
</td>
<td align="left" headers="r8c1-t2 r1c2-t2">
<p><code>RotateEvent</code></p>
</td>
<td align="left" headers="r8c1-t2 r1c3-t2">
<p><code>Node</code>, <code>Scene</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r9c1-t2" headers="r1c1-t2">
<p>Swipe gesture is performed on an object</p>
</td>
<td align="left" headers="r9c1-t2 r1c2-t2">
<p><code>SwipeEvent</code></p>
</td>
<td align="left" headers="r9c1-t2 r1c3-t2">
<p><code>Node</code>, <code>Scene</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r10c1-t2" headers="r1c1-t2">
<p>An object is touched</p>
</td>
<td align="left" headers="r10c1-t2 r1c2-t2">
<p><code>TouchEvent</code></p>
</td>
<td align="left" headers="r10c1-t2 r1c3-t2">
<p><code>Node</code>, <code>Scene</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r11c1-t2" headers="r1c1-t2">
<p>Zoom gesture is performed on an object</p>
</td>
<td align="left" headers="r11c1-t2 r1c2-t2">
<p><code>ZoomEvent</code></p>
</td>
<td align="left" headers="r11c1-t2 r1c3-t2">
<p><code>Node</code>, <code>Scene</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r12c1-t2" headers="r1c1-t2">
<p>Context menu is requested</p>
</td>
<td align="left" headers="r12c1-t2 r1c2-t2">
<p><code>ContextMenuEvent</code></p>
</td>
<td align="left" headers="r12c1-t2 r1c3-t2">
<p><code>Node</code>, <code>Scene</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r13c1-t2" headers="r1c1-t2">
<p>Button is pressed, combo box is shown or hidden, or a menu item is selected.</p>
</td>
<td align="left" headers="r13c1-t2 r1c2-t2">
<p><code>ActionEvent</code></p>
</td>
<td align="left" headers="r13c1-t2 r1c3-t2">
<p><code>ButtonBase</code>, <code>ComboBoxBase</code>, <code>ContextMenu</code>, <code>MenuItem</code>, <code>TextField</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r14c1-t2" headers="r1c1-t2">
<p>Item in a list, table, or tree is edited.</p>
</td>
<td align="left" headers="r14c1-t2 r1c2-t2">
<ul>
<li>
<p><code>ListView.EditEvent</code></p>
</li>
<li>
<p><code>TableColumn.CellEditEvent</code></p>
</li>
<li>
<p><code>TreeView.EditEvent</code></p>
</li>
</ul>
</td>
<td align="left" headers="r14c1-t2 r1c3-t2">
<ul>
<li>
<p><code>ListView</code></p>
</li>
<li>
<p><code>TableColumn</code></p>
</li>
<li>
<p><code>TreeView</code></p>
</li>
</ul>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r15c1-t2" headers="r1c1-t2">
<p>Media player encounters an error.</p>
</td>
<td align="left" headers="r15c1-t2 r1c2-t2">
<p><code>MediaErrorEvent</code></p>
</td>
<td align="left" headers="r15c1-t2 r1c3-t2">
<p><code>MediaView</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r16c1-t2" headers="r1c1-t2">
<p>Menu is either shown or hidden.</p>
</td>
<td align="left" headers="r16c1-t2 r1c2-t2">
<p><code>Event</code></p>
</td>
<td align="left" headers="r16c1-t2 r1c3-t2">
<p><code>Menu</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r17c1-t2" headers="r1c1-t2">
<p>Popup window is hidden.</p>
</td>
<td align="left" headers="r17c1-t2 r1c2-t2">
<p><code>Event</code></p>
</td>
<td align="left" headers="r17c1-t2 r1c3-t2">
<p><code>PopupWindow</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r18c1-t2" headers="r1c1-t2">
<p>Tab is selected or closed.</p>
</td>
<td align="left" headers="r18c1-t2 r1c2-t2">
<p><code>Event</code></p>
</td>
<td align="left" headers="r18c1-t2 r1c3-t2">
<p><code>Tab</code></p>
</td>
</tr>
<tr align="left" valign="top">
<td align="left" id="r19c1-t2" headers="r1c1-t2">
<p>Window is closed, shown, or hidden.</p>
</td>
<td align="left" headers="r19c1-t2 r1c2-t2">
<p><code>WindowEvent</code></p>
</td>
<td align="left" headers="r19c1-t2 r1c3-t2">
<p><code>Window</code></p>
</td>
</tr>
</tbody>
</table>
<br /></div>
<!-- class="tblformal" -->
<p>Convenience methods for registering event handlers have the following format:</p>
<pre xml:space="preserve" class="oac_no_warn">setOn<span class="variable">Event-type</span>(EventHandler&lt;? super <span class="variable">event-class</span>&gt; value)
</pre>
<p><code><span class="codeinlineitalic">Event-type</span></code> is the type of event that the handler processes, for example, <code>setOnKeyTyped</code> for <code>KEY_TYPED</code> events or <code>setOnMouseClicked</code> for <code>MOUSE_CLICKED</code> events. <code><span class="codeinlineitalic">event-class</span></code> is the class that defines the event type, for example, <code>KeyEvent</code> for events related to keyboard input or <code>MouseEvent</code> for events related to mouse input. The string <code>&lt;? super</code> <code><span class="codeinlineitalic">event-class</span></code><code>&gt;</code> indicates that the method accepts an event handler for <code><span class="codeinlineitalic">event-class</span></code> or an event handler for one of its super classes as the argument. For example, an event handler for <code>InputEvent</code> could be used when the event is either a keyboard event or a mouse event.</p>
<p>The following statement shows the definition for the method that registers an event handler to handle the events that are generated when a key is typed, that is, when a key is pressed and released:</p>
<pre xml:space="preserve" class="oac_no_warn">setOnKeyTyped(EventHandler&lt;? super KeyEvent&gt; value)
</pre>
<p>You can create and register your event handler in a single step by defining the handler as an anonymous class in the call to the convenience method. The event handler must implement the <code>handle()</code> method to provide the code needed to process the event.</p>
<p>A example of the use of a convenience method is shown in the code that is generated when you use the NetBeans IDE to create a JavaFX application. If you select the Create Application Class option when you create your JavaFX application, the main class that is created contains a "Hello World" application. The generated code is shown in <a href="#CIHIIECH">Example 2-1</a>.</p>
<div class="example"><a id="CIHIIECH" name="CIHIIECH" class="anchor"></a><a id="JFXED105" name="JFXED105" class="anchor"></a>
<p class="titleinexample">Example 2-1 Hello World Example</p>
<pre xml:space="preserve" class="oac_no_warn">package yourapplication;
 
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.stage.Stage;
 
public class YourApplication extends Application {
 
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Application.launch(args);
    }
    
    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("Hello World");
        Group root = new Group();
        Scene scene = new Scene(root, 300, 250);
        Button btn = new Button();
        btn.setLayoutX(100);
        btn.setLayoutY(80);
        btn.setText("Hello World");
        btn.setOnAction(new EventHandler&lt;ActionEvent&gt;() {
 
            public void handle(ActionEvent event) {
                System.out.println("Hello World");
            }
        });
        root.getChildren().add(btn);
        primaryStage.setScene(scene);
        primaryStage.show();
    }
}
</pre></div>
<!-- class="example" -->
<p>The "Hello World" code creates a window with a single button. The <code>setOnAction()</code> method is used to register an event handler that handles the action events that are dispatched when the button is clicked. The <code>handle()</code> method in the event handler handles the event by printing the string "Hello World" to the console.</p>
<a id="JFXED106" name="JFXED106" class="anchor"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref25" name="sthref25" class="anchor"></a>
<h3 class="sect2">Examples for Mouse Events</h3>
<p>Convenience methods for registering event handlers for mouse events include <code>setOnMouseEntered</code>, <code>setOnMouseExited</code>, and <code>setOnMousePressed</code>. <a href="#CIHCIJHJ">Example 2-2</a> shows samples of these event handlers.</p>
<div class="example"><a id="CIHCIJHJ" name="CIHCIJHJ" class="anchor"></a><a id="JFXED107" name="JFXED107" class="anchor"></a>
<p class="titleinexample">Example 2-2 Sample Event Handlers for Mouse Events</p>
<pre xml:space="preserve" class="oac_no_warn">final Circle circle = new Circle(radius, Color.RED); 

circle.setOnMouseEntered(new EventHandler&lt;MouseEvent&gt;() {
    public void handle(MouseEvent me) {
        System.out.println("Mouse entered"); 
    }
});

circle.setOnMouseExited(new EventHandler&lt;MouseEvent&gt;() {
    public void handle(MouseEvent me) {
        System.out.println("Mouse exited");
    }
});

circle.setOnMousePressed(new EventHandler&lt;MouseEvent&gt;() {
    public void handle(MouseEvent me) {
        System.out.println("Mouse pressed");
    }
});
</pre></div>
<!-- class="example" -->
<p>To see how similar event handlers are used, run the Ensemble sample, which is available in the JavaFX samples that can be downloaded from the JDK Demos and Samples section of the <a target="_blank" href="http://www.oracle.com/technetwork/java/javase/downloads/">Java SE Downloads page</a>. The Ensemble sample also provides the source code for the event handlers.</p>
</div>
<!-- class="sect2" -->
<a id="JFXED108" name="JFXED108" class="anchor"></a>
<div class="sect2"><!-- infolevel="all" infotype="General" --><a id="sthref26" name="sthref26" class="anchor"></a>
<h3 class="sect2">Examples for Keyboard Events</h3>
<p>Convenience methods for registering event handlers for keyboard events include <code>setOnKeyPressed</code> and <code>setOnKeyReleased</code>. <a href="#CIHFIDJF">Example 2-3</a> shows samples of these event handlers.</p>
<div class="example"><a id="CIHFIDJF" name="CIHFIDJF" class="anchor"></a><a id="JFXED109" name="JFXED109" class="anchor"></a>
<p class="titleinexample">Example 2-3 Sample Event Handlers for Keyboard Events</p>
<pre xml:space="preserve" class="oac_no_warn">final TextField textBox = new TextField();
textBox.setPromptText("Write here");

textBox.setOnKeyPressed(new EventHandler&lt;KeyEvent&gt;() {
    public void handle(KeyEvent ke) {
        System.out.println("Key Pressed: " + ke.getText());
    }
});

textBox.setOnKeyReleased(new EventHandler&lt;KeyEvent&gt;() {
    public void handle(KeyEvent ke) {
        System.out.println("Key Released: " + ke.getText());
    }
});
</pre></div>
<!-- class="example" -->
<p>To see how similar event handlers are used, run the Ensemble sample, which is available in the JavaFX samples that can be downloaded from the JDK Demos and Samples section of the <a target="_blank" href="http://www.oracle.com/technetwork/java/javase/downloads/">Java SE Downloads page</a>. The Ensemble sample also provides the source code for the event handlers.</p>
</div>
<!-- class="sect2" --></div>
<!-- class="sect1" -->
<a id="JFXED116" name="JFXED116" class="anchor"></a>
<div class="sect1"><!-- infolevel="all" infotype="General" --><a id="sthref27" name="sthref27" class="anchor"></a>
<h2 class="sect1">Additional Resources</h2>
<p>For information on the available convenience methods, see the <a href="../api/javafx/event/package-summary.html">JavaFX API documentation</a>.</p>
</div>
<!-- class="sect1" -->

</article>

<div id=rightslider>


<!--/*///////////////////////////////////////////////////////////////////////
PANEL 1 /* table of contents */
///////////////////////////////////////////////////////////////////////*/-->

<div id="panel1" class="panel shadow">
<div class="panellists">
<div style="float:right;"><a href="#" id="X"><img src="../../assets/img-common/X.png"   alt="Close Window" title="Close Table of Contents Window" /></a></div>
	<h3>Table of Contents</h3>
		<script type="text/javascript" src="../../assets/js/tree.menu.js" >

/***********************************************
* Simple Tree Menu - (c) Dynamic Drive DHTML code library (www.dynamicdrive.com)
* This notice MUST stay intact for legal use
* Visit Dynamic Drive at http://www.dynamicdrive.com/ for full source code
***********************************************/

/*http://www.dynamicdrive.com/dynamicindex1/navigate1.htm*/
</script>

<h2>JavaFX: Handling Events</h2>

<a href="javascript:ddtreemenu.flatten('treemenu1', 'expand')">Expand</a> | <a href="javascript:ddtreemenu.flatten('treemenu1', 'contact')">Collapse</a>

<ul id="treemenu1" class="treeview">
    <li><a href="title.htm#top">Title and Copyright Information</a></li>
    <li><a href="preface.htm#sthref2">Preface</a>
      <ul>
        <li><a href="preface.htm#sthref3">Audience</a></li>
        <li><a href="preface.htm#sthref4">Documentation Accessibility</a></li>
        <li><a href="preface.htm#sthref6">Related Documents</a></li>
        <li><a href="preface.htm#sthref7">Conventions</a></li>
      </ul>
    </li>
    <li><a href="events.htm#sthref8">Part I Handling Events</a>
    <ul>
    <li><a href="processing.htm#JFXED118">1 Processing Events</a>
      <ul>
        <li><a href="processing.htm#sthref9">Events</a>
          <ul>
          <li><a href="processing.htm#JFXED122">Event Types</a></li>
          <li><a href="processing.htm#sthref12">Event Targets</a></li>
          </ul>
        </li>
        <li><a href="processing.htm#sthref13">Event Delivery Process</a>
          <ul>
          <li><a href="processing.htm#JFXED126">Target Selection</a></li>
          <li><a href="processing.htm#sthref15">Route Construction</a></li>
          <li><a href="processing.htm#sthref17">Event Capturing Phase</a></li>
          <li><a href="processing.htm#sthref18">Event Bubbling Phase</a></li>
          </ul>
        </li>
        <li><a href="processing.htm#sthref19">Event Handling</a>
          <ul>
          <li><a href="processing.htm#JFXED133">Event Filters</a></li>
          <li><a href="processing.htm#sthref20">Event Handlers</a></li>
          <li><a href="processing.htm#sthref21">Consuming of an Event</a></li>
          </ul>
        </li>
        <li><a href="processing.htm#sthref22">Additional Resources</a></li>
      </ul>
    </li>
    <li><a class="selected" href="convenience_methods.htm#JFXED101">2 Working with Convenience Methods</a>
      <ul>
        <li><a href="convenience_methods.htm#sthref23">Using Convenience Methods</a>
          <ul>
          <li><a href="convenience_methods.htm#sthref25">Examples for Mouse Events</a></li>
          <li><a href="convenience_methods.htm#sthref26">Examples for Keyboard Events</a></li>
          </ul>
        </li>
        <li><a href="convenience_methods.htm#sthref27">Additional Resources</a></li>
      </ul>
    </li>
    <li><a href="filters.htm#JFXED137">3 Working with Event Filters</a>
      <ul>
        <li><a href="filters.htm#sthref28">Registering and Removing an Event Filter</a></li>
        <li><a href="filters.htm#sthref29">Using Event Filters</a>
          <ul>
          <li><a href="filters.htm#sthref30">Draggable Panels Example</a></li>
          <li><a href="filters.htm#sthref33">Filters for the Draggable Panels Example</a></li>
          </ul>
        </li>
        <li><a href="filters.htm#sthref34">Additional Resources</a></li>
        <li><a href="filters.htm#sthref35">Application Files</a></li>
      </ul>
    </li>
    <li><a href="handlers.htm#JFXED149">4 Working with Event Handlers</a>
      <ul>
        <li><a href="handlers.htm#sthref38">Registering and Removing an Event Handler</a></li>
        <li><a href="handlers.htm#sthref39">Using Event Handlers</a>
          <ul>
          <li><a href="handlers.htm#sthref40">Keyboard Example</a></li>
          <li><a href="handlers.htm#sthref43">Handlers for the Keyboard Example</a></li>
          </ul>
        </li>
        <li><a href="handlers.htm#sthref44">Additional Resources</a></li>
        <li><a href="handlers.htm#sthref45">Application Files</a></li>
      </ul>
    </li>
    <li><a href="gestures.htm#JFXED166">5 Working with Events from Touch-Enabled Devices</a>
      <ul>
        <li><a href="gestures.htm#sthref48">Gesture and Touch Events</a>
          <ul>
          <li><a href="gestures.htm#sthref50">Targets of Gestures</a></li>
          <li><a href="gestures.htm#sthref51">Other Events Generated</a></li>
          </ul>
        </li>
        <li><a href="gestures.htm#sthref52">Gesture Events Example</a>
          <ul>
          <li><a href="gestures.htm#sthref54">Creating the Shapes</a></li>
          <li><a href="gestures.htm#JFXED173">Handling the Events</a></li>
          <li><a href="gestures.htm#sthref60">Managing the Log</a></li>
          </ul>
        </li>
        <li><a href="gestures.htm#sthref61">Additional Resources</a></li>
        <li><a href="gestures.htm#sthref62">Application Files</a></li>
      </ul>
    </li>
    <li><a href="touch_events.htm#JFXED192">6 Working with Touch Events</a>
      <ul>
        <li><a href="touch_events.htm#sthref65">Overview of Touch Actions</a>
          <ul>
          <li><a href="touch_events.htm#JFXED195">Touch Points</a></li>
          <li><a href="touch_events.htm#JFXED196">Touch Events</a></li>
          <li><a href="touch_events.htm#JFXED197">Event Sets</a></li>
          <li><a href="touch_events.htm#sthref67">Touch Point Targets and Touch Event Targets</a></li>
          <li><a href="touch_events.htm#sthref68">Additional Events Generated from Touches</a></li>
          </ul>
        </li>
        <li><a href="touch_events.htm#JFXED201">Touch Events Example</a>
          <ul>
          <li><a href="touch_events.htm#JFXED203">Handling Concurrent Touch Points Independently</a></li>
          <li><a href="touch_events.htm#JFXED205">Changing the Target of a Touch Point</a></li>
          </ul>
        </li>
        <li><a href="touch_events.htm#sthref70">Additional Resources</a></li>
        <li><a href="touch_events.htm#sthref71">Application Files</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="drag_drop_feature.htm#sthref74">Part II Drag-and-Drop Feature in JavaFX Applications</a>
    <ul>
    <li><a href="drag-drop.htm#JFXED219">7 Drag-and-Drop Operation</a>
      <ul>
        <li><a href="drag-drop.htm#sthref75">Objects and Data Types for Drag-and-Drop Operation</a>
          <ul>
          <li><a href="drag-drop.htm#sthref76">Transfer Modes</a></li>
          </ul>
        </li>
        <li><a href="drag-drop.htm#JFXED223">Implementing a Basic Drag-and-Drop Gesture</a>
          <ul>
          <li><a href="drag-drop.htm#sthref77">Starting the Drag-and-Drop Gesture on a Source</a></li>
          <li><a href="drag-drop.htm#sthref78">Handling a DRAG_OVER Event on a Target</a></li>
          <li><a href="drag-drop.htm#sthref79">Providing Visual Feedback by a Gesture Target</a></li>
          <li><a href="drag-drop.htm#sthref80">Handling a DRAG_DROPPED Event on a Target</a></li>
          <li><a href="drag-drop.htm#sthref81">Handling a DRAG_DONE Event on a Source</a></li>
          <li><a href="drag-drop.htm#sthref82">Dragging Custom Data</a></li>
          </ul>
        </li>
        <li><a href="drag-drop.htm#sthref83">Application Files</a></li>
      </ul>
    </li>
    <li><a href="paper-doll.htm#JFXED260">8 PaperDoll Drag-and-Drop Application</a>
      <ul>
        <li><a href="paper-doll.htm#sthref86">Layout of the PaperDoll Application</a></li>
        <li><a href="paper-doll.htm#sthref88">Organization of the PaperDoll Application</a></li>
        <li><a href="paper-doll.htm#sthref89">Starting the Drag-And-Drop Operation</a></li>
        <li><a href="paper-doll.htm#sthref90">Handling the Drop of the Data</a></li>
        <li><a href="paper-doll.htm#sthref91">Application Files</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="sample-source-code.htm#sthref94">Part III Source Code for the Handling Events Tutorial</a>
    <ul>
    <li><a href="draggablepanelsexamplejava.htm#JFXED240">A DraggablePanelsExample.java</a></li>
    <li><a href="keyboardexamplejava.htm#JFXED244">B KeyboardExample.java</a></li>
    <li><a href="gestureeventsjava.htm#JFXED248">C GestureEvents.java</a></li>
    <li><a href="toucheventsjava.htm#JFXED252">D TouchEvents.java</a></li>
    <li><a href="hellodraganddropjava.htm#JFXED256">E HelloDragAndDrop.java</a></li>
    <li><a href="paperdolljava.htm#sthref95">F Paper Doll Drag-and-Drop Sample</a>
      <ul>
        <li><a href="paperdolljava.htm#JFXED275">PaperDoll.java</a></li>
        <li><a href="paperdolljava.htm#JFXED278">Cloth.java</a></li>
        <li><a href="paperdolljava.htm#JFXED281">ClothListBuilder.java</a></li>
        <li><a href="paperdolljava.htm#JFXED284">Body.java</a></li>
        <li><a href="paperdolljava.htm#JFXED287">BodyElement.java</a></li>
      </ul>
    </li>
</ul>

</li>
</ul>


<script type="text/javascript">

//ddtreemenu.createTree(treeid, enablepersist, opt_persist_in_days (default is 1))

ddtreemenu.createTree("treemenu1", true)
//ddtreemenu.createTree("treemenu2", false)

</script>
</div>
<div style="clear:both;"></div>
</div>


<!--/*///////////////////////////////////////////////////////////////////////
TABS 
///////////////////////////////////////////////////////////////////////*/-->

<a class="trig1 trigger shadow" alt="Table of Contents" title="Contents" href="#"></a>

</div>

<div id="pagenav2"><a class="button" title="Previous Page" href="processing.htm">Previous Page</a><a href="#top"  class="button" title="Top of Page" target="_self">Top of Page</a><a class="button" title="Next Page" href="filters.htm">Next Page</a></div>

<br class="clearfloat" />
<span class="clearfloat"></span>
</div> <!-- .contentarea -->
</div> <!-- .main -->
</div> <!-- #main-container --><!-- content -->

<div class="main wrapper">

<div class="socialicons">

<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a>


<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a>


<a href="" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>


<!--
<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a> 

<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a> 

<a target="_blank" href="http://blogs.oracle.com/thejavatutorials/feed/entries/rss" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>
-->
</div>
<div class="SocialBar">


<div id="tw-like">
<!-- from:twitter:https://twitter.com/about/resources/buttons#tweet -->
<a target="_blank" href="https://twitter.com/share" class="twitter-share-button" data-count="none">Tweet</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</div>



<div id="go-like">
<!-- https://developers.google.com/+/web/+1button/ -->

<!-- Place this tag where you want the +1 button to render. -->
<div class="g-plusone" data-size="medium" data-annotation="none"></div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</div>




<!--<div id="fb-like">

<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like" data-href="https://www.facebook.com/OracleCloudComputing" data-width="450" data-layout="button_count" data-show-faces="false" data-send="true"></div>
</div>-->


</div>
</div>


<div class="footer-containerbook ">
 <footer>
	<span style="display:block;">Copyright &copy; 2011, 2014, Oracle and/or its affiliates. All rights reserved. <a href="../../assets/cpyr.htm">Legal Notices</a></span>
 </footer>
</div>
        
        <br />
        
        <!--<script src="../../assets/js/jquery.min.js"></script>
        <script>window.jQuery || document.write('<script src="../../assets/js/jquery-1.8.0.min.js"><\/script>')</script>-->

<!-- Start SiteCatalyst code -->
<script type="application/javascript" src="https://www.oracleimg.com/us/assets/metrics/ora_docs.js"></script>
<!-- End SiteCatalyst code -->


</body>
</html>
