<!DOCTYPE html>
<!--[if lt IE 7]>      <html lang="en" class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html lang="en" class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html lang="en" class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html lang="en" class="no-js"> <!--<![endif]-->

<head>

<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<title>A DraggablePanelsExample.java (Release 8)</title>
<meta name="description" content="For a description, see Working with Event Filters.">

<meta name="viewport" content="width=device-width">

<link rel="stylesheet" href="../../assets/css/main.css">
<link rel="stylesheet" href="../../assets/css/main-media-480-tablet.css">
<link rel="stylesheet" href="../../assets/css/main-media-768-laptop.css">
<link rel="stylesheet" href="../../assets/css/main-media-1140-deskp.css">

<link rel="stylesheet" href="../../assets/css/simpletree.css">
<link rel="stylesheet" href="../../assets/css/forms.css">
<link rel="stylesheet" href="../../assets/css/panel.css">
<link rel="stylesheet" href="../../assets/css/altanav.css">
<link rel="stylesheet" href="../../assets/css/docstyles.css">

<link rel="stylesheet" href="../../assets/css/print.css">
<link rel="stylesheet" href="../../assets/css/home.css">
<link rel="stylesheet" href="../../assets/css/normalize.min.css">    

        
<!--[if lt IE 9]>
<link rel="stylesheet" href="../../assets/css/ltIE9.css">
<![endif]-->         
        
<script src="../../assets/js/jquery-1.6.2.js"></script>
<script src="../../assets/js/modernizr-2.6.1-respond-1.1.0.min.js"></script>

<!--toggle search-->
<script src="../../assets/js/toggle.search.js"  type="text/javascript"></script>
<!--navigation main-->
<script src="../../assets/js/altanav.js"  type="text/javascript"></script> 
<!--custom tag element-->
<script src="../../assets/js/customhtmltags.js"  type="text/javascript"></script> 

<!--project specific head data-->
  
<!-- Function for printing -->  
<script>
function PrintPage()
  {window.print();}
</script>

<script>
  $(window).unload(function() {
  });
</script>


<!-- keep select menu's sticking when hit back button-->
<script>
$(window).load(function () {
    $("select").each(function () {
        $(this).val($(this).find('option[selected]').val());
    });
});
</script>

<script>window.ohcglobal || document.write('<script src="/en/dcommon/js/global.js">\x3C/script>')</script></head>

<body>
<!--[if lt IE 7]>
<div style="border-bottom: 1px solid #A3A481; background-color: #FFFFDC; padding: 10px; font: normal 13px/16px Arial, sans-serif;">
<strong>You are running an older version of Internet Explorer or running Internet Explorer in compatibility mode.</strong>  For a richer experience, please upgrade to the latest <a target="_blank" href="http://windows.microsoft.com/en-US/internet-explorer/downloads/ie" target="_blank">Internet Explorer</a> version, or use <a target="_blank" href="http://www.google.com/chrome/" target="_blank">Chrome</a>, <a target="_blank" href="http://www.mozilla.com/en-US/firefox/" target="_blank">Firefox</a>, or <a target="_blank" href="http://www.apple.com/safari/" target="_blank">Safari</a>.
</div>
<![endif]--> 

<div id="altlogo">Oracle | Hardware and Software, Engineered to Work Together</div>

<span id="top"></span>


<div class="header-container">
<header class="bookwrapper  clearfix">

<div id="brandProdName" >
<div id="logocover"></div>
<div id="productName" >Documentation</div>
</div> 

<div id="signInArea"></div>
<script type="text/javascript">
$(document).ready(function() {
$("#signInArea").load("../../version.html");
});
</script>

<div id="searchheader">
<a href="/javase/search.html" class="button">Search Java SE Documentation</a></div>

<!-- Main Navigation -->
 <br class="clearfloat" />
 <div id="navBar" class="io" >

<!--
<ul>
<li><a class="menu1" title="Home" href="pg-home.php"><span>Home</span></a></li>
<li><a class="menu2" title="What's New"><span>What's New</span><span class="dropdown-arrow"></span></a></li>
<li><a class="menu3" title="All Books" href="pg-allbooks-infotype.php"><span>All Books</span></a></li>
</ul>
-->
</div>
            <br class="clearfloat" />
<!--         
<div id="navcontainer" >
<div class="submenu2 shadow" ><h3>See What's New in <strong>SE</strong> Documentation</h3>
</div>

</div> -->
            <br class="clearfloat" />
<!-- End Main Navigation -->


  </header>
</div><!-- header -->

<div class="main-container" >
<div class="main bookwrapper bookindent clearfix" >

<div id="breadcrumb">
  <a href="../../index.html">Java Platform, Standard Edition (Java SE) 8</a>
</div>
<div class="bookoptions"><a href="mailto:javasedocs_us@oracle.com" title="Send Feedback">Send Feedback</a> | <a href="#" onclick="PrintPage();">Print</a>
 | <a href="../JFXED.pdf">PDF</a> | <a href="../JFXED.epub">ePub</a> | <a href="../JFXED.mobi">Mobi</a>
</div>

<div class="booktitle">JavaFX: Handling Events</div>

<div class="contentarea clearboth">

<script type="text/javascript">

$(document).ready(function(){

//////////////////////
$(".trig1").click(function(){
        $("#panel1").toggle("fast"); <!--/*makes panel visible*/-->
        $(this).toggleClass("active"); <!--makes trigger expand out-->
        return false;
    });

///////////////////////

$("#X").click(function(){
      // trigger click is needed for css .active to work
	  $( ".trig1" ).trigger( "click" );
   return false;
    });

/*/////////////////////

$("#panel1").mouseleave(function(){
  $( ".trig1" ).trigger( "click" );
   return false;
});

/////////////////////*/
});

</script>


<!-- page navigation -->

<!--div id="tocbutton" ><span class="button"><a href="#mypanel"><img src="../../assets/img-common/3linemenu.png" alt="menu icon" />Menu</a></span></div-->

<div id="pagenav"><a class="button" title="Previous Page" href="sample-source-code.htm">Previous Page</a><a class="button" title="Next Page" href="keyboardexamplejava.htm">Next Page</a></div>

<article>

<!-- End Header --><a id="CHDHIGHI" name="CHDHIGHI" class="anchor"></a><a id="JFXED240" name="JFXED240" class="anchor"></a>
<h1 class="appendix"><span class="secnum">A</span> DraggablePanelsExample.java</h1>
<a id="JFXED241" name="JFXED241" class="anchor"></a>
<p>For a description, see <a href="filters.htm#BCFDCCEJ">Working with Event Filters</a>.</p>
<a id="JFXED242" name="JFXED242" class="anchor"></a>
<p class="subhead2">Legal Terms and Copyright Notice</p>
<pre xml:space="preserve" class="oac_no_warn">/*
 * Copyright (c) 2012, 2014, Oracle and/or its affiliates.
 * All rights reserved. Use is subject to license terms.
 *
 * This file is available and licensed under the following license:
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *  - Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  - Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the distribution.
 *  - Neither the name of Oracle nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
</pre>
<a id="JFXED243" name="JFXED243" class="anchor"></a>
<p class="subhead2">Code</p>
<pre xml:space="preserve" class="oac_no_warn">package draggablepanelsexample;
 
import javafx.application.Application;
import javafx.beans.binding.Bindings;
import javafx.beans.property.BooleanProperty;
import javafx.beans.property.SimpleBooleanProperty;
import javafx.collections.FXCollections;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Group;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.ProgressIndicator;
import javafx.scene.control.RadioButton;
import javafx.scene.control.Slider;
import javafx.scene.control.TextField;
import javafx.scene.control.ToggleGroup;
import javafx.scene.control.Tooltip;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.layout.Region;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
 
public final class DraggablePanelsExample extends Application {
    private final BooleanProperty dragModeActiveProperty =
            new SimpleBooleanProperty(this, "dragModeActive", true);
 
    @Override
    public void start(final Stage stage) {
        final Node loginPanel =
                makeDraggable(createLoginPanel());
        final Node confirmationPanel =
                makeDraggable(createConfirmationPanel());
        final Node progressPanel =
                makeDraggable(createProgressPanel());
 
        loginPanel.relocate(0, 0);
        confirmationPanel.relocate(0, 67);
        progressPanel.relocate(0, 106);
 
        final Pane panelsPane = new Pane();
        panelsPane.getChildren().addAll(loginPanel,
                                        confirmationPanel,
                                        progressPanel);
 
        final BorderPane sceneRoot = new BorderPane();
 
        BorderPane.setAlignment(panelsPane, Pos.TOP_LEFT);
        sceneRoot.setCenter(panelsPane);
 
        final CheckBox dragModeCheckbox = new CheckBox("Drag mode");
        BorderPane.setMargin(dragModeCheckbox, new Insets(6));
        sceneRoot.setBottom(dragModeCheckbox);
 
        dragModeActiveProperty.bind(dragModeCheckbox.selectedProperty());
 
        final Scene scene = new Scene(sceneRoot, 400, 300);
        stage.setScene(scene);
        stage.setTitle("Draggable Panels Example");
        stage.show();
    }
 
    public static void main(final String[] args) {
        launch(args);
    }
 
    private Node makeDraggable(final Node node) {
        final DragContext dragContext = new DragContext();
        final Group wrapGroup = new Group(node);
 
        wrapGroup.addEventFilter(
                MouseEvent.ANY,
                new EventHandler&lt;MouseEvent&gt;() {
                    @Override
                    public void handle(final MouseEvent mouseEvent) {
                        if (dragModeActiveProperty.get()) {
                            // disable mouse events for all children
                            mouseEvent.consume();
                        }
                    }
                });
 
        wrapGroup.addEventFilter(
                MouseEvent.MOUSE_PRESSED,
                new EventHandler&lt;MouseEvent&gt;() {
                    @Override
                    public void handle(final MouseEvent mouseEvent) {
                        if (dragModeActiveProperty.get()) {
                            // remember initial mouse cursor coordinates
                            // and node position
                            dragContext.mouseAnchorX = mouseEvent.getX();
                            dragContext.mouseAnchorY = mouseEvent.getY();
                            dragContext.initialTranslateX =
                                    node.getTranslateX();
                            dragContext.initialTranslateY =
                                    node.getTranslateY();
                        }
                    }
                });
 
        wrapGroup.addEventFilter(
                MouseEvent.MOUSE_DRAGGED,
                new EventHandler&lt;MouseEvent&gt;() {
                    @Override
                    public void handle(final MouseEvent mouseEvent) {
                        if (dragModeActiveProperty.get()) {
                            // shift node from its initial position by delta
                            // calculated from mouse cursor movement
                            node.setTranslateX(
                                    dragContext.initialTranslateX
                                        + mouseEvent.getX()
                                        - dragContext.mouseAnchorX);
                            node.setTranslateY(
                                    dragContext.initialTranslateY
                                        + mouseEvent.getY()
                                        - dragContext.mouseAnchorY);
                        }
                    }
                });
                
        return wrapGroup;
    }
 
    private static Node createLoginPanel() {
        final ToggleGroup toggleGroup = new ToggleGroup();
 
        final TextField textField = new TextField();
        textField.setPrefColumnCount(10);
        textField.setPromptText("Your name");
 
        final PasswordField passwordField = new PasswordField();
        passwordField.setPrefColumnCount(10);
        passwordField.setPromptText("Your password");
 
        final ChoiceBox&lt;String&gt; choiceBox = new ChoiceBox&lt;&gt;(
                FXCollections.observableArrayList(
                        "English", "\u0420\u0443\u0441\u0441\u043a\u0438\u0439",
                        "Fran\u00E7ais"));
        choiceBox.setTooltip(new Tooltip("Your language"));
        choiceBox.getSelectionModel().select(0);
 
        final HBox panel =
                createHBox(6,
                    createVBox(2, createRadioButton("High", toggleGroup, true),
                                  createRadioButton("Medium", toggleGroup,
                                                    false),
                                  createRadioButton("Low", toggleGroup, false)),
                    createVBox(2, textField, passwordField),
                    choiceBox);
        panel.setAlignment(Pos.BOTTOM_LEFT);
        configureBorder(panel);
 
        return panel;
    }
 
    private static Node createConfirmationPanel() {
        final Label acceptanceLabel = new Label("Not Available");
 
        final Button acceptButton = new Button("Accept");
        acceptButton.setOnAction(
                new EventHandler&lt;ActionEvent&gt;() {
                    @Override
                    public void handle(final ActionEvent event) {
                        acceptanceLabel.setText("Accepted");
                    }
                });
 
        final Button declineButton = new Button("Decline");
        declineButton.setOnAction(
                new EventHandler&lt;ActionEvent&gt;() {
                    @Override
                    public void handle(final ActionEvent event) {
                        acceptanceLabel.setText("Declined");
                    }
                });
 
        final HBox panel = createHBox(6, acceptButton,
                                         declineButton,
                                         acceptanceLabel);
        panel.setAlignment(Pos.CENTER_LEFT);
        configureBorder(panel);
 
        return panel;
    }
 
    private static Node createProgressPanel() {
        final Slider slider = new Slider();
 
        final ProgressIndicator progressIndicator = new ProgressIndicator(0);
        progressIndicator.progressProperty().bind(
                Bindings.divide(slider.valueProperty(),
                                slider.maxProperty()));
 
        final HBox panel = createHBox(6, new Label("Progress:"),
                                         slider,
                                         progressIndicator);
        configureBorder(panel);
 
        return panel;
    }
 
    private static void configureBorder(final Region region) {
        region.setStyle("-fx-background-color: white;"
                            + "-fx-border-color: black;"
                            + "-fx-border-width: 1;"
                            + "-fx-border-radius: 6;"
                            + "-fx-padding: 6;");
    }
 
    private static RadioButton createRadioButton(final String text,
                                                 final ToggleGroup toggleGroup,
                                                 final boolean selected) {
        final RadioButton radioButton = new RadioButton(text);
        radioButton.setToggleGroup(toggleGroup);
        radioButton.setSelected(selected);
 
        return radioButton;
    }
 
    private static HBox createHBox(final double spacing,
                                   final Node... children) {
        final HBox hbox = new HBox(spacing);
        hbox.getChildren().addAll(children);
        return hbox;
    }
 
    private static VBox createVBox(final double spacing,
                                   final Node... children) {
        final VBox vbox = new VBox(spacing);
        vbox.getChildren().addAll(children);
        return vbox;
    }
 
    private static final class DragContext {
        public double mouseAnchorX;
        public double mouseAnchorY;
        public double initialTranslateX;
        public double initialTranslateY;
    }
}
</pre>

</article>

<div id=rightslider>


<!--/*///////////////////////////////////////////////////////////////////////
PANEL 1 /* table of contents */
///////////////////////////////////////////////////////////////////////*/-->

<div id="panel1" class="panel shadow">
<div class="panellists">
<div style="float:right;"><a href="#" id="X"><img src="../../assets/img-common/X.png"   alt="Close Window" title="Close Table of Contents Window" /></a></div>
	<h3>Table of Contents</h3>
		<script type="text/javascript" src="../../assets/js/tree.menu.js" >

/***********************************************
* Simple Tree Menu - (c) Dynamic Drive DHTML code library (www.dynamicdrive.com)
* This notice MUST stay intact for legal use
* Visit Dynamic Drive at http://www.dynamicdrive.com/ for full source code
***********************************************/

/*http://www.dynamicdrive.com/dynamicindex1/navigate1.htm*/
</script>

<h2>JavaFX: Handling Events</h2>

<a href="javascript:ddtreemenu.flatten('treemenu1', 'expand')">Expand</a> | <a href="javascript:ddtreemenu.flatten('treemenu1', 'contact')">Collapse</a>

<ul id="treemenu1" class="treeview">
    <li><a href="title.htm#top">Title and Copyright Information</a></li>
    <li><a href="preface.htm#sthref2">Preface</a>
      <ul>
        <li><a href="preface.htm#sthref3">Audience</a></li>
        <li><a href="preface.htm#sthref4">Documentation Accessibility</a></li>
        <li><a href="preface.htm#sthref6">Related Documents</a></li>
        <li><a href="preface.htm#sthref7">Conventions</a></li>
      </ul>
    </li>
    <li><a href="events.htm#sthref8">Part I Handling Events</a>
    <ul>
    <li><a href="processing.htm#JFXED118">1 Processing Events</a>
      <ul>
        <li><a href="processing.htm#sthref9">Events</a>
          <ul>
          <li><a href="processing.htm#JFXED122">Event Types</a></li>
          <li><a href="processing.htm#sthref12">Event Targets</a></li>
          </ul>
        </li>
        <li><a href="processing.htm#sthref13">Event Delivery Process</a>
          <ul>
          <li><a href="processing.htm#JFXED126">Target Selection</a></li>
          <li><a href="processing.htm#sthref15">Route Construction</a></li>
          <li><a href="processing.htm#sthref17">Event Capturing Phase</a></li>
          <li><a href="processing.htm#sthref18">Event Bubbling Phase</a></li>
          </ul>
        </li>
        <li><a href="processing.htm#sthref19">Event Handling</a>
          <ul>
          <li><a href="processing.htm#JFXED133">Event Filters</a></li>
          <li><a href="processing.htm#sthref20">Event Handlers</a></li>
          <li><a href="processing.htm#sthref21">Consuming of an Event</a></li>
          </ul>
        </li>
        <li><a href="processing.htm#sthref22">Additional Resources</a></li>
      </ul>
    </li>
    <li><a href="convenience_methods.htm#JFXED101">2 Working with Convenience Methods</a>
      <ul>
        <li><a href="convenience_methods.htm#sthref23">Using Convenience Methods</a>
          <ul>
          <li><a href="convenience_methods.htm#sthref25">Examples for Mouse Events</a></li>
          <li><a href="convenience_methods.htm#sthref26">Examples for Keyboard Events</a></li>
          </ul>
        </li>
        <li><a href="convenience_methods.htm#sthref27">Additional Resources</a></li>
      </ul>
    </li>
    <li><a href="filters.htm#JFXED137">3 Working with Event Filters</a>
      <ul>
        <li><a href="filters.htm#sthref28">Registering and Removing an Event Filter</a></li>
        <li><a href="filters.htm#sthref29">Using Event Filters</a>
          <ul>
          <li><a href="filters.htm#sthref30">Draggable Panels Example</a></li>
          <li><a href="filters.htm#sthref33">Filters for the Draggable Panels Example</a></li>
          </ul>
        </li>
        <li><a href="filters.htm#sthref34">Additional Resources</a></li>
        <li><a href="filters.htm#sthref35">Application Files</a></li>
      </ul>
    </li>
    <li><a href="handlers.htm#JFXED149">4 Working with Event Handlers</a>
      <ul>
        <li><a href="handlers.htm#sthref38">Registering and Removing an Event Handler</a></li>
        <li><a href="handlers.htm#sthref39">Using Event Handlers</a>
          <ul>
          <li><a href="handlers.htm#sthref40">Keyboard Example</a></li>
          <li><a href="handlers.htm#sthref43">Handlers for the Keyboard Example</a></li>
          </ul>
        </li>
        <li><a href="handlers.htm#sthref44">Additional Resources</a></li>
        <li><a href="handlers.htm#sthref45">Application Files</a></li>
      </ul>
    </li>
    <li><a href="gestures.htm#JFXED166">5 Working with Events from Touch-Enabled Devices</a>
      <ul>
        <li><a href="gestures.htm#sthref48">Gesture and Touch Events</a>
          <ul>
          <li><a href="gestures.htm#sthref50">Targets of Gestures</a></li>
          <li><a href="gestures.htm#sthref51">Other Events Generated</a></li>
          </ul>
        </li>
        <li><a href="gestures.htm#sthref52">Gesture Events Example</a>
          <ul>
          <li><a href="gestures.htm#sthref54">Creating the Shapes</a></li>
          <li><a href="gestures.htm#JFXED173">Handling the Events</a></li>
          <li><a href="gestures.htm#sthref60">Managing the Log</a></li>
          </ul>
        </li>
        <li><a href="gestures.htm#sthref61">Additional Resources</a></li>
        <li><a href="gestures.htm#sthref62">Application Files</a></li>
      </ul>
    </li>
    <li><a href="touch_events.htm#JFXED192">6 Working with Touch Events</a>
      <ul>
        <li><a href="touch_events.htm#sthref65">Overview of Touch Actions</a>
          <ul>
          <li><a href="touch_events.htm#JFXED195">Touch Points</a></li>
          <li><a href="touch_events.htm#JFXED196">Touch Events</a></li>
          <li><a href="touch_events.htm#JFXED197">Event Sets</a></li>
          <li><a href="touch_events.htm#sthref67">Touch Point Targets and Touch Event Targets</a></li>
          <li><a href="touch_events.htm#sthref68">Additional Events Generated from Touches</a></li>
          </ul>
        </li>
        <li><a href="touch_events.htm#JFXED201">Touch Events Example</a>
          <ul>
          <li><a href="touch_events.htm#JFXED203">Handling Concurrent Touch Points Independently</a></li>
          <li><a href="touch_events.htm#JFXED205">Changing the Target of a Touch Point</a></li>
          </ul>
        </li>
        <li><a href="touch_events.htm#sthref70">Additional Resources</a></li>
        <li><a href="touch_events.htm#sthref71">Application Files</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="drag_drop_feature.htm#sthref74">Part II Drag-and-Drop Feature in JavaFX Applications</a>
    <ul>
    <li><a href="drag-drop.htm#JFXED219">7 Drag-and-Drop Operation</a>
      <ul>
        <li><a href="drag-drop.htm#sthref75">Objects and Data Types for Drag-and-Drop Operation</a>
          <ul>
          <li><a href="drag-drop.htm#sthref76">Transfer Modes</a></li>
          </ul>
        </li>
        <li><a href="drag-drop.htm#JFXED223">Implementing a Basic Drag-and-Drop Gesture</a>
          <ul>
          <li><a href="drag-drop.htm#sthref77">Starting the Drag-and-Drop Gesture on a Source</a></li>
          <li><a href="drag-drop.htm#sthref78">Handling a DRAG_OVER Event on a Target</a></li>
          <li><a href="drag-drop.htm#sthref79">Providing Visual Feedback by a Gesture Target</a></li>
          <li><a href="drag-drop.htm#sthref80">Handling a DRAG_DROPPED Event on a Target</a></li>
          <li><a href="drag-drop.htm#sthref81">Handling a DRAG_DONE Event on a Source</a></li>
          <li><a href="drag-drop.htm#sthref82">Dragging Custom Data</a></li>
          </ul>
        </li>
        <li><a href="drag-drop.htm#sthref83">Application Files</a></li>
      </ul>
    </li>
    <li><a href="paper-doll.htm#JFXED260">8 PaperDoll Drag-and-Drop Application</a>
      <ul>
        <li><a href="paper-doll.htm#sthref86">Layout of the PaperDoll Application</a></li>
        <li><a href="paper-doll.htm#sthref88">Organization of the PaperDoll Application</a></li>
        <li><a href="paper-doll.htm#sthref89">Starting the Drag-And-Drop Operation</a></li>
        <li><a href="paper-doll.htm#sthref90">Handling the Drop of the Data</a></li>
        <li><a href="paper-doll.htm#sthref91">Application Files</a></li>
      </ul>
    </li>
</ul>
</li>
    <li><a href="sample-source-code.htm#sthref94">Part III Source Code for the Handling Events Tutorial</a>
    <ul>
    <li><a class="selected" href="draggablepanelsexamplejava.htm#JFXED240">A DraggablePanelsExample.java</a></li>
    <li><a href="keyboardexamplejava.htm#JFXED244">B KeyboardExample.java</a></li>
    <li><a href="gestureeventsjava.htm#JFXED248">C GestureEvents.java</a></li>
    <li><a href="toucheventsjava.htm#JFXED252">D TouchEvents.java</a></li>
    <li><a href="hellodraganddropjava.htm#JFXED256">E HelloDragAndDrop.java</a></li>
    <li><a href="paperdolljava.htm#sthref95">F Paper Doll Drag-and-Drop Sample</a>
      <ul>
        <li><a href="paperdolljava.htm#JFXED275">PaperDoll.java</a></li>
        <li><a href="paperdolljava.htm#JFXED278">Cloth.java</a></li>
        <li><a href="paperdolljava.htm#JFXED281">ClothListBuilder.java</a></li>
        <li><a href="paperdolljava.htm#JFXED284">Body.java</a></li>
        <li><a href="paperdolljava.htm#JFXED287">BodyElement.java</a></li>
      </ul>
    </li>
</ul>

</li>
</ul>


<script type="text/javascript">

//ddtreemenu.createTree(treeid, enablepersist, opt_persist_in_days (default is 1))

ddtreemenu.createTree("treemenu1", true)
//ddtreemenu.createTree("treemenu2", false)

</script>
</div>
<div style="clear:both;"></div>
</div>


<!--/*///////////////////////////////////////////////////////////////////////
TABS 
///////////////////////////////////////////////////////////////////////*/-->

<a class="trig1 trigger shadow" alt="Table of Contents" title="Contents" href="#"></a>

</div>

<div id="pagenav2"><a class="button" title="Previous Page" href="sample-source-code.htm">Previous Page</a><a href="#top"  class="button" title="Top of Page" target="_self">Top of Page</a><a class="button" title="Next Page" href="keyboardexamplejava.htm">Next Page</a></div>

<br class="clearfloat" />
<span class="clearfloat"></span>
</div> <!-- .contentarea -->
</div> <!-- .main -->
</div> <!-- #main-container --><!-- content -->

<div class="main wrapper">

<div class="socialicons">

<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a>


<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a>


<a href="" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>


<!--
<a target="_blank" href="https://www.facebook.com/ilovejava" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Facebook" class="socialIcon facebook" /></a> 

<a target="_blank" href="https://www.twitter.com/java" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="Twitter" class="socialIcon twitter" /></a> 

<a target="_blank" href="http://blogs.oracle.com/thejavatutorials/feed/entries/rss" target="_blank"><img src="../../assets/img-common/f_spacer.gif" alt="RSS Feeds" class="socialIcon rss" /></a>
-->
</div>
<div class="SocialBar">


<div id="tw-like">
<!-- from:twitter:https://twitter.com/about/resources/buttons#tweet -->
<a target="_blank" href="https://twitter.com/share" class="twitter-share-button" data-count="none">Tweet</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>
</div>



<div id="go-like">
<!-- https://developers.google.com/+/web/+1button/ -->

<!-- Place this tag where you want the +1 button to render. -->
<div class="g-plusone" data-size="medium" data-annotation="none"></div>

<!-- Place this tag after the last +1 button tag. -->
<script type="text/javascript">
  (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
</script>
</div>




<!--<div id="fb-like">

<div id="fb-root"></div>
<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>

<div class="fb-like" data-href="https://www.facebook.com/OracleCloudComputing" data-width="450" data-layout="button_count" data-show-faces="false" data-send="true"></div>
</div>-->


</div>
</div>


<div class="footer-containerbook ">
 <footer>
	<span style="display:block;">Copyright &copy; 2011, 2014, Oracle and/or its affiliates. All rights reserved. <a href="../../assets/cpyr.htm">Legal Notices</a></span>
 </footer>
</div>
        
        <br />
        
        <!--<script src="../../assets/js/jquery.min.js"></script>
        <script>window.jQuery || document.write('<script src="../../assets/js/jquery-1.8.0.min.js"><\/script>')</script>-->

<!-- Start SiteCatalyst code -->
<script type="application/javascript" src="https://www.oracleimg.com/us/assets/metrics/ora_docs.js"></script>
<!-- End SiteCatalyst code -->


</body>
</html>
